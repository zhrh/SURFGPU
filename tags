!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
$ sim$ Surf	latex/classSurf.tex	/^\\subsubsection[{$\\sim$\\-Surf}]{\\setlength{\\rightskip}{0pt plus 5cm}Surf\\-::$\\sim$\\-Surf ($/;"	b
ARCHITECTURE_ID	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	299;"	d	file:
ARCHITECTURE_ID	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	302;"	d	file:
ARCHITECTURE_ID	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	305;"	d	file:
ARCHITECTURE_ID	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	308;"	d	file:
ARCHITECTURE_ID	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	311;"	d	file:
ARCHITECTURE_ID	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	314;"	d	file:
ARCHITECTURE_ID	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	317;"	d	file:
ARCHITECTURE_ID	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	321;"	d	file:
ARCHITECTURE_ID	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	286;"	d	file:
ARCHITECTURE_ID	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	289;"	d	file:
ARCHITECTURE_ID	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	292;"	d	file:
ARCHITECTURE_ID	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	295;"	d	file:
ARCHITECTURE_ID	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	298;"	d	file:
ARCHITECTURE_ID	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	301;"	d	file:
ARCHITECTURE_ID	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	304;"	d	file:
ARCHITECTURE_ID	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	308;"	d	file:
AssignToClusters	kmeans.h	/^bool Kmeans::AssignToClusters()$/;"	f	class:Kmeans
BUILDDETGPU_H	buildDetGPU.h	24;"	d
BUILDSURFDESCRIPTORSGPU_H	buildSURFDescriptorsGPU.h	24;"	d
CMAKE_BINARY_DIR	Makefile	/^CMAKE_BINARY_DIR = \/home\/zrh\/SURFGPU-1.2.1$/;"	m
CMAKE_COMMAND	Makefile	/^CMAKE_COMMAND = \/usr\/local\/bin\/cmake$/;"	m
CMAKE_SOURCE_DIR	Makefile	/^CMAKE_SOURCE_DIR = \/home\/zrh\/SURFGPU-1.2.1$/;"	m
COLOURS	utils.cpp	/^static const CvScalar COLOURS [] = {cvScalar(255,0,0), cvScalar(0,255,0),$/;"	v	file:
COMPILER_ID	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	107;"	d	file:
COMPILER_ID	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	112;"	d	file:
COMPILER_ID	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	119;"	d	file:
COMPILER_ID	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	122;"	d	file:
COMPILER_ID	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	125;"	d	file:
COMPILER_ID	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	133;"	d	file:
COMPILER_ID	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	13;"	d	file:
COMPILER_ID	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	152;"	d	file:
COMPILER_ID	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	160;"	d	file:
COMPILER_ID	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	171;"	d	file:
COMPILER_ID	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	178;"	d	file:
COMPILER_ID	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	195;"	d	file:
COMPILER_ID	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	198;"	d	file:
COMPILER_ID	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	201;"	d	file:
COMPILER_ID	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	24;"	d	file:
COMPILER_ID	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	32;"	d	file:
COMPILER_ID	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	38;"	d	file:
COMPILER_ID	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	44;"	d	file:
COMPILER_ID	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	50;"	d	file:
COMPILER_ID	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	56;"	d	file:
COMPILER_ID	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	70;"	d	file:
COMPILER_ID	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	77;"	d	file:
COMPILER_ID	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	85;"	d	file:
COMPILER_ID	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	88;"	d	file:
COMPILER_ID	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	90;"	d	file:
COMPILER_ID	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	99;"	d	file:
COMPILER_ID	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	104;"	d	file:
COMPILER_ID	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	112;"	d	file:
COMPILER_ID	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	117;"	d	file:
COMPILER_ID	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	124;"	d	file:
COMPILER_ID	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	127;"	d	file:
COMPILER_ID	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	12;"	d	file:
COMPILER_ID	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	135;"	d	file:
COMPILER_ID	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	154;"	d	file:
COMPILER_ID	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	162;"	d	file:
COMPILER_ID	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	165;"	d	file:
COMPILER_ID	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	182;"	d	file:
COMPILER_ID	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	185;"	d	file:
COMPILER_ID	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	188;"	d	file:
COMPILER_ID	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	18;"	d	file:
COMPILER_ID	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	29;"	d	file:
COMPILER_ID	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	37;"	d	file:
COMPILER_ID	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	43;"	d	file:
COMPILER_ID	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	49;"	d	file:
COMPILER_ID	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	55;"	d	file:
COMPILER_ID	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	61;"	d	file:
COMPILER_ID	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	75;"	d	file:
COMPILER_ID	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	82;"	d	file:
COMPILER_ID	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	90;"	d	file:
COMPILER_ID	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	93;"	d	file:
COMPILER_ID	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	95;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	100;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	108;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	114;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	126;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	135;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	154;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	15;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	173;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	181;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	186;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	25;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	33;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	39;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	46;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	52;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	59;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	64;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	72;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	79;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	93;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	105;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	113;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	119;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	128;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	137;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	14;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	156;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	168;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	173;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	20;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	30;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	38;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	44;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	51;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	57;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	64;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	69;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	77;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	84;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	98;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	101;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	109;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	115;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	127;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	136;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	155;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	16;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	174;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	182;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	187;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	26;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	34;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	40;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	47;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	53;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	60;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	65;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	73;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	80;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	94;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	106;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	114;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	120;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	129;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	138;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	157;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	15;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	169;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	174;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	21;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	31;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	39;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	45;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	52;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	58;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	65;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	70;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	78;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	85;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	99;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	103;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	116;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	129;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	140;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	143;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	156;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	175;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	17;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	183;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	188;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	28;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	35;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	41;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	61;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	66;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	74;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	81;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	95;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	100;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	108;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	121;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	131;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	142;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	145;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	158;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	170;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	175;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	22;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	33;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	40;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	46;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	66;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	71;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	79;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	86;"	d	file:
COMPILER_VERSION_TWEAK	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	147;"	d	file:
COMPILER_VERSION_TWEAK	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	20;"	d	file:
COMPILER_VERSION_TWEAK	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	149;"	d	file:
COMPILER_VERSION_TWEAK	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	25;"	d	file:
CONVERTRGB2GRAYFLOATGPU_H	convertRGB2GrayFloatGPU.h	24;"	d
CONVERTRGBA2GRAYFLOATGPU_H	convertRGBA2GrayFloatGPU.h	24;"	d
CUDAIMAGE_H	cudaimage.h	24;"	d
CUDA_CHECK_MSG	cuda/helper_funcs.h	59;"	d
CUDA_CHECK_MSG	cuda/helper_funcs.h	62;"	d
CUDA_COMMON_KERNEL_H	cuda/common_kernel.h	24;"	d
CUDA_CUDPP_HELPER_FUNCS_H	cuda/cudpp_helper_funcs.h	24;"	d
CUDA_HELPER_FUNCS_H	cuda/helper_funcs.h	24;"	d
CUDA_SAFE_CALL	cuda/helper_funcs.h	58;"	d
CUDA_SAFE_CALL	cuda/helper_funcs.h	61;"	d
CUDA_STRERROR_CUDPP_H	cuda/strerror_cudpp.h	24;"	d
CUDPP_SAFE_CALL	cuda/cudpp_helper_funcs.h	34;"	d
CUDPP_SAFE_CALL	cuda/cudpp_helper_funcs.h	36;"	d
Class Documentation	latex/refman.tex	/^\\chapter{Class Documentation}$/;"	c
Class Index	latex/refman.tex	/^\\chapter{Class Index}$/;"	c
Class List	latex/annotated.tex	/^\\section{Class List}$/;"	s
Constructor Destructor Documentation	latex/classSurf.tex	/^\\subsection{Constructor \\& Destructor Documentation}$/;"	b
DEC	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	325;"	d	file:
DEC	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	312;"	d	file:
DEFINES_H	defines.h	24;"	d
DETECTIPOINTORIENTATIONSGPU_H	detectIpointOrientationsGPU.h	24;"	d
Distance	kmeans.h	/^float Kmeans::Distance(Ipoint &ip1, Ipoint &ip2)$/;"	f	class:Kmeans
EQUALS	Makefile	/^EQUALS = =$/;"	m
ExtractSurfFeatureGPU	getSurfFeaGPU.cpp	/^int ExtractSurfFeatureGPU(unsigned char* data, int nw, int nh, int *feature_num,float* features)$/;"	f
FASTHESSIAN_CUDAIPOINT_H	fasthessian_cudaipoint.h	24;"	d
FASTHESSIAN_H	fasthessian.h	24;"	d
Fast Hessian Class Reference	latex/classFastHessian.tex	/^\\hypertarget{classFastHessian}{\\section{Fast\\-Hessian Class Reference}$/;"	s
FastHessian	fasthessian.cpp	/^FastHessian::FastHessian(cudaImage *d_img,$/;"	f	class:FastHessian
FastHessian	fasthessian.cpp	/^FastHessian::FastHessian(std::vector<Ipoint> &ipts,$/;"	f	class:FastHessian
FastHessian	fasthessian.h	/^class FastHessian {$/;"	c
GETSURFFEA_H	getSurfFeaGPU.h	2;"	d
GLOBAL_VARIBALE_H	global_variable.h	2;"	d
HEX	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	336;"	d	file:
HEX	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	323;"	d	file:
ID_VOID_MAIN	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	9;"	d	file:
IMG_SIZE_DIVISOR	defines.h	31;"	d
IMUL	cuda/common_kernel.h	30;"	d
IMUL	cuda/common_kernel.h	32;"	d
INIT_SAMPLE	fasthessian.h	/^static const int INIT_SAMPLE = 2;$/;"	v
INTEGRAL_H	integral.h	24;"	d
INTERPOLATION_ENABLED	defines.h	34;"	d
INTERVALS	fasthessian.h	/^static const int INTERVALS = 4;$/;"	v
IPOINT_H	ipoint.h	24;"	d
InitRandomClusters	kmeans.h	/^void Kmeans::InitRandomClusters(int n)$/;"	f	class:Kmeans
Integral	integral.cpp	/^cudaImage* Integral(IplImage *src)$/;"	f
IpPairVec	ipoint.h	/^typedef std::vector<std::pair<Ipoint, Ipoint> > IpPairVec;$/;"	t
IpVec	ipoint.h	/^typedef std::vector<Ipoint> IpVec;$/;"	t
Ipoint	ipoint.h	/^  Ipoint() : orientation(0) {};$/;"	f	class:Ipoint
Ipoint	ipoint.h	/^class Ipoint {$/;"	c
Ipoint Class Reference	latex/classIpoint.tex	/^\\hypertarget{classIpoint}{\\section{Ipoint Class Reference}$/;"	s
Kmeans	kmeans.h	/^  Kmeans() {};$/;"	f	class:Kmeans
Kmeans	kmeans.h	/^class Kmeans {$/;"	c
Kmeans Class Reference	latex/classKmeans.tex	/^\\hypertarget{classKmeans}{\\section{Kmeans Class Reference}$/;"	s
MATCHSURFKEYPOINTSGPU_H	matchSURFKeypointsGPU.h	24;"	d
MAX_IMAGE_NUM	main.cpp	43;"	d	file:
NCOLOURS	utils.cpp	/^static const int NCOLOURS = 8;$/;"	v	file:
NONMAXGPU_H	nonMaxGPU.h	24;"	d
NORMALIZESURFDESCRIPTORSGPU_H	normalizeSURFDescriptorsGPU.h	24;"	d
OCTAVES	fasthessian.h	/^static const int OCTAVES = 4;$/;"	v
PLATFORM_ID	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	213;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	216;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	219;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	222;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	225;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	228;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	231;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	234;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	237;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	240;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	243;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	246;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	249;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	252;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	255;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	258;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	261;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	264;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	267;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	270;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	273;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	276;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	279;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	282;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	285;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	288;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	200;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	203;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	206;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	209;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	212;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	215;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	218;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	221;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	224;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	227;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	230;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	233;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	236;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	239;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	242;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	245;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	248;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	251;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	254;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	257;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	260;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	263;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	266;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	269;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	272;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	275;"	d	file:
PROCEDURE	main.cpp	42;"	d	file:
Public Attributes	latex/classIpoint.tex	/^\\subsection*{Public Attributes}$/;"	b
Public Attributes	latex/classKmeans.tex	/^\\subsection*{Public Attributes}$/;"	b
Public Attributes	latex/structcudaImage.tex	/^\\subsection*{Public Attributes}$/;"	b
Public Attributes	latex/structfasthessian__cudaIpoint.tex	/^\\subsection*{Public Attributes}$/;"	b
Public Attributes	latex/structsurf__cudaIpoint.tex	/^\\subsection*{Public Attributes}$/;"	b
Public Member Functions	latex/classFastHessian.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classIpoint.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classKmeans.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classSurf.tex	/^\\subsection*{Public Member Functions}$/;"	b
RM	Makefile	/^RM = \/usr\/local\/bin\/cmake -E remove -f$/;"	m
RepositionClusters	kmeans.h	/^void Kmeans::RepositionClusters()$/;"	f	class:Kmeans
Run	kmeans.h	/^void Kmeans::Run(IpVec *ipts, int clusters, bool init)$/;"	f	class:Kmeans
SHELL	Makefile	/^SHELL = \/bin\/sh$/;"	m
SUFFIXES	Makefile	/^SUFFIXES =$/;"	m
SURFLIB_H	surflib.h	24;"	d
SURF_CUDAIPOINT_H	surf_cudaipoint.h	24;"	d
SURF_DECRIPTOR_DIM	getSurfFeaGPU.cpp	3;"	d	file:
SURF_H	surf.h	24;"	d
SearchBox	html/search/search.js	/^function SearchBox(name, resultsPath, inFrame, label)$/;"	c
SearchBox.Activate	html/search/search.js	/^  this.Activate = function(isActive)$/;"	m
SearchBox.CloseResultsWindow	html/search/search.js	/^  this.CloseResultsWindow = function()$/;"	m
SearchBox.CloseSelectionWindow	html/search/search.js	/^  this.CloseSelectionWindow = function()$/;"	m
SearchBox.DOMPopupSearchResults	html/search/search.js	/^  this.DOMPopupSearchResults = function()$/;"	m
SearchBox.DOMPopupSearchResultsWindow	html/search/search.js	/^  this.DOMPopupSearchResultsWindow = function()$/;"	m
SearchBox.DOMSearchBox	html/search/search.js	/^  this.DOMSearchBox = function()$/;"	m
SearchBox.DOMSearchClose	html/search/search.js	/^  this.DOMSearchClose = function()$/;"	m
SearchBox.DOMSearchField	html/search/search.js	/^  this.DOMSearchField = function()$/;"	m
SearchBox.DOMSearchSelect	html/search/search.js	/^  this.DOMSearchSelect = function()$/;"	m
SearchBox.DOMSearchSelectWindow	html/search/search.js	/^  this.DOMSearchSelectWindow = function()$/;"	m
SearchBox.OnSearchFieldChange	html/search/search.js	/^  this.OnSearchFieldChange = function(evt)$/;"	m
SearchBox.OnSearchFieldFocus	html/search/search.js	/^  this.OnSearchFieldFocus = function(isActive)$/;"	m
SearchBox.OnSearchSelectHide	html/search/search.js	/^  this.OnSearchSelectHide = function()$/;"	m
SearchBox.OnSearchSelectKey	html/search/search.js	/^  this.OnSearchSelectKey = function(evt)$/;"	m
SearchBox.OnSearchSelectShow	html/search/search.js	/^  this.OnSearchSelectShow = function()$/;"	m
SearchBox.OnSelectItem	html/search/search.js	/^  this.OnSelectItem = function(id)$/;"	m
SearchBox.Search	html/search/search.js	/^  this.Search = function()$/;"	m
SearchBox.SelectItemCount	html/search/search.js	/^  this.SelectItemCount = function(id)$/;"	m
SearchBox.SelectItemSet	html/search/search.js	/^  this.SelectItemSet = function(id)$/;"	m
SearchResults	html/search/search.js	/^function SearchResults(name)$/;"	c
SearchResults.FindChildElement	html/search/search.js	/^    this.FindChildElement = function(id)$/;"	m
SearchResults.Nav	html/search/search.js	/^    this.Nav = function(evt,itemIndex) $/;"	m
SearchResults.NavChild	html/search/search.js	/^    this.NavChild = function(evt,itemIndex,childIndex)$/;"	m
SearchResults.NavNext	html/search/search.js	/^    this.NavNext = function(index)$/;"	m
SearchResults.NavPrev	html/search/search.js	/^    this.NavPrev = function(index)$/;"	m
SearchResults.ProcessKeys	html/search/search.js	/^    this.ProcessKeys = function(e)$/;"	m
SearchResults.Search	html/search/search.js	/^    this.Search = function(search)$/;"	m
SearchResults.Toggle	html/search/search.js	/^    this.Toggle = function(id)$/;"	m
SetIpoints	kmeans.h	/^void Kmeans::SetIpoints(IpVec *ipts)$/;"	f	class:Kmeans
Surf	latex/classSurf.tex	/^\\subsubsection[{Surf}]{\\setlength{\\rightskip}{0pt plus 5cm}Surf\\-::\\-Surf ($/;"	b
Surf	surf.cpp	/^Surf::Surf(cudaImage *d_img, IpVec &ipts)$/;"	f	class:Surf
Surf	surf.h	/^class Surf {$/;"	c
Surf Class Reference	latex/classSurf.tex	/^\\hypertarget{classSurf}{\\section{Surf Class Reference}$/;"	s
THRES	fasthessian.h	/^static const float THRES = 0.0004f;$/;"	v
TRANSPOSEGPU_H	transposeGPU.h	24;"	d
TraveDir	main.cpp	/^int TraveDir(char *path,int *filenum,char *filepath)$/;"	f
UTILS_H	utils.h	24;"	d
__cudaCheckMsg	cuda/helper_funcs.h	/^inline void __cudaCheckMsg(const char *msg, const char *file, const int line)$/;"	f
__cudaSafeCall	cuda/helper_funcs.h	/^inline void __cudaSafeCall(cudaError err, const char *file, const int line)$/;"	f
__cudppSafeCall	cuda/cudpp_helper_funcs.h	/^__cudppSafeCall( CUDPPResult err, const char *file, const int line )$/;"	f
adjd_octaves	fasthessian.h	/^	int adjd_octaves;$/;"	m	class:FastHessian
border_cache	fasthessian.cpp	/^static const int border_cache [] = {14,26,50,98};$/;"	v	file:
buildDet	fasthessian.cpp	/^void FastHessian::buildDet()$/;"	f	class:FastHessian
ca_intimg	surf.h	/^	cudaArray *ca_intimg;$/;"	m	class:Surf
clusterIndex	ipoint.h	/^  int clusterIndex;$/;"	m	class:Ipoint
clusterIndex	surf_cudaipoint.h	/^	int clusterIndex;$/;"	m	struct:__anon2
clusters	kmeans.h	/^  IpVec clusters;$/;"	m	class:Kmeans
collectPoints	fasthessian.cpp	/^void FastHessian::collectPoints(fasthessian_cudaIpoint *points) {$/;"	f	class:FastHessian
computeDescriptors	surf.cpp	/^Surf::computeDescriptors(int upright)$/;"	f	class:Surf
convertToId	html/search/search.js	/^function convertToId(search)$/;"	f
createResults	html/search/search.js	/^function createResults()$/;"	f
cuda Image Struct Reference	latex/structcudaImage.tex	/^\\hypertarget{structcudaImage}{\\section{cuda\\-Image Struct Reference}$/;"	s
cudaImage	cudaimage.h	/^struct cudaImage$/;"	s
d_det	fasthessian.h	/^	float *d_det;$/;"	m	class:FastHessian
d_img	fasthessian.h	/^	cudaImage *d_img;$/;"	m	class:FastHessian
d_img	surf.h	/^    cudaImage *d_img;$/;"	m	class:Surf
d_intimg_padded	surf.h	/^	float *d_intimg_padded;$/;"	m	class:Surf
d_ipoints	surf.h	/^	surf_cudaIpoint *d_ipoints;$/;"	m	class:Surf
d_points	fasthessian.h	/^	fasthessian_cudaIpoint *d_points;$/;"	m	class:FastHessian
data	cudaimage.h	/^    char*  data;      \/* Pointer to aligned image data. *\/$/;"	m	struct:cudaImage
descriptor	ipoint.h	/^  float descriptor[64];$/;"	m	class:Ipoint
descriptor	surf_cudaipoint.h	/^	float descriptor[64];$/;"	m	struct:__anon2
det_pitch	fasthessian.h	/^	size_t det_pitch;$/;"	m	class:FastHessian
drawFPS	utils.cpp	/^void drawFPS(IplImage *img)$/;"	f
drawIpoint	utils.cpp	/^void drawIpoint(IplImage *img, Ipoint &ipt, int tailSize)$/;"	f
drawIpoints	utils.cpp	/^void drawIpoints(IplImage *img, vector<Ipoint> &ipts, int tailSize)$/;"	f
drawPoint	utils.cpp	/^void drawPoint(IplImage *img, Ipoint &ipt)$/;"	f
drawPoints	utils.cpp	/^void drawPoints(IplImage *img, vector<Ipoint> &ipts)$/;"	f
drawWindows	utils.cpp	/^void drawWindows(IplImage *img, vector<Ipoint> &ipts)$/;"	f
dx	ipoint.h	/^  float dx, dy;$/;"	m	class:Ipoint
dx	surf_cudaipoint.h	/^	float dx, dy;$/;"	m	struct:__anon2
dy	ipoint.h	/^  float dx, dy;$/;"	m	class:Ipoint
dy	surf_cudaipoint.h	/^	float dx, dy;$/;"	m	struct:__anon2
error	utils.cpp	/^void error(const char *msg)$/;"	f
fRound	cuda/common_kernel.h	36;"	d
fRound	utils.h	/^inline int fRound(float flt)$/;"	f
fasthessian _ cuda Ipoint Struct Reference	latex/structfasthessian__cudaIpoint.tex	/^\\hypertarget{structfasthessian__cudaIpoint}{\\section{fasthessian\\-\\_\\-cuda\\-Ipoint Struct Reference}$/;"	s
fasthessian_cudaIpoint	fasthessian_cudaipoint.h	/^} fasthessian_cudaIpoint;$/;"	t	typeref:struct:__anon1
freeCudaImage	cudaimage.h	/^inline void freeCudaImage(cudaImage *img)$/;"	f
freeIntImage	surf.cpp	/^void Surf::freeIntImage()$/;"	f	class:Surf
getDescriptors	surf.cpp	/^void Surf::getDescriptors(bool upright)$/;"	f	class:Surf
getGray	utils.cpp	/^IplImage* getGray(IplImage *img)$/;"	f
getIpoints	fasthessian.cpp	/^void FastHessian::getIpoints()$/;"	f	class:FastHessian
getMatches	cuda/getMatchesGPU.cpp	/^getMatches(IpVec &ipts1, IpVec &ipts2, IpPairVec &matches)$/;"	f
getMatches	getMatchesCPU.cpp	/^void getMatches(IpVec &ipts1, IpVec &ipts2, IpPairVec &matches)$/;"	f
getXPos	html/search/search.js	/^function getXPos(item)$/;"	f
getYPos	html/search/search.js	/^function getYPos(item)$/;"	f
h_points	fasthessian.h	/^	fasthessian_cudaIpoint *h_points;$/;"	m	class:FastHessian
height	cudaimage.h	/^    int    height;    \/* Image height in pixels. *\/$/;"	m	struct:cudaImage
iAlignDown	cuda/helper_funcs.cpp	/^int iAlignDown(int a, int b)$/;"	f
iAlignUp	cuda/helper_funcs.cpp	/^int iAlignUp(int a, int b)$/;"	f
iDivDown	cuda/helper_funcs.cpp	/^int iDivDown(int a, int b)$/;"	f
iDivUp	cuda/helper_funcs.cpp	/^int iDivUp(int a, int b)$/;"	f
i_height	fasthessian.h	/^	int i_width, i_height;$/;"	m	class:FastHessian
i_height	surf.h	/^	int i_width, i_height;$/;"	m	class:Surf
i_width	fasthessian.h	/^	int i_width, i_height;$/;"	m	class:FastHessian
i_width	surf.h	/^	int i_width, i_height;$/;"	m	class:Surf
indexSectionNames.0	html/search/search.js	/^{$/;"	p
indexSectionNames.1	html/search/search.js	/^  0: "all",$/;"	p
indexSectionNames.2	html/search/search.js	/^  1: "classes",$/;"	p
indexSectionNames.3	html/search/search.js	/^  2: "functions",$/;"	p
indexSectionsWithContent.0	html/search/search.js	/^{$/;"	p
indexSectionsWithContent.1	html/search/search.js	/^  0: "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101101101011001001100001000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",$/;"	p
indexSectionsWithContent.2	html/search/search.js	/^  1: "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001001001010000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",$/;"	p
indexSectionsWithContent.3	html/search/search.js	/^  2: "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100101101010001001100000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",$/;"	p
info_arch	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_arch	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_compiler	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_compiler	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_platform	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_platform	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_version	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	/^char const info_version[] = {$/;"	v
info_version	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version[] = {$/;"	v
initGPU	fasthessian.cpp	/^void FastHessian::initGPU()$/;"	f	class:FastHessian
init_sample	fasthessian.h	/^    int init_sample;$/;"	m	class:FastHessian
intervals	fasthessian.h	/^    int intervals;$/;"	m	class:FastHessian
ipts	fasthessian.h	/^    std::vector<Ipoint> &ipts;$/;"	m	class:FastHessian
ipts	kmeans.h	/^  IpVec *ipts;$/;"	m	class:Kmeans
ipts	surf.h	/^    IpVec &ipts;$/;"	m	class:Surf
l00001	html/buildDetGPU_8h_source.html	/^<div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/*<\/span><\/div>$/;"	a
l00001	html/buildSURFDescriptorsGPU_8h_source.html	/^<div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/*<\/span><\/div>$/;"	a
l00001	html/convertRGB2GrayFloatGPU_8h_source.html	/^<div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/*<\/span><\/div>$/;"	a
l00001	html/convertRGBA2GrayFloatGPU_8h_source.html	/^<div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/*<\/span><\/div>$/;"	a
l00001	html/cudaimage_8h_source.html	/^<div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/*<\/span><\/div>$/;"	a
l00001	html/defines_8h_source.html	/^<div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/*<\/span><\/div>$/;"	a
l00001	html/detectIpointOrientationsGPU_8h_source.html	/^<div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/*<\/span><\/div>$/;"	a
l00001	html/fasthessian_8h_source.html	/^<div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/*<\/span><\/div>$/;"	a
l00001	html/fasthessian__cudaipoint_8h_source.html	/^<div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/*<\/span><\/div>$/;"	a
l00001	html/integral_8h_source.html	/^<div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/*<\/span><\/div>$/;"	a
l00001	html/ipoint_8h_source.html	/^<div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/*<\/span><\/div>$/;"	a
l00001	html/kmeans_8h_source.html	/^<div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/*<\/span><\/div>$/;"	a
l00001	html/matchSURFKeypointsGPU_8h_source.html	/^<div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/*<\/span><\/div>$/;"	a
l00001	html/nonMaxGPU_8h_source.html	/^<div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/*<\/span><\/div>$/;"	a
l00001	html/normalizeSURFDescriptorsGPU_8h_source.html	/^<div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/*<\/span><\/div>$/;"	a
l00001	html/surf_8h_source.html	/^<div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/*<\/span><\/div>$/;"	a
l00001	html/surf__cudaipoint_8h_source.html	/^<div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/*<\/span><\/div>$/;"	a
l00001	html/surflib_8h_source.html	/^<div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/*<\/span><\/div>$/;"	a
l00001	html/transposeGPU_8h_source.html	/^<div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/*<\/span><\/div>$/;"	a
l00001	html/utils_8h_source.html	/^<div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/*<\/span><\/div>$/;"	a
l00002	html/buildDetGPU_8h_source.html	/^<div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment"> * Copyright (C) 2009-2010 Andre Schulz, Florian Jung, Sebastian Hartte,<\/span><\/div>$/;"	a
l00002	html/buildSURFDescriptorsGPU_8h_source.html	/^<div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment"> * Copyright (C) 2009-2010 Andre Schulz, Florian Jung, Sebastian Hartte,<\/span><\/div>$/;"	a
l00002	html/convertRGB2GrayFloatGPU_8h_source.html	/^<div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment"> * Copyright (C) 2009-2010 Andre Schulz, Florian Jung, Sebastian Hartte,<\/span><\/div>$/;"	a
l00002	html/convertRGBA2GrayFloatGPU_8h_source.html	/^<div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment"> * Copyright (C) 2009-2010 Andre Schulz, Florian Jung, Sebastian Hartte,<\/span><\/div>$/;"	a
l00002	html/cudaimage_8h_source.html	/^<div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment"> * Copyright (C) 2009-2012 Andre Schulz, Florian Jung, Sebastian Hartte,<\/span><\/div>$/;"	a
l00002	html/defines_8h_source.html	/^<div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment"> * Copyright (C) 2009-2010 Andre Schulz, Florian Jung, Sebastian Hartte,<\/span><\/div>$/;"	a
l00002	html/detectIpointOrientationsGPU_8h_source.html	/^<div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment"> * Copyright (C) 2009-2010 Andre Schulz, Florian Jung, Sebastian Hartte,<\/span><\/div>$/;"	a
l00002	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment"> * Copyright (C) 2009-2010 Andre Schulz, Florian Jung, Sebastian Hartte,<\/span><\/div>$/;"	a
l00002	html/fasthessian__cudaipoint_8h_source.html	/^<div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment"> * Copyright (C) 2009-2010 Andre Schulz, Florian Jung, Sebastian Hartte,<\/span><\/div>$/;"	a
l00002	html/integral_8h_source.html	/^<div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment"> * Copyright (C) 2009-2011 Andre Schulz, Florian Jung, Sebastian Hartte,<\/span><\/div>$/;"	a
l00002	html/ipoint_8h_source.html	/^<div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment"> * Copyright (C) 2009-2011 Andre Schulz, Florian Jung, Sebastian Hartte,<\/span><\/div>$/;"	a
l00002	html/kmeans_8h_source.html	/^<div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment"> * Copyright (C) 2009-2010 Andre Schulz, Florian Jung, Sebastian Hartte,<\/span><\/div>$/;"	a
l00002	html/matchSURFKeypointsGPU_8h_source.html	/^<div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment"> * Copyright (C) 2009-2010 Andre Schulz, Florian Jung, Sebastian Hartte,<\/span><\/div>$/;"	a
l00002	html/nonMaxGPU_8h_source.html	/^<div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment"> * Copyright (C) 2009-2010 Andre Schulz, Florian Jung, Sebastian Hartte,<\/span><\/div>$/;"	a
l00002	html/normalizeSURFDescriptorsGPU_8h_source.html	/^<div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment"> * Copyright (C) 2009-2010 Andre Schulz, Florian Jung, Sebastian Hartte,<\/span><\/div>$/;"	a
l00002	html/surf_8h_source.html	/^<div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment"> * Copyright (C) 2009-2010 Andre Schulz, Florian Jung, Sebastian Hartte,<\/span><\/div>$/;"	a
l00002	html/surf__cudaipoint_8h_source.html	/^<div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment"> * Copyright (C) 2009-2010 Andre Schulz, Florian Jung, Sebastian Hartte,<\/span><\/div>$/;"	a
l00002	html/surflib_8h_source.html	/^<div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment"> * Copyright (C) 2009-2010 Andre Schulz, Florian Jung, Sebastian Hartte,<\/span><\/div>$/;"	a
l00002	html/transposeGPU_8h_source.html	/^<div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment"> * Copyright (C) 2009-2010 Andre Schulz, Florian Jung, Sebastian Hartte,<\/span><\/div>$/;"	a
l00002	html/utils_8h_source.html	/^<div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment"> * Copyright (C) 2009-2010 Andre Schulz, Florian Jung, Sebastian Hartte,<\/span><\/div>$/;"	a
l00003	html/buildDetGPU_8h_source.html	/^<div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment"> *                         Daniel Trick, Christan Wojek, Konrad Schindler,<\/span><\/div>$/;"	a
l00003	html/buildSURFDescriptorsGPU_8h_source.html	/^<div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment"> *                         Daniel Trick, Christan Wojek, Konrad Schindler,<\/span><\/div>$/;"	a
l00003	html/convertRGB2GrayFloatGPU_8h_source.html	/^<div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment"> *                         Daniel Trick, Christan Wojek, Konrad Schindler,<\/span><\/div>$/;"	a
l00003	html/convertRGBA2GrayFloatGPU_8h_source.html	/^<div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment"> *                         Daniel Trick, Christan Wojek, Konrad Schindler,<\/span><\/div>$/;"	a
l00003	html/cudaimage_8h_source.html	/^<div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment"> *                         Daniel Trick, Christan Wojek, Konrad Schindler,<\/span><\/div>$/;"	a
l00003	html/defines_8h_source.html	/^<div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment"> *                         Daniel Trick, Christan Wojek, Konrad Schindler,<\/span><\/div>$/;"	a
l00003	html/detectIpointOrientationsGPU_8h_source.html	/^<div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment"> *                         Daniel Trick, Christan Wojek, Konrad Schindler,<\/span><\/div>$/;"	a
l00003	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment"> *                         Daniel Trick, Christan Wojek, Konrad Schindler,<\/span><\/div>$/;"	a
l00003	html/fasthessian__cudaipoint_8h_source.html	/^<div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment"> *                         Daniel Trick, Christan Wojek, Konrad Schindler,<\/span><\/div>$/;"	a
l00003	html/integral_8h_source.html	/^<div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment"> *                         Daniel Trick, Christan Wojek, Konrad Schindler,<\/span><\/div>$/;"	a
l00003	html/ipoint_8h_source.html	/^<div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment"> *                         Daniel Trick, Christan Wojek, Konrad Schindler,<\/span><\/div>$/;"	a
l00003	html/kmeans_8h_source.html	/^<div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment"> *                         Daniel Trick, Christan Wojek, Konrad Schindler,<\/span><\/div>$/;"	a
l00003	html/matchSURFKeypointsGPU_8h_source.html	/^<div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment"> *                         Daniel Trick, Christan Wojek, Konrad Schindler,<\/span><\/div>$/;"	a
l00003	html/nonMaxGPU_8h_source.html	/^<div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment"> *                         Daniel Trick, Christan Wojek, Konrad Schindler,<\/span><\/div>$/;"	a
l00003	html/normalizeSURFDescriptorsGPU_8h_source.html	/^<div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment"> *                         Daniel Trick, Christan Wojek, Konrad Schindler,<\/span><\/div>$/;"	a
l00003	html/surf_8h_source.html	/^<div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment"> *                         Daniel Trick, Christan Wojek, Konrad Schindler,<\/span><\/div>$/;"	a
l00003	html/surf__cudaipoint_8h_source.html	/^<div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment"> *                         Daniel Trick, Christan Wojek, Konrad Schindler,<\/span><\/div>$/;"	a
l00003	html/surflib_8h_source.html	/^<div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment"> *                         Daniel Trick, Christan Wojek, Konrad Schindler,<\/span><\/div>$/;"	a
l00003	html/transposeGPU_8h_source.html	/^<div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment"> *                         Daniel Trick, Christan Wojek, Konrad Schindler,<\/span><\/div>$/;"	a
l00003	html/utils_8h_source.html	/^<div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment"> *                         Daniel Trick, Christan Wojek, Konrad Schindler,<\/span><\/div>$/;"	a
l00004	html/buildDetGPU_8h_source.html	/^<div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment"> *                         Jens Ackermann, Michael Goesele<\/span><\/div>$/;"	a
l00004	html/buildSURFDescriptorsGPU_8h_source.html	/^<div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment"> *                         Jens Ackermann, Michael Goesele<\/span><\/div>$/;"	a
l00004	html/convertRGB2GrayFloatGPU_8h_source.html	/^<div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment"> *                         Jens Ackermann, Michael Goesele<\/span><\/div>$/;"	a
l00004	html/convertRGBA2GrayFloatGPU_8h_source.html	/^<div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment"> *                         Jens Ackermann, Michael Goesele<\/span><\/div>$/;"	a
l00004	html/cudaimage_8h_source.html	/^<div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment"> *                         Jens Ackermann, Michael Goesele<\/span><\/div>$/;"	a
l00004	html/defines_8h_source.html	/^<div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment"> *                         Jens Ackermann, Michael Goesele<\/span><\/div>$/;"	a
l00004	html/detectIpointOrientationsGPU_8h_source.html	/^<div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment"> *                         Jens Ackermann, Michael Goesele<\/span><\/div>$/;"	a
l00004	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment"> *                         Jens Ackermann, Michael Goesele<\/span><\/div>$/;"	a
l00004	html/fasthessian__cudaipoint_8h_source.html	/^<div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment"> *                         Jens Ackermann, Michael Goesele<\/span><\/div>$/;"	a
l00004	html/integral_8h_source.html	/^<div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment"> *                         Jens Ackermann, Michael Goesele<\/span><\/div>$/;"	a
l00004	html/ipoint_8h_source.html	/^<div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment"> *                         Jens Ackermann, Michael Goesele<\/span><\/div>$/;"	a
l00004	html/kmeans_8h_source.html	/^<div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment"> *                         Jens Ackermann, Michael Goesele<\/span><\/div>$/;"	a
l00004	html/matchSURFKeypointsGPU_8h_source.html	/^<div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment"> *                         Jens Ackermann, Michael Goesele<\/span><\/div>$/;"	a
l00004	html/nonMaxGPU_8h_source.html	/^<div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment"> *                         Jens Ackermann, Michael Goesele<\/span><\/div>$/;"	a
l00004	html/normalizeSURFDescriptorsGPU_8h_source.html	/^<div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment"> *                         Jens Ackermann, Michael Goesele<\/span><\/div>$/;"	a
l00004	html/surf_8h_source.html	/^<div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment"> *                         Jens Ackermann, Michael Goesele<\/span><\/div>$/;"	a
l00004	html/surf__cudaipoint_8h_source.html	/^<div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment"> *                         Jens Ackermann, Michael Goesele<\/span><\/div>$/;"	a
l00004	html/surflib_8h_source.html	/^<div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment"> *                         Jens Ackermann, Michael Goesele<\/span><\/div>$/;"	a
l00004	html/transposeGPU_8h_source.html	/^<div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment"> *                         Jens Ackermann, Michael Goesele<\/span><\/div>$/;"	a
l00004	html/utils_8h_source.html	/^<div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment"> *                         Jens Ackermann, Michael Goesele<\/span><\/div>$/;"	a
l00005	html/buildDetGPU_8h_source.html	/^<div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment"> * Copyright (C) 2008-2009 Christopher Evans &lt;chris.evans@irisys.co.uk&gt;, MSc University of Bristol<\/span><\/div>$/;"	a
l00005	html/buildSURFDescriptorsGPU_8h_source.html	/^<div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment"> * Copyright (C) 2008-2009 Christopher Evans &lt;chris.evans@irisys.co.uk&gt;, MSc University of Bristol<\/span><\/div>$/;"	a
l00005	html/convertRGB2GrayFloatGPU_8h_source.html	/^<div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment"> * Copyright (C) 2008-2009 Christopher Evans &lt;chris.evans@irisys.co.uk&gt;, MSc University of Bristol<\/span><\/div>$/;"	a
l00005	html/convertRGBA2GrayFloatGPU_8h_source.html	/^<div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment"> * Copyright (C) 2008-2009 Christopher Evans &lt;chris.evans@irisys.co.uk&gt;, MSc University of Bristol<\/span><\/div>$/;"	a
l00005	html/cudaimage_8h_source.html	/^<div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment"> * Copyright (C) 2008-2009 Christopher Evans &lt;chris.evans@irisys.co.uk&gt;, MSc University of Bristol<\/span><\/div>$/;"	a
l00005	html/defines_8h_source.html	/^<div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment"> * Copyright (C) 2008-2009 Christopher Evans &lt;chris.evans@irisys.co.uk&gt;, MSc University of Bristol<\/span><\/div>$/;"	a
l00005	html/detectIpointOrientationsGPU_8h_source.html	/^<div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment"> * Copyright (C) 2008-2009 Christopher Evans &lt;chris.evans@irisys.co.uk&gt;, MSc University of Bristol<\/span><\/div>$/;"	a
l00005	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment"> * Copyright (C) 2008-2009 Christopher Evans &lt;chris.evans@irisys.co.uk&gt;, MSc University of Bristol<\/span><\/div>$/;"	a
l00005	html/fasthessian__cudaipoint_8h_source.html	/^<div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment"> * Copyright (C) 2008-2009 Christopher Evans &lt;chris.evans@irisys.co.uk&gt;, MSc University of Bristol<\/span><\/div>$/;"	a
l00005	html/integral_8h_source.html	/^<div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment"> * Copyright (C) 2008-2009 Christopher Evans &lt;chris.evans@irisys.co.uk&gt;, MSc University of Bristol<\/span><\/div>$/;"	a
l00005	html/ipoint_8h_source.html	/^<div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment"> * Copyright (C) 2008-2009 Christopher Evans &lt;chris.evans@irisys.co.uk&gt;, MSc University of Bristol<\/span><\/div>$/;"	a
l00005	html/kmeans_8h_source.html	/^<div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment"> * Copyright (C) 2008-2009 Christopher Evans &lt;chris.evans@irisys.co.uk&gt;, MSc University of Bristol<\/span><\/div>$/;"	a
l00005	html/matchSURFKeypointsGPU_8h_source.html	/^<div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment"> * Copyright (C) 2008-2009 Christopher Evans &lt;chris.evans@irisys.co.uk&gt;, MSc University of Bristol<\/span><\/div>$/;"	a
l00005	html/nonMaxGPU_8h_source.html	/^<div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment"> * Copyright (C) 2008-2009 Christopher Evans &lt;chris.evans@irisys.co.uk&gt;, MSc University of Bristol<\/span><\/div>$/;"	a
l00005	html/normalizeSURFDescriptorsGPU_8h_source.html	/^<div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment"> * Copyright (C) 2008-2009 Christopher Evans &lt;chris.evans@irisys.co.uk&gt;, MSc University of Bristol<\/span><\/div>$/;"	a
l00005	html/surf_8h_source.html	/^<div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment"> * Copyright (C) 2008-2009 Christopher Evans &lt;chris.evans@irisys.co.uk&gt;, MSc University of Bristol<\/span><\/div>$/;"	a
l00005	html/surf__cudaipoint_8h_source.html	/^<div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment"> * Copyright (C) 2008-2009 Christopher Evans &lt;chris.evans@irisys.co.uk&gt;, MSc University of Bristol<\/span><\/div>$/;"	a
l00005	html/surflib_8h_source.html	/^<div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment"> * Copyright (C) 2008-2009 Christopher Evans &lt;chris.evans@irisys.co.uk&gt;, MSc University of Bristol<\/span><\/div>$/;"	a
l00005	html/transposeGPU_8h_source.html	/^<div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment"> * Copyright (C) 2008-2009 Christopher Evans &lt;chris.evans@irisys.co.uk&gt;, MSc University of Bristol<\/span><\/div>$/;"	a
l00005	html/utils_8h_source.html	/^<div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment"> * Copyright (C) 2008-2009 Christopher Evans &lt;chris.evans@irisys.co.uk&gt;, MSc University of Bristol<\/span><\/div>$/;"	a
l00006	html/buildDetGPU_8h_source.html	/^<div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00006	html/buildSURFDescriptorsGPU_8h_source.html	/^<div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00006	html/convertRGB2GrayFloatGPU_8h_source.html	/^<div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00006	html/convertRGBA2GrayFloatGPU_8h_source.html	/^<div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00006	html/cudaimage_8h_source.html	/^<div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00006	html/defines_8h_source.html	/^<div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00006	html/detectIpointOrientationsGPU_8h_source.html	/^<div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00006	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00006	html/fasthessian__cudaipoint_8h_source.html	/^<div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00006	html/integral_8h_source.html	/^<div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00006	html/ipoint_8h_source.html	/^<div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00006	html/kmeans_8h_source.html	/^<div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00006	html/matchSURFKeypointsGPU_8h_source.html	/^<div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00006	html/nonMaxGPU_8h_source.html	/^<div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00006	html/normalizeSURFDescriptorsGPU_8h_source.html	/^<div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00006	html/surf_8h_source.html	/^<div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00006	html/surf__cudaipoint_8h_source.html	/^<div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00006	html/surflib_8h_source.html	/^<div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00006	html/transposeGPU_8h_source.html	/^<div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00006	html/utils_8h_source.html	/^<div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00007	html/buildDetGPU_8h_source.html	/^<div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment"> * This file is part of SURFGPU.<\/span><\/div>$/;"	a
l00007	html/buildSURFDescriptorsGPU_8h_source.html	/^<div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment"> * This file is part of SURFGPU.<\/span><\/div>$/;"	a
l00007	html/convertRGB2GrayFloatGPU_8h_source.html	/^<div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment"> * This file is part of SURFGPU.<\/span><\/div>$/;"	a
l00007	html/convertRGBA2GrayFloatGPU_8h_source.html	/^<div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment"> * This file is part of SURFGPU.<\/span><\/div>$/;"	a
l00007	html/cudaimage_8h_source.html	/^<div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment"> * This file is part of SURFGPU.<\/span><\/div>$/;"	a
l00007	html/defines_8h_source.html	/^<div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment"> * This file is part of SURFGPU.<\/span><\/div>$/;"	a
l00007	html/detectIpointOrientationsGPU_8h_source.html	/^<div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment"> * This file is part of SURFGPU.<\/span><\/div>$/;"	a
l00007	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment"> * This file is part of SURFGPU.<\/span><\/div>$/;"	a
l00007	html/fasthessian__cudaipoint_8h_source.html	/^<div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment"> * This file is part of SURFGPU.<\/span><\/div>$/;"	a
l00007	html/integral_8h_source.html	/^<div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment"> * This file is part of SURFGPU.<\/span><\/div>$/;"	a
l00007	html/ipoint_8h_source.html	/^<div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment"> * This file is part of SURFGPU.<\/span><\/div>$/;"	a
l00007	html/kmeans_8h_source.html	/^<div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment"> * This file is part of SURFGPU.<\/span><\/div>$/;"	a
l00007	html/matchSURFKeypointsGPU_8h_source.html	/^<div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment"> * This file is part of SURFGPU.<\/span><\/div>$/;"	a
l00007	html/nonMaxGPU_8h_source.html	/^<div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment"> * This file is part of SURFGPU.<\/span><\/div>$/;"	a
l00007	html/normalizeSURFDescriptorsGPU_8h_source.html	/^<div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment"> * This file is part of SURFGPU.<\/span><\/div>$/;"	a
l00007	html/surf_8h_source.html	/^<div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment"> * This file is part of SURFGPU.<\/span><\/div>$/;"	a
l00007	html/surf__cudaipoint_8h_source.html	/^<div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment"> * This file is part of SURFGPU.<\/span><\/div>$/;"	a
l00007	html/surflib_8h_source.html	/^<div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment"> * This file is part of SURFGPU.<\/span><\/div>$/;"	a
l00007	html/transposeGPU_8h_source.html	/^<div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment"> * This file is part of SURFGPU.<\/span><\/div>$/;"	a
l00007	html/utils_8h_source.html	/^<div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment"> * This file is part of SURFGPU.<\/span><\/div>$/;"	a
l00008	html/buildDetGPU_8h_source.html	/^<div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00008	html/buildSURFDescriptorsGPU_8h_source.html	/^<div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00008	html/convertRGB2GrayFloatGPU_8h_source.html	/^<div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00008	html/convertRGBA2GrayFloatGPU_8h_source.html	/^<div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00008	html/cudaimage_8h_source.html	/^<div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00008	html/defines_8h_source.html	/^<div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00008	html/detectIpointOrientationsGPU_8h_source.html	/^<div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00008	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00008	html/fasthessian__cudaipoint_8h_source.html	/^<div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00008	html/integral_8h_source.html	/^<div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00008	html/ipoint_8h_source.html	/^<div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00008	html/kmeans_8h_source.html	/^<div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00008	html/matchSURFKeypointsGPU_8h_source.html	/^<div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00008	html/nonMaxGPU_8h_source.html	/^<div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00008	html/normalizeSURFDescriptorsGPU_8h_source.html	/^<div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00008	html/surf_8h_source.html	/^<div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00008	html/surf__cudaipoint_8h_source.html	/^<div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00008	html/surflib_8h_source.html	/^<div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00008	html/transposeGPU_8h_source.html	/^<div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00008	html/utils_8h_source.html	/^<div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00009	html/buildDetGPU_8h_source.html	/^<div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment"> * SURFGPU is free software: you can redistribute it and\/or modify<\/span><\/div>$/;"	a
l00009	html/buildSURFDescriptorsGPU_8h_source.html	/^<div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment"> * SURFGPU is free software: you can redistribute it and\/or modify<\/span><\/div>$/;"	a
l00009	html/convertRGB2GrayFloatGPU_8h_source.html	/^<div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment"> * SURFGPU is free software: you can redistribute it and\/or modify<\/span><\/div>$/;"	a
l00009	html/convertRGBA2GrayFloatGPU_8h_source.html	/^<div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment"> * SURFGPU is free software: you can redistribute it and\/or modify<\/span><\/div>$/;"	a
l00009	html/cudaimage_8h_source.html	/^<div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment"> * SURFGPU is free software: you can redistribute it and\/or modify<\/span><\/div>$/;"	a
l00009	html/defines_8h_source.html	/^<div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment"> * SURFGPU is free software: you can redistribute it and\/or modify<\/span><\/div>$/;"	a
l00009	html/detectIpointOrientationsGPU_8h_source.html	/^<div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment"> * SURFGPU is free software: you can redistribute it and\/or modify<\/span><\/div>$/;"	a
l00009	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment"> * SURFGPU is free software: you can redistribute it and\/or modify<\/span><\/div>$/;"	a
l00009	html/fasthessian__cudaipoint_8h_source.html	/^<div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment"> * SURFGPU is free software: you can redistribute it and\/or modify<\/span><\/div>$/;"	a
l00009	html/integral_8h_source.html	/^<div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment"> * SURFGPU is free software: you can redistribute it and\/or modify<\/span><\/div>$/;"	a
l00009	html/ipoint_8h_source.html	/^<div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment"> * SURFGPU is free software: you can redistribute it and\/or modify<\/span><\/div>$/;"	a
l00009	html/kmeans_8h_source.html	/^<div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment"> * SURFGPU is free software: you can redistribute it and\/or modify<\/span><\/div>$/;"	a
l00009	html/matchSURFKeypointsGPU_8h_source.html	/^<div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment"> * SURFGPU is free software: you can redistribute it and\/or modify<\/span><\/div>$/;"	a
l00009	html/nonMaxGPU_8h_source.html	/^<div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment"> * SURFGPU is free software: you can redistribute it and\/or modify<\/span><\/div>$/;"	a
l00009	html/normalizeSURFDescriptorsGPU_8h_source.html	/^<div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment"> * SURFGPU is free software: you can redistribute it and\/or modify<\/span><\/div>$/;"	a
l00009	html/surf_8h_source.html	/^<div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment"> * SURFGPU is free software: you can redistribute it and\/or modify<\/span><\/div>$/;"	a
l00009	html/surf__cudaipoint_8h_source.html	/^<div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment"> * SURFGPU is free software: you can redistribute it and\/or modify<\/span><\/div>$/;"	a
l00009	html/surflib_8h_source.html	/^<div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment"> * SURFGPU is free software: you can redistribute it and\/or modify<\/span><\/div>$/;"	a
l00009	html/transposeGPU_8h_source.html	/^<div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment"> * SURFGPU is free software: you can redistribute it and\/or modify<\/span><\/div>$/;"	a
l00009	html/utils_8h_source.html	/^<div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment"> * SURFGPU is free software: you can redistribute it and\/or modify<\/span><\/div>$/;"	a
l00010	html/buildDetGPU_8h_source.html	/^<div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment"> * it under the terms of the GNU General Public License as published by<\/span><\/div>$/;"	a
l00010	html/buildSURFDescriptorsGPU_8h_source.html	/^<div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment"> * it under the terms of the GNU General Public License as published by<\/span><\/div>$/;"	a
l00010	html/convertRGB2GrayFloatGPU_8h_source.html	/^<div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment"> * it under the terms of the GNU General Public License as published by<\/span><\/div>$/;"	a
l00010	html/convertRGBA2GrayFloatGPU_8h_source.html	/^<div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment"> * it under the terms of the GNU General Public License as published by<\/span><\/div>$/;"	a
l00010	html/cudaimage_8h_source.html	/^<div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment"> * it under the terms of the GNU General Public License as published by<\/span><\/div>$/;"	a
l00010	html/defines_8h_source.html	/^<div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment"> * it under the terms of the GNU General Public License as published by<\/span><\/div>$/;"	a
l00010	html/detectIpointOrientationsGPU_8h_source.html	/^<div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment"> * it under the terms of the GNU General Public License as published by<\/span><\/div>$/;"	a
l00010	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment"> * it under the terms of the GNU General Public License as published by<\/span><\/div>$/;"	a
l00010	html/fasthessian__cudaipoint_8h_source.html	/^<div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment"> * it under the terms of the GNU General Public License as published by<\/span><\/div>$/;"	a
l00010	html/integral_8h_source.html	/^<div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment"> * it under the terms of the GNU General Public License as published by<\/span><\/div>$/;"	a
l00010	html/ipoint_8h_source.html	/^<div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment"> * it under the terms of the GNU General Public License as published by<\/span><\/div>$/;"	a
l00010	html/kmeans_8h_source.html	/^<div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment"> * it under the terms of the GNU General Public License as published by<\/span><\/div>$/;"	a
l00010	html/matchSURFKeypointsGPU_8h_source.html	/^<div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment"> * it under the terms of the GNU General Public License as published by<\/span><\/div>$/;"	a
l00010	html/nonMaxGPU_8h_source.html	/^<div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment"> * it under the terms of the GNU General Public License as published by<\/span><\/div>$/;"	a
l00010	html/normalizeSURFDescriptorsGPU_8h_source.html	/^<div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment"> * it under the terms of the GNU General Public License as published by<\/span><\/div>$/;"	a
l00010	html/surf_8h_source.html	/^<div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment"> * it under the terms of the GNU General Public License as published by<\/span><\/div>$/;"	a
l00010	html/surf__cudaipoint_8h_source.html	/^<div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment"> * it under the terms of the GNU General Public License as published by<\/span><\/div>$/;"	a
l00010	html/surflib_8h_source.html	/^<div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment"> * it under the terms of the GNU General Public License as published by<\/span><\/div>$/;"	a
l00010	html/transposeGPU_8h_source.html	/^<div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment"> * it under the terms of the GNU General Public License as published by<\/span><\/div>$/;"	a
l00010	html/utils_8h_source.html	/^<div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment"> * it under the terms of the GNU General Public License as published by<\/span><\/div>$/;"	a
l00011	html/buildDetGPU_8h_source.html	/^<div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment"> * the Free Software Foundation, either version 3 of the License, or<\/span><\/div>$/;"	a
l00011	html/buildSURFDescriptorsGPU_8h_source.html	/^<div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment"> * the Free Software Foundation, either version 3 of the License, or<\/span><\/div>$/;"	a
l00011	html/convertRGB2GrayFloatGPU_8h_source.html	/^<div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment"> * the Free Software Foundation, either version 3 of the License, or<\/span><\/div>$/;"	a
l00011	html/convertRGBA2GrayFloatGPU_8h_source.html	/^<div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment"> * the Free Software Foundation, either version 3 of the License, or<\/span><\/div>$/;"	a
l00011	html/cudaimage_8h_source.html	/^<div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment"> * the Free Software Foundation, either version 3 of the License, or<\/span><\/div>$/;"	a
l00011	html/defines_8h_source.html	/^<div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment"> * the Free Software Foundation, either version 3 of the License, or<\/span><\/div>$/;"	a
l00011	html/detectIpointOrientationsGPU_8h_source.html	/^<div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment"> * the Free Software Foundation, either version 3 of the License, or<\/span><\/div>$/;"	a
l00011	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment"> * the Free Software Foundation, either version 3 of the License, or<\/span><\/div>$/;"	a
l00011	html/fasthessian__cudaipoint_8h_source.html	/^<div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment"> * the Free Software Foundation, either version 3 of the License, or<\/span><\/div>$/;"	a
l00011	html/integral_8h_source.html	/^<div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment"> * the Free Software Foundation, either version 3 of the License, or<\/span><\/div>$/;"	a
l00011	html/ipoint_8h_source.html	/^<div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment"> * the Free Software Foundation, either version 3 of the License, or<\/span><\/div>$/;"	a
l00011	html/kmeans_8h_source.html	/^<div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment"> * the Free Software Foundation, either version 3 of the License, or<\/span><\/div>$/;"	a
l00011	html/matchSURFKeypointsGPU_8h_source.html	/^<div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment"> * the Free Software Foundation, either version 3 of the License, or<\/span><\/div>$/;"	a
l00011	html/nonMaxGPU_8h_source.html	/^<div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment"> * the Free Software Foundation, either version 3 of the License, or<\/span><\/div>$/;"	a
l00011	html/normalizeSURFDescriptorsGPU_8h_source.html	/^<div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment"> * the Free Software Foundation, either version 3 of the License, or<\/span><\/div>$/;"	a
l00011	html/surf_8h_source.html	/^<div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment"> * the Free Software Foundation, either version 3 of the License, or<\/span><\/div>$/;"	a
l00011	html/surf__cudaipoint_8h_source.html	/^<div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment"> * the Free Software Foundation, either version 3 of the License, or<\/span><\/div>$/;"	a
l00011	html/surflib_8h_source.html	/^<div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment"> * the Free Software Foundation, either version 3 of the License, or<\/span><\/div>$/;"	a
l00011	html/transposeGPU_8h_source.html	/^<div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment"> * the Free Software Foundation, either version 3 of the License, or<\/span><\/div>$/;"	a
l00011	html/utils_8h_source.html	/^<div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment"> * the Free Software Foundation, either version 3 of the License, or<\/span><\/div>$/;"	a
l00012	html/buildDetGPU_8h_source.html	/^<div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="comment"> * (at your option) any later version.<\/span><\/div>$/;"	a
l00012	html/buildSURFDescriptorsGPU_8h_source.html	/^<div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="comment"> * (at your option) any later version.<\/span><\/div>$/;"	a
l00012	html/convertRGB2GrayFloatGPU_8h_source.html	/^<div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="comment"> * (at your option) any later version.<\/span><\/div>$/;"	a
l00012	html/convertRGBA2GrayFloatGPU_8h_source.html	/^<div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="comment"> * (at your option) any later version.<\/span><\/div>$/;"	a
l00012	html/cudaimage_8h_source.html	/^<div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="comment"> * (at your option) any later version.<\/span><\/div>$/;"	a
l00012	html/defines_8h_source.html	/^<div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="comment"> * (at your option) any later version.<\/span><\/div>$/;"	a
l00012	html/detectIpointOrientationsGPU_8h_source.html	/^<div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="comment"> * (at your option) any later version.<\/span><\/div>$/;"	a
l00012	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="comment"> * (at your option) any later version.<\/span><\/div>$/;"	a
l00012	html/fasthessian__cudaipoint_8h_source.html	/^<div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="comment"> * (at your option) any later version.<\/span><\/div>$/;"	a
l00012	html/integral_8h_source.html	/^<div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="comment"> * (at your option) any later version.<\/span><\/div>$/;"	a
l00012	html/ipoint_8h_source.html	/^<div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="comment"> * (at your option) any later version.<\/span><\/div>$/;"	a
l00012	html/kmeans_8h_source.html	/^<div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="comment"> * (at your option) any later version.<\/span><\/div>$/;"	a
l00012	html/matchSURFKeypointsGPU_8h_source.html	/^<div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="comment"> * (at your option) any later version.<\/span><\/div>$/;"	a
l00012	html/nonMaxGPU_8h_source.html	/^<div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="comment"> * (at your option) any later version.<\/span><\/div>$/;"	a
l00012	html/normalizeSURFDescriptorsGPU_8h_source.html	/^<div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="comment"> * (at your option) any later version.<\/span><\/div>$/;"	a
l00012	html/surf_8h_source.html	/^<div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="comment"> * (at your option) any later version.<\/span><\/div>$/;"	a
l00012	html/surf__cudaipoint_8h_source.html	/^<div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="comment"> * (at your option) any later version.<\/span><\/div>$/;"	a
l00012	html/surflib_8h_source.html	/^<div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="comment"> * (at your option) any later version.<\/span><\/div>$/;"	a
l00012	html/transposeGPU_8h_source.html	/^<div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="comment"> * (at your option) any later version.<\/span><\/div>$/;"	a
l00012	html/utils_8h_source.html	/^<div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="comment"> * (at your option) any later version.<\/span><\/div>$/;"	a
l00013	html/buildDetGPU_8h_source.html	/^<div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00013	html/buildSURFDescriptorsGPU_8h_source.html	/^<div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00013	html/convertRGB2GrayFloatGPU_8h_source.html	/^<div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00013	html/convertRGBA2GrayFloatGPU_8h_source.html	/^<div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00013	html/cudaimage_8h_source.html	/^<div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00013	html/defines_8h_source.html	/^<div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00013	html/detectIpointOrientationsGPU_8h_source.html	/^<div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00013	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00013	html/fasthessian__cudaipoint_8h_source.html	/^<div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00013	html/integral_8h_source.html	/^<div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00013	html/ipoint_8h_source.html	/^<div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00013	html/kmeans_8h_source.html	/^<div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00013	html/matchSURFKeypointsGPU_8h_source.html	/^<div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00013	html/nonMaxGPU_8h_source.html	/^<div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00013	html/normalizeSURFDescriptorsGPU_8h_source.html	/^<div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00013	html/surf_8h_source.html	/^<div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00013	html/surf__cudaipoint_8h_source.html	/^<div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00013	html/surflib_8h_source.html	/^<div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00013	html/transposeGPU_8h_source.html	/^<div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00013	html/utils_8h_source.html	/^<div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00014	html/buildDetGPU_8h_source.html	/^<div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="comment"> * SURFGPU is distributed in the hope that it will be useful,<\/span><\/div>$/;"	a
l00014	html/buildSURFDescriptorsGPU_8h_source.html	/^<div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="comment"> * SURFGPU is distributed in the hope that it will be useful,<\/span><\/div>$/;"	a
l00014	html/convertRGB2GrayFloatGPU_8h_source.html	/^<div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="comment"> * SURFGPU is distributed in the hope that it will be useful,<\/span><\/div>$/;"	a
l00014	html/convertRGBA2GrayFloatGPU_8h_source.html	/^<div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="comment"> * SURFGPU is distributed in the hope that it will be useful,<\/span><\/div>$/;"	a
l00014	html/cudaimage_8h_source.html	/^<div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="comment"> * SURFGPU is distributed in the hope that it will be useful,<\/span><\/div>$/;"	a
l00014	html/defines_8h_source.html	/^<div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="comment"> * SURFGPU is distributed in the hope that it will be useful,<\/span><\/div>$/;"	a
l00014	html/detectIpointOrientationsGPU_8h_source.html	/^<div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="comment"> * SURFGPU is distributed in the hope that it will be useful,<\/span><\/div>$/;"	a
l00014	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="comment"> * SURFGPU is distributed in the hope that it will be useful,<\/span><\/div>$/;"	a
l00014	html/fasthessian__cudaipoint_8h_source.html	/^<div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="comment"> * SURFGPU is distributed in the hope that it will be useful,<\/span><\/div>$/;"	a
l00014	html/integral_8h_source.html	/^<div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="comment"> * SURFGPU is distributed in the hope that it will be useful,<\/span><\/div>$/;"	a
l00014	html/ipoint_8h_source.html	/^<div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="comment"> * SURFGPU is distributed in the hope that it will be useful,<\/span><\/div>$/;"	a
l00014	html/kmeans_8h_source.html	/^<div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="comment"> * SURFGPU is distributed in the hope that it will be useful,<\/span><\/div>$/;"	a
l00014	html/matchSURFKeypointsGPU_8h_source.html	/^<div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="comment"> * SURFGPU is distributed in the hope that it will be useful,<\/span><\/div>$/;"	a
l00014	html/nonMaxGPU_8h_source.html	/^<div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="comment"> * SURFGPU is distributed in the hope that it will be useful,<\/span><\/div>$/;"	a
l00014	html/normalizeSURFDescriptorsGPU_8h_source.html	/^<div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="comment"> * SURFGPU is distributed in the hope that it will be useful,<\/span><\/div>$/;"	a
l00014	html/surf_8h_source.html	/^<div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="comment"> * SURFGPU is distributed in the hope that it will be useful,<\/span><\/div>$/;"	a
l00014	html/surf__cudaipoint_8h_source.html	/^<div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="comment"> * SURFGPU is distributed in the hope that it will be useful,<\/span><\/div>$/;"	a
l00014	html/surflib_8h_source.html	/^<div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="comment"> * SURFGPU is distributed in the hope that it will be useful,<\/span><\/div>$/;"	a
l00014	html/transposeGPU_8h_source.html	/^<div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="comment"> * SURFGPU is distributed in the hope that it will be useful,<\/span><\/div>$/;"	a
l00014	html/utils_8h_source.html	/^<div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="comment"> * SURFGPU is distributed in the hope that it will be useful,<\/span><\/div>$/;"	a
l00015	html/buildDetGPU_8h_source.html	/^<div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of<\/span><\/div>$/;"	a
l00015	html/buildSURFDescriptorsGPU_8h_source.html	/^<div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of<\/span><\/div>$/;"	a
l00015	html/convertRGB2GrayFloatGPU_8h_source.html	/^<div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of<\/span><\/div>$/;"	a
l00015	html/convertRGBA2GrayFloatGPU_8h_source.html	/^<div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of<\/span><\/div>$/;"	a
l00015	html/cudaimage_8h_source.html	/^<div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of<\/span><\/div>$/;"	a
l00015	html/defines_8h_source.html	/^<div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of<\/span><\/div>$/;"	a
l00015	html/detectIpointOrientationsGPU_8h_source.html	/^<div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of<\/span><\/div>$/;"	a
l00015	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of<\/span><\/div>$/;"	a
l00015	html/fasthessian__cudaipoint_8h_source.html	/^<div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of<\/span><\/div>$/;"	a
l00015	html/integral_8h_source.html	/^<div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of<\/span><\/div>$/;"	a
l00015	html/ipoint_8h_source.html	/^<div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of<\/span><\/div>$/;"	a
l00015	html/kmeans_8h_source.html	/^<div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of<\/span><\/div>$/;"	a
l00015	html/matchSURFKeypointsGPU_8h_source.html	/^<div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of<\/span><\/div>$/;"	a
l00015	html/nonMaxGPU_8h_source.html	/^<div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of<\/span><\/div>$/;"	a
l00015	html/normalizeSURFDescriptorsGPU_8h_source.html	/^<div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of<\/span><\/div>$/;"	a
l00015	html/surf_8h_source.html	/^<div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of<\/span><\/div>$/;"	a
l00015	html/surf__cudaipoint_8h_source.html	/^<div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of<\/span><\/div>$/;"	a
l00015	html/surflib_8h_source.html	/^<div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of<\/span><\/div>$/;"	a
l00015	html/transposeGPU_8h_source.html	/^<div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of<\/span><\/div>$/;"	a
l00015	html/utils_8h_source.html	/^<div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of<\/span><\/div>$/;"	a
l00016	html/buildDetGPU_8h_source.html	/^<div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the<\/span><\/div>$/;"	a
l00016	html/buildSURFDescriptorsGPU_8h_source.html	/^<div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the<\/span><\/div>$/;"	a
l00016	html/convertRGB2GrayFloatGPU_8h_source.html	/^<div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the<\/span><\/div>$/;"	a
l00016	html/convertRGBA2GrayFloatGPU_8h_source.html	/^<div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the<\/span><\/div>$/;"	a
l00016	html/cudaimage_8h_source.html	/^<div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the<\/span><\/div>$/;"	a
l00016	html/defines_8h_source.html	/^<div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the<\/span><\/div>$/;"	a
l00016	html/detectIpointOrientationsGPU_8h_source.html	/^<div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the<\/span><\/div>$/;"	a
l00016	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the<\/span><\/div>$/;"	a
l00016	html/fasthessian__cudaipoint_8h_source.html	/^<div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the<\/span><\/div>$/;"	a
l00016	html/integral_8h_source.html	/^<div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the<\/span><\/div>$/;"	a
l00016	html/ipoint_8h_source.html	/^<div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the<\/span><\/div>$/;"	a
l00016	html/kmeans_8h_source.html	/^<div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the<\/span><\/div>$/;"	a
l00016	html/matchSURFKeypointsGPU_8h_source.html	/^<div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the<\/span><\/div>$/;"	a
l00016	html/nonMaxGPU_8h_source.html	/^<div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the<\/span><\/div>$/;"	a
l00016	html/normalizeSURFDescriptorsGPU_8h_source.html	/^<div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the<\/span><\/div>$/;"	a
l00016	html/surf_8h_source.html	/^<div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the<\/span><\/div>$/;"	a
l00016	html/surf__cudaipoint_8h_source.html	/^<div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the<\/span><\/div>$/;"	a
l00016	html/surflib_8h_source.html	/^<div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the<\/span><\/div>$/;"	a
l00016	html/transposeGPU_8h_source.html	/^<div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the<\/span><\/div>$/;"	a
l00016	html/utils_8h_source.html	/^<div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the<\/span><\/div>$/;"	a
l00017	html/buildDetGPU_8h_source.html	/^<div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="comment"> * GNU General Public License for more details.<\/span><\/div>$/;"	a
l00017	html/buildSURFDescriptorsGPU_8h_source.html	/^<div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="comment"> * GNU General Public License for more details.<\/span><\/div>$/;"	a
l00017	html/convertRGB2GrayFloatGPU_8h_source.html	/^<div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="comment"> * GNU General Public License for more details.<\/span><\/div>$/;"	a
l00017	html/convertRGBA2GrayFloatGPU_8h_source.html	/^<div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="comment"> * GNU General Public License for more details.<\/span><\/div>$/;"	a
l00017	html/cudaimage_8h_source.html	/^<div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="comment"> * GNU General Public License for more details.<\/span><\/div>$/;"	a
l00017	html/defines_8h_source.html	/^<div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="comment"> * GNU General Public License for more details.<\/span><\/div>$/;"	a
l00017	html/detectIpointOrientationsGPU_8h_source.html	/^<div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="comment"> * GNU General Public License for more details.<\/span><\/div>$/;"	a
l00017	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="comment"> * GNU General Public License for more details.<\/span><\/div>$/;"	a
l00017	html/fasthessian__cudaipoint_8h_source.html	/^<div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="comment"> * GNU General Public License for more details.<\/span><\/div>$/;"	a
l00017	html/integral_8h_source.html	/^<div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="comment"> * GNU General Public License for more details.<\/span><\/div>$/;"	a
l00017	html/ipoint_8h_source.html	/^<div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="comment"> * GNU General Public License for more details.<\/span><\/div>$/;"	a
l00017	html/kmeans_8h_source.html	/^<div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="comment"> * GNU General Public License for more details.<\/span><\/div>$/;"	a
l00017	html/matchSURFKeypointsGPU_8h_source.html	/^<div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="comment"> * GNU General Public License for more details.<\/span><\/div>$/;"	a
l00017	html/nonMaxGPU_8h_source.html	/^<div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="comment"> * GNU General Public License for more details.<\/span><\/div>$/;"	a
l00017	html/normalizeSURFDescriptorsGPU_8h_source.html	/^<div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="comment"> * GNU General Public License for more details.<\/span><\/div>$/;"	a
l00017	html/surf_8h_source.html	/^<div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="comment"> * GNU General Public License for more details.<\/span><\/div>$/;"	a
l00017	html/surf__cudaipoint_8h_source.html	/^<div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="comment"> * GNU General Public License for more details.<\/span><\/div>$/;"	a
l00017	html/surflib_8h_source.html	/^<div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="comment"> * GNU General Public License for more details.<\/span><\/div>$/;"	a
l00017	html/transposeGPU_8h_source.html	/^<div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="comment"> * GNU General Public License for more details.<\/span><\/div>$/;"	a
l00017	html/utils_8h_source.html	/^<div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="comment"> * GNU General Public License for more details.<\/span><\/div>$/;"	a
l00018	html/buildDetGPU_8h_source.html	/^<div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00018	html/buildSURFDescriptorsGPU_8h_source.html	/^<div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00018	html/convertRGB2GrayFloatGPU_8h_source.html	/^<div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00018	html/convertRGBA2GrayFloatGPU_8h_source.html	/^<div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00018	html/cudaimage_8h_source.html	/^<div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00018	html/defines_8h_source.html	/^<div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00018	html/detectIpointOrientationsGPU_8h_source.html	/^<div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00018	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00018	html/fasthessian__cudaipoint_8h_source.html	/^<div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00018	html/integral_8h_source.html	/^<div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00018	html/ipoint_8h_source.html	/^<div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00018	html/kmeans_8h_source.html	/^<div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00018	html/matchSURFKeypointsGPU_8h_source.html	/^<div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00018	html/nonMaxGPU_8h_source.html	/^<div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00018	html/normalizeSURFDescriptorsGPU_8h_source.html	/^<div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00018	html/surf_8h_source.html	/^<div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00018	html/surf__cudaipoint_8h_source.html	/^<div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00018	html/surflib_8h_source.html	/^<div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00018	html/transposeGPU_8h_source.html	/^<div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00018	html/utils_8h_source.html	/^<div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="comment"> *<\/span><\/div>$/;"	a
l00019	html/buildDetGPU_8h_source.html	/^<div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="comment"> * You should have received a copy of the GNU General Public License<\/span><\/div>$/;"	a
l00019	html/buildSURFDescriptorsGPU_8h_source.html	/^<div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="comment"> * You should have received a copy of the GNU General Public License<\/span><\/div>$/;"	a
l00019	html/convertRGB2GrayFloatGPU_8h_source.html	/^<div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="comment"> * You should have received a copy of the GNU General Public License<\/span><\/div>$/;"	a
l00019	html/convertRGBA2GrayFloatGPU_8h_source.html	/^<div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="comment"> * You should have received a copy of the GNU General Public License<\/span><\/div>$/;"	a
l00019	html/cudaimage_8h_source.html	/^<div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="comment"> * You should have received a copy of the GNU General Public License<\/span><\/div>$/;"	a
l00019	html/defines_8h_source.html	/^<div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="comment"> * You should have received a copy of the GNU General Public License<\/span><\/div>$/;"	a
l00019	html/detectIpointOrientationsGPU_8h_source.html	/^<div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="comment"> * You should have received a copy of the GNU General Public License<\/span><\/div>$/;"	a
l00019	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="comment"> * You should have received a copy of the GNU General Public License<\/span><\/div>$/;"	a
l00019	html/fasthessian__cudaipoint_8h_source.html	/^<div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="comment"> * You should have received a copy of the GNU General Public License<\/span><\/div>$/;"	a
l00019	html/integral_8h_source.html	/^<div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="comment"> * You should have received a copy of the GNU General Public License<\/span><\/div>$/;"	a
l00019	html/ipoint_8h_source.html	/^<div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="comment"> * You should have received a copy of the GNU General Public License<\/span><\/div>$/;"	a
l00019	html/kmeans_8h_source.html	/^<div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="comment"> * You should have received a copy of the GNU General Public License<\/span><\/div>$/;"	a
l00019	html/matchSURFKeypointsGPU_8h_source.html	/^<div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="comment"> * You should have received a copy of the GNU General Public License<\/span><\/div>$/;"	a
l00019	html/nonMaxGPU_8h_source.html	/^<div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="comment"> * You should have received a copy of the GNU General Public License<\/span><\/div>$/;"	a
l00019	html/normalizeSURFDescriptorsGPU_8h_source.html	/^<div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="comment"> * You should have received a copy of the GNU General Public License<\/span><\/div>$/;"	a
l00019	html/surf_8h_source.html	/^<div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="comment"> * You should have received a copy of the GNU General Public License<\/span><\/div>$/;"	a
l00019	html/surf__cudaipoint_8h_source.html	/^<div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="comment"> * You should have received a copy of the GNU General Public License<\/span><\/div>$/;"	a
l00019	html/surflib_8h_source.html	/^<div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="comment"> * You should have received a copy of the GNU General Public License<\/span><\/div>$/;"	a
l00019	html/transposeGPU_8h_source.html	/^<div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="comment"> * You should have received a copy of the GNU General Public License<\/span><\/div>$/;"	a
l00019	html/utils_8h_source.html	/^<div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="comment"> * You should have received a copy of the GNU General Public License<\/span><\/div>$/;"	a
l00020	html/buildDetGPU_8h_source.html	/^<div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="comment"> * along with SURFGPU.  If not, see &lt;http:\/\/www.gnu.org\/licenses\/&gt;.<\/span><\/div>$/;"	a
l00020	html/buildSURFDescriptorsGPU_8h_source.html	/^<div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="comment"> * along with SURFGPU.  If not, see &lt;http:\/\/www.gnu.org\/licenses\/&gt;.<\/span><\/div>$/;"	a
l00020	html/convertRGB2GrayFloatGPU_8h_source.html	/^<div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="comment"> * along with SURFGPU.  If not, see &lt;http:\/\/www.gnu.org\/licenses\/&gt;.<\/span><\/div>$/;"	a
l00020	html/convertRGBA2GrayFloatGPU_8h_source.html	/^<div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="comment"> * along with SURFGPU.  If not, see &lt;http:\/\/www.gnu.org\/licenses\/&gt;.<\/span><\/div>$/;"	a
l00020	html/cudaimage_8h_source.html	/^<div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="comment"> * along with SURFGPU.  If not, see &lt;http:\/\/www.gnu.org\/licenses\/&gt;.<\/span><\/div>$/;"	a
l00020	html/defines_8h_source.html	/^<div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="comment"> * along with SURFGPU.  If not, see &lt;http:\/\/www.gnu.org\/licenses\/&gt;.<\/span><\/div>$/;"	a
l00020	html/detectIpointOrientationsGPU_8h_source.html	/^<div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="comment"> * along with SURFGPU.  If not, see &lt;http:\/\/www.gnu.org\/licenses\/&gt;.<\/span><\/div>$/;"	a
l00020	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="comment"> * along with SURFGPU.  If not, see &lt;http:\/\/www.gnu.org\/licenses\/&gt;.<\/span><\/div>$/;"	a
l00020	html/fasthessian__cudaipoint_8h_source.html	/^<div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="comment"> * along with SURFGPU.  If not, see &lt;http:\/\/www.gnu.org\/licenses\/&gt;.<\/span><\/div>$/;"	a
l00020	html/integral_8h_source.html	/^<div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="comment"> * along with SURFGPU.  If not, see &lt;http:\/\/www.gnu.org\/licenses\/&gt;.<\/span><\/div>$/;"	a
l00020	html/ipoint_8h_source.html	/^<div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="comment"> * along with SURFGPU.  If not, see &lt;http:\/\/www.gnu.org\/licenses\/&gt;.<\/span><\/div>$/;"	a
l00020	html/kmeans_8h_source.html	/^<div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="comment"> * along with SURFGPU.  If not, see &lt;http:\/\/www.gnu.org\/licenses\/&gt;.<\/span><\/div>$/;"	a
l00020	html/matchSURFKeypointsGPU_8h_source.html	/^<div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="comment"> * along with SURFGPU.  If not, see &lt;http:\/\/www.gnu.org\/licenses\/&gt;.<\/span><\/div>$/;"	a
l00020	html/nonMaxGPU_8h_source.html	/^<div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="comment"> * along with SURFGPU.  If not, see &lt;http:\/\/www.gnu.org\/licenses\/&gt;.<\/span><\/div>$/;"	a
l00020	html/normalizeSURFDescriptorsGPU_8h_source.html	/^<div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="comment"> * along with SURFGPU.  If not, see &lt;http:\/\/www.gnu.org\/licenses\/&gt;.<\/span><\/div>$/;"	a
l00020	html/surf_8h_source.html	/^<div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="comment"> * along with SURFGPU.  If not, see &lt;http:\/\/www.gnu.org\/licenses\/&gt;.<\/span><\/div>$/;"	a
l00020	html/surf__cudaipoint_8h_source.html	/^<div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="comment"> * along with SURFGPU.  If not, see &lt;http:\/\/www.gnu.org\/licenses\/&gt;.<\/span><\/div>$/;"	a
l00020	html/surflib_8h_source.html	/^<div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="comment"> * along with SURFGPU.  If not, see &lt;http:\/\/www.gnu.org\/licenses\/&gt;.<\/span><\/div>$/;"	a
l00020	html/transposeGPU_8h_source.html	/^<div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="comment"> * along with SURFGPU.  If not, see &lt;http:\/\/www.gnu.org\/licenses\/&gt;.<\/span><\/div>$/;"	a
l00020	html/utils_8h_source.html	/^<div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="comment"> * along with SURFGPU.  If not, see &lt;http:\/\/www.gnu.org\/licenses\/&gt;.<\/span><\/div>$/;"	a
l00021	html/buildDetGPU_8h_source.html	/^<div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="comment"> *\/<\/span><\/div>$/;"	a
l00021	html/buildSURFDescriptorsGPU_8h_source.html	/^<div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="comment"> *\/<\/span><\/div>$/;"	a
l00021	html/convertRGB2GrayFloatGPU_8h_source.html	/^<div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="comment"> *\/<\/span><\/div>$/;"	a
l00021	html/convertRGBA2GrayFloatGPU_8h_source.html	/^<div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="comment"> *\/<\/span><\/div>$/;"	a
l00021	html/cudaimage_8h_source.html	/^<div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="comment"> *\/<\/span><\/div>$/;"	a
l00021	html/defines_8h_source.html	/^<div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="comment"> *\/<\/span><\/div>$/;"	a
l00021	html/detectIpointOrientationsGPU_8h_source.html	/^<div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="comment"> *\/<\/span><\/div>$/;"	a
l00021	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="comment"> *\/<\/span><\/div>$/;"	a
l00021	html/fasthessian__cudaipoint_8h_source.html	/^<div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="comment"> *\/<\/span><\/div>$/;"	a
l00021	html/integral_8h_source.html	/^<div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="comment"> *\/<\/span><\/div>$/;"	a
l00021	html/ipoint_8h_source.html	/^<div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="comment"> *\/<\/span><\/div>$/;"	a
l00021	html/kmeans_8h_source.html	/^<div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="comment"> *\/<\/span><\/div>$/;"	a
l00021	html/matchSURFKeypointsGPU_8h_source.html	/^<div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="comment"> *\/<\/span><\/div>$/;"	a
l00021	html/nonMaxGPU_8h_source.html	/^<div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="comment"> *\/<\/span><\/div>$/;"	a
l00021	html/normalizeSURFDescriptorsGPU_8h_source.html	/^<div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="comment"> *\/<\/span><\/div>$/;"	a
l00021	html/surf_8h_source.html	/^<div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="comment"> *\/<\/span><\/div>$/;"	a
l00021	html/surf__cudaipoint_8h_source.html	/^<div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="comment"> *\/<\/span><\/div>$/;"	a
l00021	html/surflib_8h_source.html	/^<div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="comment"> *\/<\/span><\/div>$/;"	a
l00021	html/transposeGPU_8h_source.html	/^<div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="comment"> *\/<\/span><\/div>$/;"	a
l00021	html/utils_8h_source.html	/^<div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="comment"> *\/<\/span><\/div>$/;"	a
l00022	html/buildDetGPU_8h_source.html	/^<div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<\/div>$/;"	a
l00022	html/buildSURFDescriptorsGPU_8h_source.html	/^<div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<\/div>$/;"	a
l00022	html/convertRGB2GrayFloatGPU_8h_source.html	/^<div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<\/div>$/;"	a
l00022	html/convertRGBA2GrayFloatGPU_8h_source.html	/^<div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<\/div>$/;"	a
l00022	html/cudaimage_8h_source.html	/^<div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<\/div>$/;"	a
l00022	html/defines_8h_source.html	/^<div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<\/div>$/;"	a
l00022	html/detectIpointOrientationsGPU_8h_source.html	/^<div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<\/div>$/;"	a
l00022	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<\/div>$/;"	a
l00022	html/fasthessian__cudaipoint_8h_source.html	/^<div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<\/div>$/;"	a
l00022	html/integral_8h_source.html	/^<div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<\/div>$/;"	a
l00022	html/ipoint_8h_source.html	/^<div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<\/div>$/;"	a
l00022	html/kmeans_8h_source.html	/^<div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<\/div>$/;"	a
l00022	html/matchSURFKeypointsGPU_8h_source.html	/^<div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<\/div>$/;"	a
l00022	html/nonMaxGPU_8h_source.html	/^<div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<\/div>$/;"	a
l00022	html/normalizeSURFDescriptorsGPU_8h_source.html	/^<div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<\/div>$/;"	a
l00022	html/surf_8h_source.html	/^<div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<\/div>$/;"	a
l00022	html/surf__cudaipoint_8h_source.html	/^<div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<\/div>$/;"	a
l00022	html/surflib_8h_source.html	/^<div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<\/div>$/;"	a
l00022	html/transposeGPU_8h_source.html	/^<div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<\/div>$/;"	a
l00022	html/utils_8h_source.html	/^<div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<\/div>$/;"	a
l00023	html/buildDetGPU_8h_source.html	/^<div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<span class="preprocessor">#ifndef BUILDDETGPU_H<\/span><\/div>$/;"	a
l00023	html/buildSURFDescriptorsGPU_8h_source.html	/^<div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<span class="preprocessor">#ifndef BUILDSURFDESCRIPTORSGPU_H<\/span><\/div>$/;"	a
l00023	html/convertRGB2GrayFloatGPU_8h_source.html	/^<div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<span class="preprocessor">#ifndef CONVERTRGB2GRAYFLOATGPU_H<\/span><\/div>$/;"	a
l00023	html/convertRGBA2GrayFloatGPU_8h_source.html	/^<div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<span class="preprocessor">#ifndef CONVERTRGBA2GRAYFLOATGPU_H<\/span><\/div>$/;"	a
l00023	html/cudaimage_8h_source.html	/^<div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<span class="preprocessor">#ifndef CUDAIMAGE_H<\/span><\/div>$/;"	a
l00023	html/defines_8h_source.html	/^<div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<span class="preprocessor">#ifndef DEFINES_H<\/span><\/div>$/;"	a
l00023	html/detectIpointOrientationsGPU_8h_source.html	/^<div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<span class="preprocessor">#ifndef DETECTIPOINTORIENTATIONSGPU_H<\/span><\/div>$/;"	a
l00023	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<span class="preprocessor">#ifndef FASTHESSIAN_H<\/span><\/div>$/;"	a
l00023	html/fasthessian__cudaipoint_8h_source.html	/^<div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<span class="preprocessor">#ifndef FASTHESSIAN_CUDAIPOINT_H<\/span><\/div>$/;"	a
l00023	html/integral_8h_source.html	/^<div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<span class="preprocessor">#ifndef INTEGRAL_H<\/span><\/div>$/;"	a
l00023	html/ipoint_8h_source.html	/^<div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<span class="preprocessor">#ifndef IPOINT_H<\/span><\/div>$/;"	a
l00023	html/kmeans_8h_source.html	/^<div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<span class="preprocessor">#include &quot;ipoint.h&quot;<\/span><\/div>$/;"	a
l00023	html/matchSURFKeypointsGPU_8h_source.html	/^<div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<span class="preprocessor">#ifndef MATCHSURFKEYPOINTSGPU_H<\/span><\/div>$/;"	a
l00023	html/nonMaxGPU_8h_source.html	/^<div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<span class="preprocessor">#ifndef NONMAXGPU_H<\/span><\/div>$/;"	a
l00023	html/normalizeSURFDescriptorsGPU_8h_source.html	/^<div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<span class="preprocessor">#ifndef NORMALIZESURFDESCRIPTORSGPU_H<\/span><\/div>$/;"	a
l00023	html/surf_8h_source.html	/^<div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<span class="preprocessor">#ifndef SURF_H<\/span><\/div>$/;"	a
l00023	html/surf__cudaipoint_8h_source.html	/^<div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<span class="preprocessor">#ifndef SURF_CUDAIPOINT_H<\/span><\/div>$/;"	a
l00023	html/surflib_8h_source.html	/^<div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<span class="preprocessor">#ifndef SURFLIB_H<\/span><\/div>$/;"	a
l00023	html/transposeGPU_8h_source.html	/^<div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<span class="preprocessor">#ifndef TRANSPOSEGPU_H<\/span><\/div>$/;"	a
l00023	html/utils_8h_source.html	/^<div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<span class="preprocessor">#ifndef UTILS_H<\/span><\/div>$/;"	a
l00024	html/buildDetGPU_8h_source.html	/^<div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<span class="preprocessor"><\/span><span class="preprocessor">#define BUILDDETGPU_H<\/span><\/div>$/;"	a
l00024	html/buildSURFDescriptorsGPU_8h_source.html	/^<div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<span class="preprocessor"><\/span><span class="preprocessor">#define BUILDSURFDESCRIPTORSGPU_H<\/span><\/div>$/;"	a
l00024	html/convertRGB2GrayFloatGPU_8h_source.html	/^<div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<span class="preprocessor"><\/span><span class="preprocessor">#define CONVERTRGB2GRAYFLOATGPU_H<\/span><\/div>$/;"	a
l00024	html/convertRGBA2GrayFloatGPU_8h_source.html	/^<div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<span class="preprocessor"><\/span><span class="preprocessor">#define CONVERTRGBA2GRAYFLOATGPU_H<\/span><\/div>$/;"	a
l00024	html/cudaimage_8h_source.html	/^<div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<span class="preprocessor"><\/span><span class="preprocessor">#define CUDAIMAGE_H<\/span><\/div>$/;"	a
l00024	html/defines_8h_source.html	/^<div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<span class="preprocessor"><\/span><span class="preprocessor">#define DEFINES_H<\/span><\/div>$/;"	a
l00024	html/detectIpointOrientationsGPU_8h_source.html	/^<div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<span class="preprocessor"><\/span><span class="preprocessor">#define DETECTIPOINTORIENTATIONSGPU_H<\/span><\/div>$/;"	a
l00024	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<span class="preprocessor"><\/span><span class="preprocessor">#define FASTHESSIAN_H<\/span><\/div>$/;"	a
l00024	html/fasthessian__cudaipoint_8h_source.html	/^<div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<span class="preprocessor"><\/span><span class="preprocessor">#define FASTHESSIAN_CUDAIPOINT_H<\/span><\/div>$/;"	a
l00024	html/integral_8h_source.html	/^<div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<span class="preprocessor"><\/span><span class="preprocessor">#define INTEGRAL_H<\/span><\/div>$/;"	a
l00024	html/ipoint_8h_source.html	/^<div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<span class="preprocessor"><\/span><span class="preprocessor">#define IPOINT_H<\/span><\/div>$/;"	a
l00024	html/kmeans_8h_source.html	/^<div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<\/div>$/;"	a
l00024	html/matchSURFKeypointsGPU_8h_source.html	/^<div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<span class="preprocessor"><\/span><span class="preprocessor">#define MATCHSURFKEYPOINTSGPU_H<\/span><\/div>$/;"	a
l00024	html/nonMaxGPU_8h_source.html	/^<div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<span class="preprocessor"><\/span><span class="preprocessor">#define NONMAXGPU_H<\/span><\/div>$/;"	a
l00024	html/normalizeSURFDescriptorsGPU_8h_source.html	/^<div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<span class="preprocessor"><\/span><span class="preprocessor">#define NORMALIZESURFDESCRIPTORSGPU_H<\/span><\/div>$/;"	a
l00024	html/surf_8h_source.html	/^<div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<span class="preprocessor"><\/span><span class="preprocessor">#define SURF_H<\/span><\/div>$/;"	a
l00024	html/surf__cudaipoint_8h_source.html	/^<div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<span class="preprocessor"><\/span><span class="preprocessor">#define SURF_CUDAIPOINT_H<\/span><\/div>$/;"	a
l00024	html/surflib_8h_source.html	/^<div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<span class="preprocessor"><\/span><span class="preprocessor">#define SURFLIB_H<\/span><\/div>$/;"	a
l00024	html/transposeGPU_8h_source.html	/^<div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<span class="preprocessor"><\/span><span class="preprocessor">#define TRANSPOSEGPU_H<\/span><\/div>$/;"	a
l00024	html/utils_8h_source.html	/^<div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<span class="preprocessor"><\/span><span class="preprocessor">#define UTILS_H<\/span><\/div>$/;"	a
l00025	html/buildDetGPU_8h_source.html	/^<div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<span class="preprocessor"><\/span><\/div>$/;"	a
l00025	html/buildSURFDescriptorsGPU_8h_source.html	/^<div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<span class="preprocessor"><\/span><\/div>$/;"	a
l00025	html/convertRGB2GrayFloatGPU_8h_source.html	/^<div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<span class="preprocessor"><\/span><\/div>$/;"	a
l00025	html/convertRGBA2GrayFloatGPU_8h_source.html	/^<div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<span class="preprocessor"><\/span><\/div>$/;"	a
l00025	html/cudaimage_8h_source.html	/^<div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<span class="preprocessor"><\/span><\/div>$/;"	a
l00025	html/defines_8h_source.html	/^<div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<span class="preprocessor"><\/span><\/div>$/;"	a
l00025	html/detectIpointOrientationsGPU_8h_source.html	/^<div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<span class="preprocessor"><\/span><\/div>$/;"	a
l00025	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<span class="preprocessor"><\/span><\/div>$/;"	a
l00025	html/fasthessian__cudaipoint_8h_source.html	/^<div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<span class="preprocessor"><\/span><\/div>$/;"	a
l00025	html/integral_8h_source.html	/^<div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<span class="preprocessor"><\/span><\/div>$/;"	a
l00025	html/ipoint_8h_source.html	/^<div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<span class="preprocessor"><\/span><\/div>$/;"	a
l00025	html/kmeans_8h_source.html	/^<div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<span class="preprocessor">#include &lt;vector&gt;<\/span><\/div>$/;"	a
l00025	html/matchSURFKeypointsGPU_8h_source.html	/^<div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<span class="preprocessor"><\/span><\/div>$/;"	a
l00025	html/nonMaxGPU_8h_source.html	/^<div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<span class="preprocessor"><\/span><\/div>$/;"	a
l00025	html/normalizeSURFDescriptorsGPU_8h_source.html	/^<div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<span class="preprocessor"><\/span><\/div>$/;"	a
l00025	html/surf_8h_source.html	/^<div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<span class="preprocessor"><\/span><\/div>$/;"	a
l00025	html/surf__cudaipoint_8h_source.html	/^<div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<span class="preprocessor"><\/span><\/div>$/;"	a
l00025	html/surflib_8h_source.html	/^<div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<span class="preprocessor"><\/span><\/div>$/;"	a
l00025	html/transposeGPU_8h_source.html	/^<div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<span class="preprocessor"><\/span><\/div>$/;"	a
l00025	html/utils_8h_source.html	/^<div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<span class="preprocessor"><\/span><\/div>$/;"	a
l00026	html/buildDetGPU_8h_source.html	/^<div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<span class="preprocessor">#include &quot;cudaimage.h&quot;<\/span><\/div>$/;"	a
l00026	html/buildSURFDescriptorsGPU_8h_source.html	/^<div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<span class="preprocessor">#include &quot;surf_cudaipoint.h&quot;<\/span><\/div>$/;"	a
l00026	html/cudaimage_8h_source.html	/^<div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<span class="preprocessor">#include &lt;cuda_runtime.h&gt;<\/span><\/div>$/;"	a
l00026	html/detectIpointOrientationsGPU_8h_source.html	/^<div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<span class="preprocessor">#include &lt;cuda_runtime.h&gt;<\/span><\/div>$/;"	a
l00026	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<span class="preprocessor">#include &lt;vector&gt;<\/span><\/div>$/;"	a
l00026	html/fasthessian__cudaipoint_8h_source.html	/^<div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<span class="comment">\/\/ Simplified interest point for CUDA implementation. Only needed for<\/span><\/div>$/;"	a
l00026	html/integral_8h_source.html	/^<div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<span class="preprocessor">#include &lt;cv.h&gt;<\/span><\/div>$/;"	a
l00026	html/ipoint_8h_source.html	/^<div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<span class="preprocessor">#include &lt;vector&gt;<\/span><\/div>$/;"	a
l00026	html/kmeans_8h_source.html	/^<div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<span class="preprocessor">#include &lt;time.h&gt;<\/span><\/div>$/;"	a
l00026	html/nonMaxGPU_8h_source.html	/^<div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<span class="preprocessor">#include &quot;fasthessian_cudaipoint.h&quot;<\/span><\/div>$/;"	a
l00026	html/normalizeSURFDescriptorsGPU_8h_source.html	/^<div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<span class="preprocessor">#include &quot;surf_cudaipoint.h&quot;<\/span><\/div>$/;"	a
l00026	html/surf_8h_source.html	/^<div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<span class="preprocessor">#include &lt;vector&gt;<\/span><\/div>$/;"	a
l00026	html/surf__cudaipoint_8h_source.html	/^<div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<span class="comment">\/\/ Ipoint struct for CUDA implementation of SURF descriptor computation.<\/span><\/div>$/;"	a
l00026	html/surflib_8h_source.html	/^<div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<span class="preprocessor">#include &quot;cv.h&quot;<\/span><\/div>$/;"	a
l00026	html/utils_8h_source.html	/^<div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<span class="preprocessor">#include &quot;cv.h&quot;<\/span><\/div>$/;"	a
l00027	html/buildDetGPU_8h_source.html	/^<div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;<\/div>$/;"	a
l00027	html/buildSURFDescriptorsGPU_8h_source.html	/^<div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;<\/div>$/;"	a
l00027	html/cudaimage_8h_source.html	/^<div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;<span class="preprocessor">#include &quot;cuda\/helper_funcs.h&quot;<\/span><\/div>$/;"	a
l00027	html/defines_8h_source.html	/^<div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;<\/div>$/;"	a
l00027	html/detectIpointOrientationsGPU_8h_source.html	/^<div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;<\/div>$/;"	a
l00027	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;<\/div>$/;"	a
l00027	html/fasthessian__cudaipoint_8h_source.html	/^<div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;<span class="comment">\/\/ fast Hessian computation.<\/span><\/div>$/;"	a
l00027	html/integral_8h_source.html	/^<div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;<span class="preprocessor">#include &quot;cudaimage.h&quot;<\/span><\/div>$/;"	a
l00027	html/ipoint_8h_source.html	/^<div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;<span class="preprocessor">#include &lt;math.h&gt;<\/span><\/div>$/;"	a
l00027	html/kmeans_8h_source.html	/^<div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;<span class="preprocessor">#include &lt;stdlib.h&gt;<\/span><\/div>$/;"	a
l00027	html/nonMaxGPU_8h_source.html	/^<div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;<\/div>$/;"	a
l00027	html/normalizeSURFDescriptorsGPU_8h_source.html	/^<div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;<\/div>$/;"	a
l00027	html/surf_8h_source.html	/^<div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;<\/div>$/;"	a
l00027	html/surf__cudaipoint_8h_source.html	/^<div class="line"><a name="l00027"><\/a><span class="lineno"><a class="code" href="structsurf__cudaIpoint.html">   27<\/a><\/span>&#160;<span class="keyword">typedef<\/span> <span class="keyword">struct <\/span>{<\/div>$/;"	a
l00027	html/surflib_8h_source.html	/^<div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;<span class="preprocessor">#include &quot;highgui.h&quot;<\/span><\/div>$/;"	a
l00027	html/utils_8h_source.html	/^<div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;<span class="preprocessor">#include &quot;ipoint.h&quot;<\/span><\/div>$/;"	a
l00028	html/cudaimage_8h_source.html	/^<div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;<\/div>$/;"	a
l00028	html/detectIpointOrientationsGPU_8h_source.html	/^<div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;<span class="preprocessor">#include &quot;surf_cudaipoint.h&quot;<\/span><\/div>$/;"	a
l00028	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;<span class="preprocessor">#include &quot;cv.h&quot;<\/span><\/div>$/;"	a
l00028	html/fasthessian__cudaipoint_8h_source.html	/^<div class="line"><a name="l00028"><\/a><span class="lineno"><a class="code" href="structfasthessian__cudaIpoint.html">   28<\/a><\/span>&#160;<span class="keyword">typedef<\/span> <span class="keyword">struct<\/span><\/div>$/;"	a
l00028	html/integral_8h_source.html	/^<div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;<\/div>$/;"	a
l00028	html/ipoint_8h_source.html	/^<div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;<span class="preprocessor">#include &lt;cv.h&gt;<\/span><\/div>$/;"	a
l00028	html/kmeans_8h_source.html	/^<div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;<\/div>$/;"	a
l00028	html/surf_8h_source.html	/^<div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;<span class="preprocessor">#include &quot;ipoint.h&quot;<\/span><\/div>$/;"	a
l00028	html/surflib_8h_source.html	/^<div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;<span class="preprocessor">#include &quot;integral.h&quot;<\/span><\/div>$/;"	a
l00028	html/utils_8h_source.html	/^<div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;<\/div>$/;"	a
l00029	html/cudaimage_8h_source.html	/^<div class="line"><a name="l00029"><\/a><span class="lineno"><a class="code" href="structcudaImage.html">   29<\/a><\/span>&#160;<span class="keyword">struct <\/span><a class="code" href="structcudaImage.html">cudaImage<\/a><\/div>$/;"	a
l00029	html/detectIpointOrientationsGPU_8h_source.html	/^<div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;<\/div>$/;"	a
l00029	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;<span class="preprocessor">#include &quot;ipoint.h&quot;<\/span><\/div>$/;"	a
l00029	html/fasthessian__cudaipoint_8h_source.html	/^<div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;{<\/div>$/;"	a
l00029	html/ipoint_8h_source.html	/^<div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;<\/div>$/;"	a
l00029	html/kmeans_8h_source.html	/^<div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;<span class="comment">\/\/-----------------------------------------------------------<\/span><\/div>$/;"	a
l00029	html/surf_8h_source.html	/^<div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;<span class="preprocessor">#include &quot;surf_cudaipoint.h&quot;<\/span><\/div>$/;"	a
l00029	html/surf__cudaipoint_8h_source.html	/^<div class="line"><a name="l00029"><\/a><span class="lineno"><a class="code" href="structsurf__cudaIpoint.html#a7060fd8fcfa5ba8d68cc75f1b666294a">   29<\/a><\/span>&#160;    <span class="keywordtype">float<\/span> <a class="code" href="structsurf__cudaIpoint.html#a7060fd8fcfa5ba8d68cc75f1b666294a" title="Coordinates of the detected interest point. ">x<\/a>, y;<\/div>$/;"	a
l00029	html/surflib_8h_source.html	/^<div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;<span class="preprocessor">#include &quot;fasthessian.h&quot;<\/span><\/div>$/;"	a
l00029	html/utils_8h_source.html	/^<div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;<span class="preprocessor">#include &lt;vector&gt;<\/span><\/div>$/;"	a
l00030	html/cudaimage_8h_source.html	/^<div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;{<\/div>$/;"	a
l00030	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;<span class="preprocessor">#include &quot;fasthessian_cudaipoint.h&quot;<\/span><\/div>$/;"	a
l00030	html/fasthessian__cudaipoint_8h_source.html	/^<div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;    <span class="keywordtype">float<\/span> x;<\/div>$/;"	a
l00030	html/ipoint_8h_source.html	/^<div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;<span class="comment">\/\/-------------------------------------------------------<\/span><\/div>$/;"	a
l00030	html/kmeans_8h_source.html	/^<div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;<span class="comment">\/\/ Kmeans clustering class (under development)<\/span><\/div>$/;"	a
l00030	html/surf_8h_source.html	/^<div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;<span class="preprocessor">#include &quot;cudaimage.h&quot;<\/span><\/div>$/;"	a
l00030	html/surf__cudaipoint_8h_source.html	/^<div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;<\/div>$/;"	a
l00030	html/surflib_8h_source.html	/^<div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;<span class="preprocessor">#include &quot;surf.h&quot;<\/span><\/div>$/;"	a
l00030	html/utils_8h_source.html	/^<div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;<\/div>$/;"	a
l00031	html/cudaimage_8h_source.html	/^<div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;    <span class="keywordtype">int<\/span>    width;     <span class="comment">\/* Image width in pixels. *\/<\/span><\/div>$/;"	a
l00031	html/defines_8h_source.html	/^<div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;<span class="preprocessor">#define IMG_SIZE_DIVISOR 160<\/span><\/div>$/;"	a
l00031	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;<\/div>$/;"	a
l00031	html/fasthessian__cudaipoint_8h_source.html	/^<div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;    <span class="keywordtype">float<\/span> y;<\/div>$/;"	a
l00031	html/integral_8h_source.html	/^<div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;<a class="code" href="structcudaImage.html">cudaImage<\/a>* Integral(IplImage *src);<\/div>$/;"	a
l00031	html/ipoint_8h_source.html	/^<div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;<\/div>$/;"	a
l00031	html/kmeans_8h_source.html	/^<div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;<span class="comment">\/\/  - Can be used to cluster points based on their location.<\/span><\/div>$/;"	a
l00031	html/matchSURFKeypointsGPU_8h_source.html	/^<div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;<span class="keywordtype">void<\/span> prepare_matchSURFKeypointsGPU(<span class="keywordtype">float<\/span> threshold);<\/div>$/;"	a
l00031	html/surf_8h_source.html	/^<div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;<\/div>$/;"	a
l00031	html/surflib_8h_source.html	/^<div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;<span class="preprocessor">#include &quot;ipoint.h&quot;<\/span><\/div>$/;"	a
l00032	html/buildSURFDescriptorsGPU_8h_source.html	/^<div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;<span class="keywordtype">void<\/span> prepare_buildSURFDescriptorsGPU();<\/div>$/;"	a
l00032	html/cudaimage_8h_source.html	/^<div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;    <span class="keywordtype">int<\/span>    height;    <span class="comment">\/* Image height in pixels. *\/<\/span><\/div>$/;"	a
l00032	html/defines_8h_source.html	/^<div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;<span class="preprocessor"><\/span><\/div>$/;"	a
l00032	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;<span class="keyword">static<\/span> <span class="keyword">const<\/span> <span class="keywordtype">int<\/span> OCTAVES = 4;<\/div>$/;"	a
l00032	html/fasthessian__cudaipoint_8h_source.html	/^<div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;    <span class="keywordtype">float<\/span> scale;<\/div>$/;"	a
l00032	html/integral_8h_source.html	/^<div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;<\/div>$/;"	a
l00032	html/ipoint_8h_source.html	/^<div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;<span class="keyword">class <\/span><a class="code" href="classIpoint.html">Ipoint<\/a>; <span class="comment">\/\/ Pre-declaration<\/span><\/div>$/;"	a
l00032	html/kmeans_8h_source.html	/^<div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;<span class="comment">\/\/  - Create Kmeans object and call Run with IpVec.<\/span><\/div>$/;"	a
l00032	html/matchSURFKeypointsGPU_8h_source.html	/^<div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;<\/div>$/;"	a
l00032	html/normalizeSURFDescriptorsGPU_8h_source.html	/^<div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;<span class="keywordtype">void<\/span> normalizeSURFDescriptorsGPU(<a class="code" href="structsurf__cudaIpoint.html">surf_cudaIpoint<\/a> *d_ipoints, <span class="keywordtype">size_t<\/span> num_ipoints);<\/div>$/;"	a
l00032	html/surf_8h_source.html	/^<div class="line"><a name="l00032"><\/a><span class="lineno"><a class="code" href="classSurf.html">   32<\/a><\/span>&#160;<span class="keyword">class <\/span><a class="code" href="classSurf.html">Surf<\/a> {<\/div>$/;"	a
l00032	html/surf__cudaipoint_8h_source.html	/^<div class="line"><a name="l00032"><\/a><span class="lineno"><a class="code" href="structsurf__cudaIpoint.html#ad5da0b86ff95c812fd3246cf5d034d72">   32<\/a><\/span>&#160;    <span class="keywordtype">float<\/span> <a class="code" href="structsurf__cudaIpoint.html#ad5da0b86ff95c812fd3246cf5d034d72" title="Detected scale. ">scale<\/a>;<\/div>$/;"	a
l00032	html/surflib_8h_source.html	/^<div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;<span class="preprocessor">#include &quot;cudaimage.h&quot;<\/span><\/div>$/;"	a
l00032	html/utils_8h_source.html	/^<div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;<span class="keywordtype">void<\/span> error(<span class="keyword">const<\/span> <span class="keywordtype">char<\/span> *msg);<\/div>$/;"	a
l00033	html/buildSURFDescriptorsGPU_8h_source.html	/^<div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;<\/div>$/;"	a
l00033	html/cudaimage_8h_source.html	/^<div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;    <span class="keywordtype">char<\/span>*  data;      <span class="comment">\/* Pointer to aligned image data. *\/<\/span><\/div>$/;"	a
l00033	html/defines_8h_source.html	/^<div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;<span class="comment">\/\/ Whether to use interpolation for non-maximum suppression<\/span><\/div>$/;"	a
l00033	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;<span class="keyword">static<\/span> <span class="keyword">const<\/span> <span class="keywordtype">int<\/span> INTERVALS = 4;<\/div>$/;"	a
l00033	html/fasthessian__cudaipoint_8h_source.html	/^<div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;    <span class="keywordtype">int<\/span> laplacian;<\/div>$/;"	a
l00033	html/integral_8h_source.html	/^<div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;<span class="preprocessor">#endif <\/span><span class="comment">\/* INTEGRAL_H *\/<\/span><span class="preprocessor"><\/span><\/div>$/;"	a
l00033	html/ipoint_8h_source.html	/^<div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;<span class="keyword">typedef<\/span> std::vector&lt;Ipoint&gt; IpVec;<\/div>$/;"	a
l00033	html/kmeans_8h_source.html	/^<div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;<span class="comment">\/\/  - Planned improvements include clustering based on motion <\/span><\/div>$/;"	a
l00033	html/normalizeSURFDescriptorsGPU_8h_source.html	/^<div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;<\/div>$/;"	a
l00033	html/surf_8h_source.html	/^<div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;<\/div>$/;"	a
l00033	html/surf__cudaipoint_8h_source.html	/^<div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;<\/div>$/;"	a
l00033	html/surflib_8h_source.html	/^<div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;<span class="preprocessor">#include &lt;sys\/time.h&gt;<\/span><\/div>$/;"	a
l00033	html/utils_8h_source.html	/^<div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;<\/div>$/;"	a
l00034	html/buildDetGPU_8h_source.html	/^<div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;<span class="keywordtype">void<\/span> prepare_buildDetGPU(<span class="keyword">const<\/span> <span class="keywordtype">int<\/span> *lobe_cache_unique, <span class="keywordtype">size_t<\/span> size);<\/div>$/;"	a
l00034	html/cudaimage_8h_source.html	/^<div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;    <span class="keywordtype">size_t<\/span> widthStep; <span class="comment">\/* Size of aligned image row in bytes. *\/<\/span><\/div>$/;"	a
l00034	html/defines_8h_source.html	/^<div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;<span class="preprocessor">#define INTERPOLATION_ENABLED 1<\/span><\/div>$/;"	a
l00034	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;<span class="keyword">static<\/span> <span class="keyword">const<\/span> <span class="keywordtype">float<\/span> THRES = 0.0004f;<\/div>$/;"	a
l00034	html/fasthessian__cudaipoint_8h_source.html	/^<div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;} <a class="code" href="structfasthessian__cudaIpoint.html">fasthessian_cudaIpoint<\/a>;<\/div>$/;"	a
l00034	html/ipoint_8h_source.html	/^<div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;<span class="keyword">typedef<\/span> std::vector&lt;std::pair&lt;Ipoint, Ipoint&gt; &gt; IpPairVec;<\/div>$/;"	a
l00034	html/kmeans_8h_source.html	/^<div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;<span class="comment">\/\/    and descriptor components.<\/span><\/div>$/;"	a
l00034	html/nonMaxGPU_8h_source.html	/^<div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;<span class="keywordtype">void<\/span> prepare_nonMaxGPU(<span class="keyword">const<\/span> <span class="keywordtype">int<\/span> *h_lobe_map, <span class="keywordtype">size_t<\/span> size);<\/div>$/;"	a
l00034	html/normalizeSURFDescriptorsGPU_8h_source.html	/^<div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;<span class="preprocessor">#endif <\/span><span class="comment">\/* NORMALIZESURFDESCRIPTORSGPU_H *\/<\/span><span class="preprocessor"><\/span><\/div>$/;"	a
l00034	html/surf_8h_source.html	/^<div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;  <span class="keyword">public<\/span>:<\/div>$/;"	a
l00034	html/surflib_8h_source.html	/^<div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;<\/div>$/;"	a
l00034	html/transposeGPU_8h_source.html	/^<div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;<span class="keywordtype">void<\/span> transposeGPU(<span class="keywordtype">float<\/span> *d_dst, <span class="keywordtype">size_t<\/span> dst_pitch,<\/div>$/;"	a
l00035	html/buildDetGPU_8h_source.html	/^<div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;<\/div>$/;"	a
l00035	html/cudaimage_8h_source.html	/^<div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;};<\/div>$/;"	a
l00035	html/defines_8h_source.html	/^<div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;<span class="preprocessor"><\/span><\/div>$/;"	a
l00035	html/detectIpointOrientationsGPU_8h_source.html	/^<div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;<span class="keywordtype">void<\/span> prepare_detectIpointOrientationsGPU();<\/div>$/;"	a
l00035	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;<span class="keyword">static<\/span> <span class="keyword">const<\/span> <span class="keywordtype">int<\/span> INIT_SAMPLE = 2;<\/div>$/;"	a
l00035	html/fasthessian__cudaipoint_8h_source.html	/^<div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;<\/div>$/;"	a
l00035	html/ipoint_8h_source.html	/^<div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;<\/div>$/;"	a
l00035	html/kmeans_8h_source.html	/^<div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;<span class="comment">\/\/-----------------------------------------------------------<\/span><\/div>$/;"	a
l00035	html/nonMaxGPU_8h_source.html	/^<div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;<\/div>$/;"	a
l00035	html/surf_8h_source.html	/^<div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;<\/div>$/;"	a
l00035	html/surf__cudaipoint_8h_source.html	/^<div class="line"><a name="l00035"><\/a><span class="lineno"><a class="code" href="structsurf__cudaIpoint.html#a2a17a4c0770658e6ab56b46667485f57">   35<\/a><\/span>&#160;    <span class="keywordtype">float<\/span> <a class="code" href="structsurf__cudaIpoint.html#a2a17a4c0770658e6ab56b46667485f57" title="Orientation measured anti-clockwise from +ve x-axis. ">orientation<\/a>;<\/div>$/;"	a
l00035	html/surflib_8h_source.html	/^<div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;<\/div>$/;"	a
l00035	html/transposeGPU_8h_source.html	/^<div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;    <span class="keywordtype">float<\/span> *d_src, <span class="keywordtype">size_t<\/span> src_pitch,<\/div>$/;"	a
l00035	html/utils_8h_source.html	/^<div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;<span class="keywordtype">void<\/span> showImage(IplImage *img);<\/div>$/;"	a
l00036	html/cudaimage_8h_source.html	/^<div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;<\/div>$/;"	a
l00036	html/defines_8h_source.html	/^<div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;<span class="preprocessor">#endif <\/span><span class="comment">\/* DEFINES_H *\/<\/span><span class="preprocessor"><\/span><\/div>$/;"	a
l00036	html/detectIpointOrientationsGPU_8h_source.html	/^<div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;<\/div>$/;"	a
l00036	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;<\/div>$/;"	a
l00036	html/fasthessian__cudaipoint_8h_source.html	/^<div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;<span class="preprocessor">#endif <\/span><span class="comment">\/* FASTHESSIAN_CUDAIPOINT_H *\/<\/span><span class="preprocessor"><\/span><\/div>$/;"	a
l00036	html/ipoint_8h_source.html	/^<div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;<span class="comment">\/\/-------------------------------------------------------<\/span><\/div>$/;"	a
l00036	html/kmeans_8h_source.html	/^<div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;<\/div>$/;"	a
l00036	html/surf__cudaipoint_8h_source.html	/^<div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;<\/div>$/;"	a
l00036	html/transposeGPU_8h_source.html	/^<div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;    <span class="keywordtype">unsigned<\/span> <span class="keywordtype">int<\/span> width, <span class="keywordtype">unsigned<\/span> <span class="keywordtype">int<\/span> height);<\/div>$/;"	a
l00036	html/utils_8h_source.html	/^<div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;<\/div>$/;"	a
l00037	html/cudaimage_8h_source.html	/^<div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;<span class="keyword">inline<\/span> <span class="keywordtype">void<\/span> freeCudaImage(<a class="code" href="structcudaImage.html">cudaImage<\/a> *img)<\/div>$/;"	a
l00037	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;<\/div>$/;"	a
l00037	html/ipoint_8h_source.html	/^<div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;<\/div>$/;"	a
l00037	html/kmeans_8h_source.html	/^<div class="line"><a name="l00037"><\/a><span class="lineno"><a class="code" href="classKmeans.html">   37<\/a><\/span>&#160;<span class="keyword">class <\/span><a class="code" href="classKmeans.html">Kmeans<\/a> {<\/div>$/;"	a
l00037	html/surf_8h_source.html	/^<div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;    <a class="code" href="classSurf.html#ab9ee01d40280065f099d4c9fefabf651" title="Standard Constructor (img is an integral image) ">Surf<\/a>(<a class="code" href="structcudaImage.html">cudaImage<\/a> *img, IpVec &amp;ipts);<\/div>$/;"	a
l00037	html/surflib_8h_source.html	/^<div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;<span class="keyword">inline<\/span> <span class="keywordtype">void<\/span> surfDetDes(IplImage *img,  <span class="comment">\/* image to find Ipoints in *\/<\/span><\/div>$/;"	a
l00037	html/transposeGPU_8h_source.html	/^<div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;<\/div>$/;"	a
l00038	html/cudaimage_8h_source.html	/^<div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;{<\/div>$/;"	a
l00038	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00038"><\/a><span class="lineno"><a class="code" href="classFastHessian.html">   38<\/a><\/span>&#160;<span class="keyword">class <\/span><a class="code" href="classFastHessian.html">FastHessian<\/a> {<\/div>$/;"	a
l00038	html/kmeans_8h_source.html	/^<div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;<\/div>$/;"	a
l00038	html/surf_8h_source.html	/^<div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;<\/div>$/;"	a
l00038	html/surf__cudaipoint_8h_source.html	/^<div class="line"><a name="l00038"><\/a><span class="lineno"><a class="code" href="structsurf__cudaIpoint.html#a79b61d44e8fa9a2f2080856a60f80b48">   38<\/a><\/span>&#160;    <span class="keywordtype">int<\/span> <a class="code" href="structsurf__cudaIpoint.html#a79b61d44e8fa9a2f2080856a60f80b48" title="Sign of laplacian for fast matching purposes. ">laplacian<\/a>;<\/div>$/;"	a
l00038	html/surflib_8h_source.html	/^<div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;                       std::vector&lt;Ipoint&gt; &amp;ipts, <span class="comment">\/* reference to vector of Ipoints *\/<\/span><\/div>$/;"	a
l00038	html/transposeGPU_8h_source.html	/^<div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;<span class="preprocessor">#endif <\/span><span class="comment">\/* TRANSPOSEGPU_H *\/<\/span><span class="preprocessor"><\/span><\/div>$/;"	a
l00038	html/utils_8h_source.html	/^<div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;<span class="keywordtype">void<\/span> showImage(<span class="keyword">const<\/span> <span class="keywordtype">char<\/span> *title, IplImage *img);<\/div>$/;"	a
l00039	html/cudaimage_8h_source.html	/^<div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;    CUDA_SAFE_CALL( cudaFree(img-&gt;data) );<\/div>$/;"	a
l00039	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;<\/div>$/;"	a
l00039	html/ipoint_8h_source.html	/^<div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;<span class="keywordtype">void<\/span> getMatches(IpVec &amp;ipts1, IpVec &amp;ipts2, IpPairVec &amp;matches);<\/div>$/;"	a
l00039	html/kmeans_8h_source.html	/^<div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;<span class="keyword">public<\/span>:<\/div>$/;"	a
l00039	html/surf__cudaipoint_8h_source.html	/^<div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;<\/div>$/;"	a
l00039	html/surflib_8h_source.html	/^<div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;                       <span class="keywordtype">bool<\/span> upright = <span class="keyword">false<\/span>, <span class="comment">\/* run in rotation invariant mode? *\/<\/span><\/div>$/;"	a
l00039	html/utils_8h_source.html	/^<div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;<\/div>$/;"	a
l00040	html/buildSURFDescriptorsGPU_8h_source.html	/^<div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;<span class="keywordtype">void<\/span> prepare2_buildSURFDescriptorsGPU(cudaArray *ca_intimg);<\/div>$/;"	a
l00040	html/cudaimage_8h_source.html	/^<div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;    <span class="keyword">delete<\/span> img;<\/div>$/;"	a
l00040	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;  <span class="keyword">public<\/span>:<\/div>$/;"	a
l00040	html/ipoint_8h_source.html	/^<div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;<span class="keywordtype">int<\/span> translateCorners(IpPairVec &amp;matches, <span class="keyword">const<\/span> CvPoint src_corners[4], CvPoint dst_corners[4]);<\/div>$/;"	a
l00040	html/kmeans_8h_source.html	/^<div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;<\/div>$/;"	a
l00040	html/surf_8h_source.html	/^<div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;    <a class="code" href="classSurf.html#a77e73978bb51a350eec11e281aadef59" title="Standard Destructor. ">~Surf<\/a>();<\/div>$/;"	a
l00040	html/surflib_8h_source.html	/^<div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;                       <span class="keywordtype">int<\/span> octaves = OCTAVES, <span class="comment">\/* number of octaves to calculate *\/<\/span><\/div>$/;"	a
l00040	html/utils_8h_source.html	/^<div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;<span class="comment">\/\/ Convert image to single channel 32F<\/span><\/div>$/;"	a
l00041	html/buildSURFDescriptorsGPU_8h_source.html	/^<div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;<\/div>$/;"	a
l00041	html/convertRGB2GrayFloatGPU_8h_source.html	/^<div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;<span class="keywordtype">void<\/span> convertRGB2GrayFloatGPU(<\/div>$/;"	a
l00041	html/cudaimage_8h_source.html	/^<div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;}<\/div>$/;"	a
l00041	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;<\/div>$/;"	a
l00041	html/ipoint_8h_source.html	/^<div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;<\/div>$/;"	a
l00041	html/surf_8h_source.html	/^<div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;<\/div>$/;"	a
l00041	html/surf__cudaipoint_8h_source.html	/^<div class="line"><a name="l00041"><\/a><span class="lineno"><a class="code" href="structsurf__cudaIpoint.html#ac4305e940d8ec627611b2dbbd046b255">   41<\/a><\/span>&#160;    <span class="keywordtype">float<\/span> descriptor[64];<\/div>$/;"	a
l00041	html/surflib_8h_source.html	/^<div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;                       <span class="keywordtype">int<\/span> intervals = INTERVALS, <span class="comment">\/* number of intervals per octave *\/<\/span><\/div>$/;"	a
l00041	html/utils_8h_source.html	/^<div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;IplImage* getGray(IplImage *img);<\/div>$/;"	a
l00042	html/convertRGB2GrayFloatGPU_8h_source.html	/^<div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;    <span class="keywordtype">float<\/span> *d_dst, <span class="keywordtype">size_t<\/span> d_dst_pitch,<\/div>$/;"	a
l00042	html/cudaimage_8h_source.html	/^<div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;<\/div>$/;"	a
l00042	html/ipoint_8h_source.html	/^<div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;<span class="comment">\/\/-------------------------------------------------------<\/span><\/div>$/;"	a
l00042	html/kmeans_8h_source.html	/^<div class="line"><a name="l00042"><\/a><span class="lineno"><a class="code" href="classKmeans.html#a198e4d588262f44d6ebe058796d2860e">   42<\/a><\/span>&#160;  <a class="code" href="classKmeans.html#a198e4d588262f44d6ebe058796d2860e" title="Destructor. ">~Kmeans<\/a>() {};<\/div>$/;"	a
l00042	html/surf__cudaipoint_8h_source.html	/^<div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;<\/div>$/;"	a
l00042	html/surflib_8h_source.html	/^<div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;                       <span class="keywordtype">int<\/span> init_sample = INIT_SAMPLE, <span class="comment">\/* initial sampling step *\/<\/span><\/div>$/;"	a
l00042	html/utils_8h_source.html	/^<div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;<\/div>$/;"	a
l00043	html/convertRGB2GrayFloatGPU_8h_source.html	/^<div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;    <span class="keyword">const<\/span> <span class="keywordtype">unsigned<\/span> <span class="keywordtype">int<\/span> *d_src, <span class="keywordtype">size_t<\/span> d_src_pitch,<\/div>$/;"	a
l00043	html/cudaimage_8h_source.html	/^<div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;<span class="preprocessor">#endif <\/span><span class="comment">\/* CUDAIMAGE_H *\/<\/span><span class="preprocessor"><\/span><\/div>$/;"	a
l00043	html/detectIpointOrientationsGPU_8h_source.html	/^<div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;<span class="keywordtype">void<\/span> prepare2_detectIpointOrientationsGPU(cudaArray *ca_intimg);<\/div>$/;"	a
l00043	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;    <a class="code" href="classFastHessian.html#a89cb5f6c6f0266b38cc50b5198982a97" title="Destructor. ">~FastHessian<\/a>();<\/div>$/;"	a
l00043	html/ipoint_8h_source.html	/^<div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;<\/div>$/;"	a
l00043	html/kmeans_8h_source.html	/^<div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;<\/div>$/;"	a
l00043	html/surf_8h_source.html	/^<div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classSurf.html#a4324cd0f1f87ec46b6186850929e858e" title="Describe all features in the supplied vector. ">getDescriptors<\/a>(<span class="keywordtype">bool<\/span> upright = <span class="keyword">false<\/span>);<\/div>$/;"	a
l00043	html/surflib_8h_source.html	/^<div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;                       <span class="keywordtype">float<\/span> thres = THRES <span class="comment">\/* blob response threshold *\/<\/span>)<\/div>$/;"	a
l00044	html/convertRGB2GrayFloatGPU_8h_source.html	/^<div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;    <span class="keywordtype">unsigned<\/span> <span class="keywordtype">char<\/span> red_shift, <span class="keywordtype">unsigned<\/span> <span class="keywordtype">char<\/span> green_shift, <span class="keywordtype">unsigned<\/span> <span class="keywordtype">char<\/span> blue_shift,<\/div>$/;"	a
l00044	html/convertRGBA2GrayFloatGPU_8h_source.html	/^<div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;<span class="keywordtype">void<\/span> convertRGBA2GrayFloatGPU(<\/div>$/;"	a
l00044	html/detectIpointOrientationsGPU_8h_source.html	/^<div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;<\/div>$/;"	a
l00044	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;<\/div>$/;"	a
l00044	html/ipoint_8h_source.html	/^<div class="line"><a name="l00044"><\/a><span class="lineno"><a class="code" href="classIpoint.html">   44<\/a><\/span>&#160;<span class="keyword">class <\/span><a class="code" href="classIpoint.html">Ipoint<\/a> {<\/div>$/;"	a
l00044	html/surf_8h_source.html	/^<div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;<\/div>$/;"	a
l00044	html/surf__cudaipoint_8h_source.html	/^<div class="line"><a name="l00044"><\/a><span class="lineno"><a class="code" href="structsurf__cudaIpoint.html#a528e3bb27300a770f8e96a1b20444a24">   44<\/a><\/span>&#160;    <span class="keywordtype">float<\/span> lengths[4][4];<\/div>$/;"	a
l00044	html/surflib_8h_source.html	/^<div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;{<\/div>$/;"	a
l00044	html/utils_8h_source.html	/^<div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;<span class="keywordtype">void<\/span> drawIpoint(IplImage *img, <a class="code" href="classIpoint.html">Ipoint<\/a> &amp;ipt, <span class="keywordtype">int<\/span> tailSize = 0);<\/div>$/;"	a
l00045	html/convertRGB2GrayFloatGPU_8h_source.html	/^<div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;    <span class="keywordtype">unsigned<\/span> <span class="keywordtype">int<\/span> img_width, <span class="keywordtype">unsigned<\/span> <span class="keywordtype">int<\/span> img_height);<\/div>$/;"	a
l00045	html/convertRGBA2GrayFloatGPU_8h_source.html	/^<div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;    <span class="keywordtype">float<\/span> *d_dst, <span class="keywordtype">size_t<\/span> d_dst_pitch,<\/div>$/;"	a
l00045	html/ipoint_8h_source.html	/^<div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;<\/div>$/;"	a
l00045	html/kmeans_8h_source.html	/^<div class="line"><a name="l00045"><\/a><span class="lineno"><a class="code" href="classKmeans.html#aaa368f4f88d4c671fdd92c6ba525822a">   45<\/a><\/span>&#160;  <a class="code" href="classKmeans.html#aaa368f4f88d4c671fdd92c6ba525822a" title="Constructor. ">Kmeans<\/a>() {};<\/div>$/;"	a
l00045	html/surf__cudaipoint_8h_source.html	/^<div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;<\/div>$/;"	a
l00045	html/surflib_8h_source.html	/^<div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;  <\/div>$/;"	a
l00045	html/utils_8h_source.html	/^<div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;<\/div>$/;"	a
l00046	html/buildDetGPU_8h_source.html	/^<div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;<span class="keywordtype">void<\/span> buildDetGPU(<a class="code" href="structcudaImage.html">cudaImage<\/a> *d_img, <span class="keywordtype">float<\/span> *d_det, <span class="keyword">const<\/span> <span class="keywordtype">int<\/span> *border_cache,<\/div>$/;"	a
l00046	html/convertRGB2GrayFloatGPU_8h_source.html	/^<div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;<\/div>$/;"	a
l00046	html/convertRGBA2GrayFloatGPU_8h_source.html	/^<div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;    <span class="keyword">const<\/span> <span class="keywordtype">unsigned<\/span> <span class="keywordtype">int<\/span> *d_src, <span class="keywordtype">size_t<\/span> d_src_pitch,<\/div>$/;"	a
l00046	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;    <a class="code" href="classFastHessian.html#a10dc3c811fc013b4a910dc4d2c9a8952" title="Constructor without image. ">FastHessian<\/a>(std::vector&lt;Ipoint&gt; &amp;ipts,<\/div>$/;"	a
l00046	html/ipoint_8h_source.html	/^<div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;<span class="keyword">public<\/span>:<\/div>$/;"	a
l00046	html/kmeans_8h_source.html	/^<div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;<\/div>$/;"	a
l00046	html/surf_8h_source.html	/^<div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classSurf.html#a45149e045846f8e68eb5e3c8287fd2a3" title="Set or re-set the integral image source. ">setIntImage<\/a>(<a class="code" href="structcudaImage.html">cudaImage<\/a> *d_img);<\/div>$/;"	a
l00046	html/surflib_8h_source.html	/^<div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;  <span class="keyword">struct <\/span>timeval start,end;<\/div>$/;"	a
l00047	html/buildDetGPU_8h_source.html	/^<div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;                 <span class="keywordtype">int<\/span> octaves, <span class="keywordtype">int<\/span> intervals, <span class="keywordtype">int<\/span> init_sample);<\/div>$/;"	a
l00047	html/convertRGB2GrayFloatGPU_8h_source.html	/^<div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;<span class="preprocessor">#endif <\/span><span class="comment">\/* CONVERTRGB2GRAYFLOATGPU_H *\/<\/span><span class="preprocessor"><\/span><\/div>$/;"	a
l00047	html/convertRGBA2GrayFloatGPU_8h_source.html	/^<div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;    <span class="keywordtype">unsigned<\/span> <span class="keywordtype">int<\/span> red_mask, <span class="keywordtype">unsigned<\/span> <span class="keywordtype">int<\/span> green_mask, <span class="keywordtype">unsigned<\/span> <span class="keywordtype">int<\/span> blue_mask,<\/div>$/;"	a
l00047	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;                <span class="keyword">const<\/span> <span class="keywordtype">int<\/span> octaves = OCTAVES,<\/div>$/;"	a
l00047	html/ipoint_8h_source.html	/^<div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;<\/div>$/;"	a
l00047	html/matchSURFKeypointsGPU_8h_source.html	/^<div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;<span class="keywordtype">void<\/span> matchSURFKeypointsGPU(<\/div>$/;"	a
l00047	html/surf_8h_source.html	/^<div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;<\/div>$/;"	a
l00047	html/surf__cudaipoint_8h_source.html	/^<div class="line"><a name="l00047"><\/a><span class="lineno"><a class="code" href="structsurf__cudaIpoint.html#a69807c4d83b9fa5c86abcfe26a4dab78">   47<\/a><\/span>&#160;    <span class="keywordtype">float<\/span> <a class="code" href="structsurf__cudaIpoint.html#a69807c4d83b9fa5c86abcfe26a4dab78" title="Placeholds for point motion (can be used for frame to frame motion analysis) ">dx<\/a>, dy;<\/div>$/;"	a
l00047	html/surflib_8h_source.html	/^<div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;  <span class="keywordtype">int<\/span> time_use;<\/div>$/;"	a
l00047	html/utils_8h_source.html	/^<div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;<span class="keywordtype">void<\/span> drawIpoints(IplImage *img, std::vector&lt;Ipoint&gt; &amp;ipts, <span class="keywordtype">int<\/span> tailSize = 0);<\/div>$/;"	a
l00048	html/buildDetGPU_8h_source.html	/^<div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;<\/div>$/;"	a
l00048	html/convertRGBA2GrayFloatGPU_8h_source.html	/^<div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;    <span class="keywordtype">unsigned<\/span> <span class="keywordtype">char<\/span> red_shift, <span class="keywordtype">unsigned<\/span> <span class="keywordtype">char<\/span> green_shift, <span class="keywordtype">unsigned<\/span> <span class="keywordtype">char<\/span> blue_shift,<\/div>$/;"	a
l00048	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;                <span class="keyword">const<\/span> <span class="keywordtype">int<\/span> intervals = INTERVALS,<\/div>$/;"	a
l00048	html/kmeans_8h_source.html	/^<div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;  <span class="keywordtype">void<\/span> <a class="code" href="classKmeans.html#ae65400ea2ab42ecb1a462a291739f871" title="Do it all! ">Run<\/a>(IpVec *<a class="code" href="classKmeans.html#abed0349d08279cf3bc8884bf47057b86" title="Vector stores ipoints for this run. ">ipts<\/a>, <span class="keywordtype">int<\/span> <a class="code" href="classKmeans.html#a934a2bb64012d84c3b8f5d34dbd63237" title="Vector stores cluster centers. ">clusters<\/a>, <span class="keywordtype">bool<\/span> init = <span class="keyword">false<\/span>);<\/div>$/;"	a
l00048	html/matchSURFKeypointsGPU_8h_source.html	/^<div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;    <span class="keywordtype">int<\/span> *d_result, <span class="keywordtype">float<\/span> *d_dist,<\/div>$/;"	a
l00048	html/surf__cudaipoint_8h_source.html	/^<div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;<\/div>$/;"	a
l00048	html/surflib_8h_source.html	/^<div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;  gettimeofday(&amp;start,NULL);<\/div>$/;"	a
l00048	html/utils_8h_source.html	/^<div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;<\/div>$/;"	a
l00049	html/buildDetGPU_8h_source.html	/^<div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;<span class="preprocessor">#endif <\/span><span class="comment">\/* BUILDDETGPU_H *\/<\/span><span class="preprocessor"><\/span><\/div>$/;"	a
l00049	html/convertRGBA2GrayFloatGPU_8h_source.html	/^<div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;    <span class="keywordtype">unsigned<\/span> <span class="keywordtype">int<\/span> img_width, <span class="keywordtype">unsigned<\/span> <span class="keywordtype">int<\/span> img_height);<\/div>$/;"	a
l00049	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;                <span class="keyword">const<\/span> <span class="keywordtype">int<\/span> init_sample = INIT_SAMPLE,<\/div>$/;"	a
l00049	html/ipoint_8h_source.html	/^<div class="line"><a name="l00049"><\/a><span class="lineno"><a class="code" href="classIpoint.html#a5432e81d5b6f738fe1691709e9c52338">   49<\/a><\/span>&#160;  <a class="code" href="classIpoint.html#a5432e81d5b6f738fe1691709e9c52338" title="Destructor. ">~Ipoint<\/a>() {};<\/div>$/;"	a
l00049	html/kmeans_8h_source.html	/^<div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;<\/div>$/;"	a
l00049	html/matchSURFKeypointsGPU_8h_source.html	/^<div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;    <span class="keywordtype">float<\/span> *d_set1, <span class="keywordtype">size_t<\/span> num_points_set1, <span class="keywordtype">size_t<\/span> set1_pitch,<\/div>$/;"	a
l00049	html/surf_8h_source.html	/^<div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classSurf.html#ac1294201cfcf6254cf0cbdca5997b101" title="Set or re-set the interest point source. ">setIpoints<\/a>(IpVec &amp;ipts);<\/div>$/;"	a
l00049	html/surflib_8h_source.html	/^<div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;  <span class="comment">\/\/ Create integral-image representation of the image<\/span><\/div>$/;"	a
l00050	html/convertRGBA2GrayFloatGPU_8h_source.html	/^<div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;<\/div>$/;"	a
l00050	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;                <span class="keyword">const<\/span> <span class="keywordtype">float<\/span> thres = THRES);<\/div>$/;"	a
l00050	html/ipoint_8h_source.html	/^<div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;<\/div>$/;"	a
l00050	html/matchSURFKeypointsGPU_8h_source.html	/^<div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;    <span class="keywordtype">float<\/span> *d_set2, <span class="keywordtype">size_t<\/span> num_points_set2, <span class="keywordtype">size_t<\/span> set2_pitch,<\/div>$/;"	a
l00050	html/nonMaxGPU_8h_source.html	/^<div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;<span class="keywordtype">void<\/span> nonMaxGPU(<span class="keywordtype">float<\/span> *d_det, <span class="keywordtype">unsigned<\/span> <span class="keywordtype">int<\/span> det_width, <span class="keywordtype">unsigned<\/span> <span class="keywordtype">int<\/span> det_height,<\/div>$/;"	a
l00050	html/surf_8h_source.html	/^<div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;<\/div>$/;"	a
l00050	html/surf__cudaipoint_8h_source.html	/^<div class="line"><a name="l00050"><\/a><span class="lineno"><a class="code" href="structsurf__cudaIpoint.html#a8f046ba66623a6f30a26b8aa3073fa41">   50<\/a><\/span>&#160;    <span class="keywordtype">int<\/span> <a class="code" href="structsurf__cudaIpoint.html#a8f046ba66623a6f30a26b8aa3073fa41" title="Used to store cluster index. ">clusterIndex<\/a>;<\/div>$/;"	a
l00050	html/surflib_8h_source.html	/^<div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;  <a class="code" href="structcudaImage.html">cudaImage<\/a> *int_img = Integral(img);<\/div>$/;"	a
l00050	html/utils_8h_source.html	/^<div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;<span class="keywordtype">void<\/span> drawWindows(IplImage *img, std::vector&lt;Ipoint&gt; &amp;ipts);<\/div>$/;"	a
l00051	html/convertRGBA2GrayFloatGPU_8h_source.html	/^<div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;<span class="preprocessor">#endif <\/span><span class="comment">\/* CONVERTRGBA2GRAYFLOATGPU_H *\/<\/span><span class="preprocessor"><\/span><\/div>$/;"	a
l00051	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;<\/div>$/;"	a
l00051	html/kmeans_8h_source.html	/^<div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;  <span class="keywordtype">void<\/span> <a class="code" href="classKmeans.html#a158fafaadf2e13f857ce6f134d7186ae" title="Set the ipts to be used. ">SetIpoints<\/a>(IpVec *<a class="code" href="classKmeans.html#abed0349d08279cf3bc8884bf47057b86" title="Vector stores ipoints for this run. ">ipts<\/a>);<\/div>$/;"	a
l00051	html/matchSURFKeypointsGPU_8h_source.html	/^<div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;    <span class="keywordtype">unsigned<\/span> <span class="keywordtype">int<\/span> desc_len);<\/div>$/;"	a
l00051	html/nonMaxGPU_8h_source.html	/^<div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;               <span class="keywordtype">size_t<\/span> det_width_step, <a class="code" href="structfasthessian__cudaIpoint.html">fasthessian_cudaIpoint<\/a> *d_points,<\/div>$/;"	a
l00051	html/surf_8h_source.html	/^<div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;  <span class="keyword">private<\/span>:<\/div>$/;"	a
l00051	html/surf__cudaipoint_8h_source.html	/^<div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;} <a class="code" href="structsurf__cudaIpoint.html">surf_cudaIpoint<\/a>;<\/div>$/;"	a
l00051	html/surflib_8h_source.html	/^<div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;  gettimeofday(&amp;end,NULL);<\/div>$/;"	a
l00051	html/utils_8h_source.html	/^<div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;<\/div>$/;"	a
l00052	html/buildSURFDescriptorsGPU_8h_source.html	/^<div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;<span class="keywordtype">void<\/span> buildSURFDescriptorsGPU(<\/div>$/;"	a
l00052	html/ipoint_8h_source.html	/^<div class="line"><a name="l00052"><\/a><span class="lineno"><a class="code" href="classIpoint.html#aefa172d6444692467e2b52beb5482a52">   52<\/a><\/span>&#160;  <a class="code" href="classIpoint.html#aefa172d6444692467e2b52beb5482a52" title="Constructor. ">Ipoint<\/a>() : <a class="code" href="classIpoint.html#a1b052f994fd207d00ba4e5bde258d206" title="Orientation measured anti-clockwise from +ve x-axis. ">orientation<\/a>(0) {};<\/div>$/;"	a
l00052	html/kmeans_8h_source.html	/^<div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;<\/div>$/;"	a
l00052	html/matchSURFKeypointsGPU_8h_source.html	/^<div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;<\/div>$/;"	a
l00052	html/nonMaxGPU_8h_source.html	/^<div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;               <span class="keyword">const<\/span> <span class="keywordtype">int<\/span> *border_cache, <span class="keywordtype">int<\/span> octaves, <span class="keywordtype">int<\/span> intervals,<\/div>$/;"	a
l00052	html/surf_8h_source.html	/^<div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;<\/div>$/;"	a
l00052	html/surf__cudaipoint_8h_source.html	/^<div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;<\/div>$/;"	a
l00052	html/surflib_8h_source.html	/^<div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;  time_use = 1000000 * (end.tv_sec - start.tv_sec) + end.tv_usec - start.tv_usec;<\/div>$/;"	a
l00052	html/utils_8h_source.html	/^<div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;<span class="comment">\/\/ Draw the FPS figure on the image (requires at least 2 calls)<\/span><\/div>$/;"	a
l00053	html/buildSURFDescriptorsGPU_8h_source.html	/^<div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;    <a class="code" href="structsurf__cudaIpoint.html">surf_cudaIpoint<\/a> *d_ipoints, <span class="keywordtype">int<\/span> upright, <span class="keywordtype">size_t<\/span> num_ipoints);<\/div>$/;"	a
l00053	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;    <a class="code" href="classFastHessian.html#a10dc3c811fc013b4a910dc4d2c9a8952" title="Constructor without image. ">FastHessian<\/a>(<a class="code" href="structcudaImage.html">cudaImage<\/a> *d_img,<\/div>$/;"	a
l00053	html/ipoint_8h_source.html	/^<div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;<\/div>$/;"	a
l00053	html/matchSURFKeypointsGPU_8h_source.html	/^<div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;<span class="preprocessor">#endif <\/span><span class="comment">\/* MATCHSURFKEYPOINTSGPU_H *\/<\/span><span class="preprocessor"><\/span><\/div>$/;"	a
l00053	html/nonMaxGPU_8h_source.html	/^<div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;               <span class="keywordtype">int<\/span> init_sample, <span class="keywordtype">float<\/span> thres);<\/div>$/;"	a
l00053	html/surf_8h_source.html	/^<div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;    <span class="comment">\/\/---------------- Private Functions -----------------\/\/<\/span><\/div>$/;"	a
l00053	html/surf__cudaipoint_8h_source.html	/^<div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;<span class="preprocessor">#endif <\/span><span class="comment">\/* SURF_CUDAIPOINT_H *\/<\/span><span class="preprocessor"><\/span><\/div>$/;"	a
l00053	html/surflib_8h_source.html	/^<div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;  time_use \/= 1000;<\/div>$/;"	a
l00053	html/utils_8h_source.html	/^<div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;<span class="keywordtype">void<\/span> drawFPS(IplImage *img);<\/div>$/;"	a
l00054	html/buildSURFDescriptorsGPU_8h_source.html	/^<div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;<\/div>$/;"	a
l00054	html/detectIpointOrientationsGPU_8h_source.html	/^<div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;<span class="keywordtype">void<\/span> detectIpointOrientationsGPU(<\/div>$/;"	a
l00054	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;                std::vector&lt;Ipoint&gt; &amp;ipts,<\/div>$/;"	a
l00054	html/kmeans_8h_source.html	/^<div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;  <span class="keywordtype">void<\/span> <a class="code" href="classKmeans.html#a7b217a72a901c90254bd5673bb76f038" title="Randomly distribute &#39;n&#39; clusters. ">InitRandomClusters<\/a>(<span class="keywordtype">int<\/span> n);<\/div>$/;"	a
l00054	html/nonMaxGPU_8h_source.html	/^<div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;<\/div>$/;"	a
l00054	html/surf_8h_source.html	/^<div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;    <\/div>$/;"	a
l00054	html/surflib_8h_source.html	/^<div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;  std::cout&lt;&lt;<span class="stringliteral">&quot;Create integral-image time is:&quot;<\/span>&lt;&lt;time_use&lt;&lt;<span class="stringliteral">&quot;ms&quot;<\/span>&lt;&lt;std::endl;<\/div>$/;"	a
l00054	html/utils_8h_source.html	/^<div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;<\/div>$/;"	a
l00055	html/buildSURFDescriptorsGPU_8h_source.html	/^<div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;<span class="preprocessor">#endif <\/span><span class="comment">\/* BUILDSURFDESCRIPTORSGPU_H *\/<\/span><span class="preprocessor"><\/span><\/div>$/;"	a
l00055	html/detectIpointOrientationsGPU_8h_source.html	/^<div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;    <a class="code" href="structsurf__cudaIpoint.html">surf_cudaIpoint<\/a> *d_ipoints, <span class="keywordtype">size_t<\/span> num_ipoints);<\/div>$/;"	a
l00055	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;                <span class="keyword">const<\/span> <span class="keywordtype">int<\/span> octaves = OCTAVES,<\/div>$/;"	a
l00055	html/ipoint_8h_source.html	/^<div class="line"><a name="l00055"><\/a><span class="lineno"><a class="code" href="classIpoint.html#a01757f800b681e7bcb659aaf1d95d62a">   55<\/a><\/span>&#160;  <span class="keywordtype">float<\/span> <a class="code" href="classIpoint.html#a01757f800b681e7bcb659aaf1d95d62a" title="Gets the distance in descriptor space between Ipoints. ">operator-<\/a>(<span class="keyword">const<\/span> <a class="code" href="classIpoint.html">Ipoint<\/a> &amp;rhs)<span class="keyword"> const<\/span><\/div>$/;"	a
l00055	html/kmeans_8h_source.html	/^<div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;<\/div>$/;"	a
l00055	html/nonMaxGPU_8h_source.html	/^<div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;<span class="preprocessor">#endif <\/span><span class="comment">\/* NONMAXGPU_H *\/<\/span><span class="preprocessor"><\/span><\/div>$/;"	a
l00055	html/surflib_8h_source.html	/^<div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;<\/div>$/;"	a
l00056	html/detectIpointOrientationsGPU_8h_source.html	/^<div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;<\/div>$/;"	a
l00056	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;                <span class="keyword">const<\/span> <span class="keywordtype">int<\/span> intervals = INTERVALS,<\/div>$/;"	a
l00056	html/ipoint_8h_source.html	/^<div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;<span class="keyword">  <\/span>{<\/div>$/;"	a
l00056	html/surf_8h_source.html	/^<div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;    <span class="keywordtype">void<\/span> freeIntImage();<\/div>$/;"	a
l00056	html/surflib_8h_source.html	/^<div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;  gettimeofday(&amp;start,NULL);<\/div>$/;"	a
l00056	html/utils_8h_source.html	/^<div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;<span class="keywordtype">void<\/span> drawPoint(IplImage *img, <a class="code" href="classIpoint.html">Ipoint<\/a> &amp;ipt);<\/div>$/;"	a
l00057	html/detectIpointOrientationsGPU_8h_source.html	/^<div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;<span class="preprocessor">#endif <\/span><span class="comment">\/* DETECTIPOINTORIENTATIONSGPU_H *\/<\/span><span class="preprocessor"><\/span><\/div>$/;"	a
l00057	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;                <span class="keyword">const<\/span> <span class="keywordtype">int<\/span> init_sample = INIT_SAMPLE,<\/div>$/;"	a
l00057	html/ipoint_8h_source.html	/^<div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;    <span class="keywordtype">float<\/span> sum=0.f;<\/div>$/;"	a
l00057	html/kmeans_8h_source.html	/^<div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;  <span class="keywordtype">bool<\/span> <a class="code" href="classKmeans.html#a47c04cccafb55032e85987cfceb7c95c" title="Assign Ipoints to clusters. ">AssignToClusters<\/a>();<\/div>$/;"	a
l00057	html/surf_8h_source.html	/^<div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;<\/div>$/;"	a
l00057	html/surflib_8h_source.html	/^<div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;  <span class="comment">\/\/ Create Fast Hessian Object<\/span><\/div>$/;"	a
l00057	html/utils_8h_source.html	/^<div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;<\/div>$/;"	a
l00058	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;                <span class="keyword">const<\/span> <span class="keywordtype">float<\/span> thres = THRES);<\/div>$/;"	a
l00058	html/ipoint_8h_source.html	/^<div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;    <span class="keywordflow">for<\/span>(<span class="keywordtype">int<\/span> i=0; i &lt; 64; ++i)<\/div>$/;"	a
l00058	html/kmeans_8h_source.html	/^<div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;<\/div>$/;"	a
l00058	html/surf_8h_source.html	/^<div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;    <span class="keywordtype">void<\/span> computeDescriptors(<span class="keywordtype">int<\/span> upright);<\/div>$/;"	a
l00058	html/surflib_8h_source.html	/^<div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;  <a class="code" href="classFastHessian.html">FastHessian<\/a> fh(int_img, ipts, octaves, intervals, init_sample, thres);<\/div>$/;"	a
l00059	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;<\/div>$/;"	a
l00059	html/ipoint_8h_source.html	/^<div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;      sum += (this-&gt;<a class="code" href="classIpoint.html#a84e5c7ff7bfd4cef2692f2939e76398f" title="Vector of descriptor components. ">descriptor<\/a>[i] - rhs.<a class="code" href="classIpoint.html#a84e5c7ff7bfd4cef2692f2939e76398f" title="Vector of descriptor components. ">descriptor<\/a>[i])*(this-&gt;<a class="code" href="classIpoint.html#a84e5c7ff7bfd4cef2692f2939e76398f" title="Vector of descriptor components. ">descriptor<\/a>[i] - rhs.<a class="code" href="classIpoint.html#a84e5c7ff7bfd4cef2692f2939e76398f" title="Vector of descriptor components. ">descriptor<\/a>[i]);<\/div>$/;"	a
l00059	html/surf_8h_source.html	/^<div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;<\/div>$/;"	a
l00059	html/surflib_8h_source.html	/^<div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;<\/div>$/;"	a
l00059	html/utils_8h_source.html	/^<div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;<span class="keywordtype">void<\/span> drawPoints(IplImage *img, std::vector&lt;Ipoint&gt; &amp;ipts);<\/div>$/;"	a
l00060	html/ipoint_8h_source.html	/^<div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;    <span class="keywordflow">return<\/span> sqrt(sum);<\/div>$/;"	a
l00060	html/kmeans_8h_source.html	/^<div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;  <span class="keywordtype">void<\/span> <a class="code" href="classKmeans.html#ab0ca7a879e310b20843adb01c4487673" title="Calculate new cluster centers. ">RepositionClusters<\/a>();<\/div>$/;"	a
l00060	html/surf_8h_source.html	/^<div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;    <span class="comment">\/\/---------------- Private Variables -----------------\/\/<\/span><\/div>$/;"	a
l00060	html/surflib_8h_source.html	/^<div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;  <span class="comment">\/\/ Extract interest points and store in vector ipts<\/span><\/div>$/;"	a
l00060	html/utils_8h_source.html	/^<div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;<\/div>$/;"	a
l00061	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classFastHessian.html#a044caf448bc9335c1176fe4f084ff1d1" title="Save the parameters. ">saveParameters<\/a>(<span class="keyword">const<\/span> <span class="keywordtype">int<\/span> octaves,<\/div>$/;"	a
l00061	html/ipoint_8h_source.html	/^<div class="line"><a name="l00061"><\/a><span class="lineno"><a class="code" href="classIpoint.html#a3bbd5fa4ec53e4e871ddffe3b952fddd">   61<\/a><\/span>&#160;  };<\/div>$/;"	a
l00061	html/kmeans_8h_source.html	/^<div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;<\/div>$/;"	a
l00061	html/surf_8h_source.html	/^<div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;<\/div>$/;"	a
l00061	html/surflib_8h_source.html	/^<div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;  fh.getIpoints();<\/div>$/;"	a
l00062	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;                        <span class="keyword">const<\/span> <span class="keywordtype">int<\/span> intervals,<\/div>$/;"	a
l00062	html/ipoint_8h_source.html	/^<div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;<\/div>$/;"	a
l00062	html/surflib_8h_source.html	/^<div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;  gettimeofday(&amp;end,NULL);<\/div>$/;"	a
l00062	html/utils_8h_source.html	/^<div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;<span class="keywordtype">void<\/span> saveSurf(<span class="keywordtype">char<\/span> *filename, std::vector&lt;Ipoint&gt; &amp;ipts);<\/div>$/;"	a
l00063	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;                        <span class="keyword">const<\/span> <span class="keywordtype">int<\/span> init_sample,<\/div>$/;"	a
l00063	html/kmeans_8h_source.html	/^<div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;  <span class="keywordtype">float<\/span> <a class="code" href="classKmeans.html#a63c4aaf0a9ea1015525f3ac3d84ca516" title="Function to measure the distance between 2 ipoints. ">Distance<\/a>(<a class="code" href="classIpoint.html">Ipoint<\/a> &amp;ip1, <a class="code" href="classIpoint.html">Ipoint<\/a> &amp;ip2);<\/div>$/;"	a
l00063	html/surf_8h_source.html	/^<div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;    <a class="code" href="structcudaImage.html">cudaImage<\/a> *d_img;<\/div>$/;"	a
l00063	html/surflib_8h_source.html	/^<div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;  time_use = 1000000 * (end.tv_sec - start.tv_sec) + end.tv_usec - start.tv_usec;<\/div>$/;"	a
l00063	html/utils_8h_source.html	/^<div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;<\/div>$/;"	a
l00064	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;                        <span class="keyword">const<\/span> <span class="keywordtype">float<\/span> thres);<\/div>$/;"	a
l00064	html/ipoint_8h_source.html	/^<div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;  <span class="keywordtype">float<\/span> <a class="code" href="classIpoint.html#a3bbd5fa4ec53e4e871ddffe3b952fddd" title="Coordinates of the detected interest point. ">x<\/a>, y;<\/div>$/;"	a
l00064	html/kmeans_8h_source.html	/^<div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;<\/div>$/;"	a
l00064	html/surf_8h_source.html	/^<div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;    <span class="keywordtype">int<\/span> i_width, i_height;<\/div>$/;"	a
l00064	html/surflib_8h_source.html	/^<div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;  time_use \/= 1000;<\/div>$/;"	a
l00065	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;<\/div>$/;"	a
l00065	html/ipoint_8h_source.html	/^<div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;<\/div>$/;"	a
l00065	html/surf_8h_source.html	/^<div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;<\/div>$/;"	a
l00065	html/surflib_8h_source.html	/^<div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;  std::cout&lt;&lt;<span class="stringliteral">&quot;Extract interest points time is:&quot;<\/span>&lt;&lt;time_use&lt;&lt;<span class="stringliteral">&quot;ms&quot;<\/span>&lt;&lt;std::endl;<\/div>$/;"	a
l00065	html/utils_8h_source.html	/^<div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;<span class="keywordtype">void<\/span> loadSurf(<span class="keywordtype">char<\/span> *filename, std::vector&lt;Ipoint&gt; &amp;ipts);<\/div>$/;"	a
l00066	html/kmeans_8h_source.html	/^<div class="line"><a name="l00066"><\/a><span class="lineno"><a class="code" href="classKmeans.html#abed0349d08279cf3bc8884bf47057b86">   66<\/a><\/span>&#160;  IpVec *<a class="code" href="classKmeans.html#abed0349d08279cf3bc8884bf47057b86" title="Vector stores ipoints for this run. ">ipts<\/a>;<\/div>$/;"	a
l00066	html/surflib_8h_source.html	/^<div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;<\/div>$/;"	a
l00066	html/utils_8h_source.html	/^<div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;<\/div>$/;"	a
l00067	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classFastHessian.html#a085b477fbb67ddf81390f97c2e363af1" title="Set or re-set the integral image source. ">setIntImage<\/a>(<a class="code" href="structcudaImage.html">cudaImage<\/a> *d_img);<\/div>$/;"	a
l00067	html/ipoint_8h_source.html	/^<div class="line"><a name="l00067"><\/a><span class="lineno"><a class="code" href="classIpoint.html#a50018658330bba7a782ac53deb6e2b71">   67<\/a><\/span>&#160;  <span class="keywordtype">float<\/span> <a class="code" href="classIpoint.html#a50018658330bba7a782ac53deb6e2b71" title="Detected scale. ">scale<\/a>;<\/div>$/;"	a
l00067	html/kmeans_8h_source.html	/^<div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;<\/div>$/;"	a
l00067	html/surf_8h_source.html	/^<div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;    IpVec &amp;ipts;<\/div>$/;"	a
l00067	html/surflib_8h_source.html	/^<div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;  gettimeofday(&amp;start,NULL);<\/div>$/;"	a
l00068	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;<\/div>$/;"	a
l00068	html/ipoint_8h_source.html	/^<div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;<\/div>$/;"	a
l00068	html/surf_8h_source.html	/^<div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;<\/div>$/;"	a
l00068	html/surflib_8h_source.html	/^<div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;  <span class="keywordflow">if<\/span> (ipts.size() &gt; 0)<\/div>$/;"	a
l00068	html/utils_8h_source.html	/^<div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;<span class="keyword">inline<\/span> <span class="keywordtype">int<\/span> fRound(<span class="keywordtype">float<\/span> flt)<\/div>$/;"	a
l00069	html/kmeans_8h_source.html	/^<div class="line"><a name="l00069"><\/a><span class="lineno"><a class="code" href="classKmeans.html#a934a2bb64012d84c3b8f5d34dbd63237">   69<\/a><\/span>&#160;  IpVec <a class="code" href="classKmeans.html#a934a2bb64012d84c3b8f5d34dbd63237" title="Vector stores cluster centers. ">clusters<\/a>;<\/div>$/;"	a
l00069	html/surflib_8h_source.html	/^<div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;  {<\/div>$/;"	a
l00069	html/utils_8h_source.html	/^<div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;{<\/div>$/;"	a
l00070	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classFastHessian.html#a547026f2fa69b4a6f4c2b3556251290a" title="Find the image features and write into vector of features. ">getIpoints<\/a>();<\/div>$/;"	a
l00070	html/ipoint_8h_source.html	/^<div class="line"><a name="l00070"><\/a><span class="lineno"><a class="code" href="classIpoint.html#a1b052f994fd207d00ba4e5bde258d206">   70<\/a><\/span>&#160;  <span class="keywordtype">float<\/span> <a class="code" href="classIpoint.html#a1b052f994fd207d00ba4e5bde258d206" title="Orientation measured anti-clockwise from +ve x-axis. ">orientation<\/a>;<\/div>$/;"	a
l00070	html/kmeans_8h_source.html	/^<div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160;<\/div>$/;"	a
l00070	html/surf_8h_source.html	/^<div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160;    cudaArray *ca_intimg;<\/div>$/;"	a
l00070	html/surflib_8h_source.html	/^<div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160;    <span class="comment">\/\/ Create Surf Descriptor Object<\/span><\/div>$/;"	a
l00070	html/utils_8h_source.html	/^<div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160;  <span class="keywordflow">return<\/span> (<span class="keywordtype">int<\/span>) floor(flt+0.5f);<\/div>$/;"	a
l00071	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;<\/div>$/;"	a
l00071	html/ipoint_8h_source.html	/^<div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;<\/div>$/;"	a
l00071	html/kmeans_8h_source.html	/^<div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;};<\/div>$/;"	a
l00071	html/surf_8h_source.html	/^<div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;<\/div>$/;"	a
l00071	html/surflib_8h_source.html	/^<div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;    <a class="code" href="classSurf.html">Surf<\/a> des(int_img, ipts);<\/div>$/;"	a
l00071	html/utils_8h_source.html	/^<div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;}<\/div>$/;"	a
l00072	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;  <span class="keyword">private<\/span>:<\/div>$/;"	a
l00072	html/kmeans_8h_source.html	/^<div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;<\/div>$/;"	a
l00072	html/surflib_8h_source.html	/^<div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;<\/div>$/;"	a
l00072	html/utils_8h_source.html	/^<div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;<\/div>$/;"	a
l00073	html/ipoint_8h_source.html	/^<div class="line"><a name="l00073"><\/a><span class="lineno"><a class="code" href="classIpoint.html#a2daff54c9aa31559c6517971d924b294">   73<\/a><\/span>&#160;  <span class="keywordtype">int<\/span> <a class="code" href="classIpoint.html#a2daff54c9aa31559c6517971d924b294" title="Sign of laplacian for fast matching purposes. ">laplacian<\/a>;<\/div>$/;"	a
l00073	html/kmeans_8h_source.html	/^<div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;<span class="comment">\/\/-------------------------------------------------------<\/span><\/div>$/;"	a
l00073	html/surf_8h_source.html	/^<div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;    <span class="keywordtype">float<\/span> *d_intimg_padded;<\/div>$/;"	a
l00073	html/surflib_8h_source.html	/^<div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;    <span class="comment">\/\/ Extract the descriptors for the ipts<\/span><\/div>$/;"	a
l00073	html/utils_8h_source.html	/^<div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;<span class="preprocessor">#endif <\/span><span class="comment">\/* UTILS_H *\/<\/span><span class="preprocessor"><\/span><\/div>$/;"	a
l00074	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;    <a class="code" href="structcudaImage.html">cudaImage<\/a> *d_img;<\/div>$/;"	a
l00074	html/ipoint_8h_source.html	/^<div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;<\/div>$/;"	a
l00074	html/kmeans_8h_source.html	/^<div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;<\/div>$/;"	a
l00074	html/surf_8h_source.html	/^<div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;<\/div>$/;"	a
l00074	html/surflib_8h_source.html	/^<div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;    des.getDescriptors(upright);<\/div>$/;"	a
l00075	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;    <span class="keywordtype">int<\/span> i_width, i_height;<\/div>$/;"	a
l00075	html/kmeans_8h_source.html	/^<div class="line"><a name="l00075"><\/a><span class="lineno"><a class="code" href="classKmeans.html#ae65400ea2ab42ecb1a462a291739f871">   75<\/a><\/span>&#160;<span class="keywordtype">void<\/span> <a class="code" href="classKmeans.html#ae65400ea2ab42ecb1a462a291739f871" title="Do it all! ">Kmeans::Run<\/a>(IpVec *ipts, <span class="keywordtype">int<\/span> clusters, <span class="keywordtype">bool<\/span> init)<\/div>$/;"	a
l00075	html/surflib_8h_source.html	/^<div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;  }<\/div>$/;"	a
l00076	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;<\/div>$/;"	a
l00076	html/ipoint_8h_source.html	/^<div class="line"><a name="l00076"><\/a><span class="lineno"><a class="code" href="classIpoint.html#a84e5c7ff7bfd4cef2692f2939e76398f">   76<\/a><\/span>&#160;  <span class="keywordtype">float<\/span> <a class="code" href="classIpoint.html#a84e5c7ff7bfd4cef2692f2939e76398f" title="Vector of descriptor components. ">descriptor<\/a>[64];<\/div>$/;"	a
l00076	html/kmeans_8h_source.html	/^<div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;{<\/div>$/;"	a
l00076	html/surf_8h_source.html	/^<div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;    <a class="code" href="structsurf__cudaIpoint.html">surf_cudaIpoint<\/a> *d_ipoints;<\/div>$/;"	a
l00076	html/surflib_8h_source.html	/^<div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;  gettimeofday(&amp;end,NULL);<\/div>$/;"	a
l00077	html/ipoint_8h_source.html	/^<div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;<\/div>$/;"	a
l00077	html/kmeans_8h_source.html	/^<div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;  <span class="keywordflow">if<\/span> (!ipts-&gt;size()) <span class="keywordflow">return<\/span>;<\/div>$/;"	a
l00077	html/surf_8h_source.html	/^<div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;};<\/div>$/;"	a
l00077	html/surflib_8h_source.html	/^<div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;  time_use = 1000000 * (end.tv_sec - start.tv_sec) + end.tv_usec - start.tv_usec;<\/div>$/;"	a
l00078	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;    <a class="code" href="structfasthessian__cudaIpoint.html">fasthessian_cudaIpoint<\/a> *d_points;<\/div>$/;"	a
l00078	html/kmeans_8h_source.html	/^<div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;<\/div>$/;"	a
l00078	html/surf_8h_source.html	/^<div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;<\/div>$/;"	a
l00078	html/surflib_8h_source.html	/^<div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;  time_use \/= 1000;<\/div>$/;"	a
l00079	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;<\/div>$/;"	a
l00079	html/ipoint_8h_source.html	/^<div class="line"><a name="l00079"><\/a><span class="lineno"><a class="code" href="classIpoint.html#af050aa2895a2d948dcf55e8a37a1fe81">   79<\/a><\/span>&#160;  <span class="keywordtype">float<\/span> <a class="code" href="classIpoint.html#af050aa2895a2d948dcf55e8a37a1fe81" title="Placeholds for point motion (can be used for frame to frame motion analysis) ">dx<\/a>, dy;<\/div>$/;"	a
l00079	html/kmeans_8h_source.html	/^<div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;  <a class="code" href="classKmeans.html#a158fafaadf2e13f857ce6f134d7186ae" title="Set the ipts to be used. ">SetIpoints<\/a>(ipts);<\/div>$/;"	a
l00079	html/surf_8h_source.html	/^<div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;<span class="preprocessor">#endif <\/span><span class="comment">\/* SURF_H *\/<\/span><span class="preprocessor"><\/span><\/div>$/;"	a
l00079	html/surflib_8h_source.html	/^<div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;  std::cout&lt;&lt;<span class="stringliteral">&quot;Extarc descriptors time is:&quot;<\/span>&lt;&lt;time_use&lt;&lt;<span class="stringliteral">&quot;ms&quot;<\/span>&lt;&lt;std::endl;<\/div>$/;"	a
l00080	html/ipoint_8h_source.html	/^<div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;<\/div>$/;"	a
l00080	html/kmeans_8h_source.html	/^<div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;<\/div>$/;"	a
l00080	html/surflib_8h_source.html	/^<div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;<\/div>$/;"	a
l00081	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00081"><\/a><span class="lineno">   81<\/span>&#160;    <a class="code" href="structfasthessian__cudaIpoint.html">fasthessian_cudaIpoint<\/a> *h_points;<\/div>$/;"	a
l00081	html/kmeans_8h_source.html	/^<div class="line"><a name="l00081"><\/a><span class="lineno">   81<\/span>&#160;  <span class="keywordflow">if<\/span> (init) <a class="code" href="classKmeans.html#a7b217a72a901c90254bd5673bb76f038" title="Randomly distribute &#39;n&#39; clusters. ">InitRandomClusters<\/a>(clusters);<\/div>$/;"	a
l00081	html/surflib_8h_source.html	/^<div class="line"><a name="l00081"><\/a><span class="lineno">   81<\/span>&#160;  <span class="comment">\/\/ Deallocate the integral image<\/span><\/div>$/;"	a
l00082	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00082"><\/a><span class="lineno">   82<\/span>&#160;<\/div>$/;"	a
l00082	html/ipoint_8h_source.html	/^<div class="line"><a name="l00082"><\/a><span class="lineno"><a class="code" href="classIpoint.html#a85f351954a7d9156d574debc3797b2f8">   82<\/a><\/span>&#160;  <span class="keywordtype">int<\/span> <a class="code" href="classIpoint.html#a85f351954a7d9156d574debc3797b2f8" title="Used to store cluster index. ">clusterIndex<\/a>;<\/div>$/;"	a
l00082	html/kmeans_8h_source.html	/^<div class="line"><a name="l00082"><\/a><span class="lineno">   82<\/span>&#160;  <\/div>$/;"	a
l00082	html/surflib_8h_source.html	/^<div class="line"><a name="l00082"><\/a><span class="lineno">   82<\/span>&#160;  freeCudaImage(int_img);<\/div>$/;"	a
l00083	html/ipoint_8h_source.html	/^<div class="line"><a name="l00083"><\/a><span class="lineno">   83<\/span>&#160;};<\/div>$/;"	a
l00083	html/kmeans_8h_source.html	/^<div class="line"><a name="l00083"><\/a><span class="lineno">   83<\/span>&#160;  <span class="keywordflow">while<\/span> (<a class="code" href="classKmeans.html#a47c04cccafb55032e85987cfceb7c95c" title="Assign Ipoints to clusters. ">AssignToClusters<\/a>());<\/div>$/;"	a
l00083	html/surflib_8h_source.html	/^<div class="line"><a name="l00083"><\/a><span class="lineno">   83<\/span>&#160;}<\/div>$/;"	a
l00084	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;    std::vector&lt;Ipoint&gt; &amp;ipts;<\/div>$/;"	a
l00084	html/ipoint_8h_source.html	/^<div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;<\/div>$/;"	a
l00084	html/kmeans_8h_source.html	/^<div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;  {<\/div>$/;"	a
l00084	html/surflib_8h_source.html	/^<div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;<\/div>$/;"	a
l00085	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00085"><\/a><span class="lineno">   85<\/span>&#160;<\/div>$/;"	a
l00085	html/ipoint_8h_source.html	/^<div class="line"><a name="l00085"><\/a><span class="lineno">   85<\/span>&#160;<span class="comment">\/\/-------------------------------------------------------<\/span><\/div>$/;"	a
l00085	html/kmeans_8h_source.html	/^<div class="line"><a name="l00085"><\/a><span class="lineno">   85<\/span>&#160;    <a class="code" href="classKmeans.html#ab0ca7a879e310b20843adb01c4487673" title="Calculate new cluster centers. ">RepositionClusters<\/a>();<\/div>$/;"	a
l00085	html/surflib_8h_source.html	/^<div class="line"><a name="l00085"><\/a><span class="lineno">   85<\/span>&#160;<\/div>$/;"	a
l00086	html/ipoint_8h_source.html	/^<div class="line"><a name="l00086"><\/a><span class="lineno">   86<\/span>&#160;<\/div>$/;"	a
l00086	html/kmeans_8h_source.html	/^<div class="line"><a name="l00086"><\/a><span class="lineno">   86<\/span>&#160;  }<\/div>$/;"	a
l00087	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00087"><\/a><span class="lineno">   87<\/span>&#160;    <span class="keywordtype">int<\/span> octaves;<\/div>$/;"	a
l00087	html/ipoint_8h_source.html	/^<div class="line"><a name="l00087"><\/a><span class="lineno">   87<\/span>&#160;<span class="preprocessor">#endif <\/span><span class="comment">\/* IPOINT_H *\/<\/span><span class="preprocessor"><\/span><\/div>$/;"	a
l00087	html/kmeans_8h_source.html	/^<div class="line"><a name="l00087"><\/a><span class="lineno">   87<\/span>&#160;}<\/div>$/;"	a
l00087	html/surflib_8h_source.html	/^<div class="line"><a name="l00087"><\/a><span class="lineno">   87<\/span>&#160;<span class="keyword">inline<\/span> <span class="keywordtype">void<\/span> surfDet(IplImage *img,  <span class="comment">\/* image to find Ipoints in *\/<\/span><\/div>$/;"	a
l00088	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;<\/div>$/;"	a
l00088	html/kmeans_8h_source.html	/^<div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;<\/div>$/;"	a
l00088	html/surflib_8h_source.html	/^<div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;                    std::vector&lt;Ipoint&gt; &amp;ipts, <span class="comment">\/* reference to vector of Ipoints *\/<\/span><\/div>$/;"	a
l00089	html/kmeans_8h_source.html	/^<div class="line"><a name="l00089"><\/a><span class="lineno">   89<\/span>&#160;<span class="comment">\/\/-------------------------------------------------------<\/span><\/div>$/;"	a
l00089	html/surflib_8h_source.html	/^<div class="line"><a name="l00089"><\/a><span class="lineno">   89<\/span>&#160;                    <span class="keywordtype">int<\/span> octaves = OCTAVES, <span class="comment">\/* number of octaves to calculate *\/<\/span><\/div>$/;"	a
l00090	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00090"><\/a><span class="lineno">   90<\/span>&#160;    <span class="keywordtype">int<\/span> adjd_octaves;<\/div>$/;"	a
l00090	html/kmeans_8h_source.html	/^<div class="line"><a name="l00090"><\/a><span class="lineno">   90<\/span>&#160;<\/div>$/;"	a
l00090	html/surflib_8h_source.html	/^<div class="line"><a name="l00090"><\/a><span class="lineno">   90<\/span>&#160;                    <span class="keywordtype">int<\/span> intervals = INTERVALS, <span class="comment">\/* number of intervals per octave *\/<\/span><\/div>$/;"	a
l00091	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;<\/div>$/;"	a
l00091	html/kmeans_8h_source.html	/^<div class="line"><a name="l00091"><\/a><span class="lineno"><a class="code" href="classKmeans.html#a158fafaadf2e13f857ce6f134d7186ae">   91<\/a><\/span>&#160;<span class="keywordtype">void<\/span> <a class="code" href="classKmeans.html#a158fafaadf2e13f857ce6f134d7186ae" title="Set the ipts to be used. ">Kmeans::SetIpoints<\/a>(IpVec *ipts)<\/div>$/;"	a
l00091	html/surflib_8h_source.html	/^<div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;                    <span class="keywordtype">int<\/span> init_sample = INIT_SAMPLE, <span class="comment">\/* initial sampling step *\/<\/span><\/div>$/;"	a
l00092	html/kmeans_8h_source.html	/^<div class="line"><a name="l00092"><\/a><span class="lineno">   92<\/span>&#160;{<\/div>$/;"	a
l00092	html/surflib_8h_source.html	/^<div class="line"><a name="l00092"><\/a><span class="lineno">   92<\/span>&#160;                    <span class="keywordtype">float<\/span> thres = THRES <span class="comment">\/* blob response threshold *\/<\/span>)<\/div>$/;"	a
l00093	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;    <span class="keywordtype">int<\/span> intervals;<\/div>$/;"	a
l00093	html/kmeans_8h_source.html	/^<div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;  this-&gt;ipts = <a class="code" href="classKmeans.html#abed0349d08279cf3bc8884bf47057b86" title="Vector stores ipoints for this run. ">ipts<\/a>;<\/div>$/;"	a
l00093	html/surflib_8h_source.html	/^<div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;{<\/div>$/;"	a
l00094	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00094"><\/a><span class="lineno">   94<\/span>&#160;<\/div>$/;"	a
l00094	html/kmeans_8h_source.html	/^<div class="line"><a name="l00094"><\/a><span class="lineno">   94<\/span>&#160;}<\/div>$/;"	a
l00094	html/surflib_8h_source.html	/^<div class="line"><a name="l00094"><\/a><span class="lineno">   94<\/span>&#160;  <span class="comment">\/\/ Create integral image representation of the image<\/span><\/div>$/;"	a
l00095	html/kmeans_8h_source.html	/^<div class="line"><a name="l00095"><\/a><span class="lineno">   95<\/span>&#160;<\/div>$/;"	a
l00095	html/surflib_8h_source.html	/^<div class="line"><a name="l00095"><\/a><span class="lineno">   95<\/span>&#160;  <a class="code" href="structcudaImage.html">cudaImage<\/a> *int_img = Integral(img);<\/div>$/;"	a
l00096	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00096"><\/a><span class="lineno">   96<\/span>&#160;    <span class="keywordtype">int<\/span> init_sample;<\/div>$/;"	a
l00096	html/kmeans_8h_source.html	/^<div class="line"><a name="l00096"><\/a><span class="lineno">   96<\/span>&#160;<span class="comment">\/\/-------------------------------------------------------<\/span><\/div>$/;"	a
l00096	html/surflib_8h_source.html	/^<div class="line"><a name="l00096"><\/a><span class="lineno">   96<\/span>&#160;<\/div>$/;"	a
l00097	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00097"><\/a><span class="lineno">   97<\/span>&#160;<\/div>$/;"	a
l00097	html/kmeans_8h_source.html	/^<div class="line"><a name="l00097"><\/a><span class="lineno">   97<\/span>&#160;<\/div>$/;"	a
l00097	html/surflib_8h_source.html	/^<div class="line"><a name="l00097"><\/a><span class="lineno">   97<\/span>&#160;  <span class="comment">\/\/ Create Fast Hessian Object<\/span><\/div>$/;"	a
l00098	html/kmeans_8h_source.html	/^<div class="line"><a name="l00098"><\/a><span class="lineno"><a class="code" href="classKmeans.html#a7b217a72a901c90254bd5673bb76f038">   98<\/a><\/span>&#160;<span class="keywordtype">void<\/span> <a class="code" href="classKmeans.html#a7b217a72a901c90254bd5673bb76f038" title="Randomly distribute &#39;n&#39; clusters. ">Kmeans::InitRandomClusters<\/a>(<span class="keywordtype">int<\/span> n)<\/div>$/;"	a
l00098	html/surflib_8h_source.html	/^<div class="line"><a name="l00098"><\/a><span class="lineno">   98<\/span>&#160;  <a class="code" href="classFastHessian.html">FastHessian<\/a> fh(int_img, ipts, octaves, intervals, init_sample, thres);<\/div>$/;"	a
l00099	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00099"><\/a><span class="lineno">   99<\/span>&#160;    <span class="keywordtype">float<\/span> thres;<\/div>$/;"	a
l00099	html/kmeans_8h_source.html	/^<div class="line"><a name="l00099"><\/a><span class="lineno">   99<\/span>&#160;{<\/div>$/;"	a
l00099	html/surflib_8h_source.html	/^<div class="line"><a name="l00099"><\/a><span class="lineno">   99<\/span>&#160;<\/div>$/;"	a
l00100	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00100"><\/a><span class="lineno">  100<\/span>&#160;<\/div>$/;"	a
l00100	html/kmeans_8h_source.html	/^<div class="line"><a name="l00100"><\/a><span class="lineno">  100<\/span>&#160;  <span class="comment">\/\/ clear the cluster vector<\/span><\/div>$/;"	a
l00100	html/surflib_8h_source.html	/^<div class="line"><a name="l00100"><\/a><span class="lineno">  100<\/span>&#160;  <span class="comment">\/\/ Extract interest points and store in vector ipts<\/span><\/div>$/;"	a
l00101	html/kmeans_8h_source.html	/^<div class="line"><a name="l00101"><\/a><span class="lineno">  101<\/span>&#160;  <a class="code" href="classKmeans.html#a934a2bb64012d84c3b8f5d34dbd63237" title="Vector stores cluster centers. ">clusters<\/a>.clear();<\/div>$/;"	a
l00101	html/surflib_8h_source.html	/^<div class="line"><a name="l00101"><\/a><span class="lineno">  101<\/span>&#160;  fh.getIpoints();<\/div>$/;"	a
l00102	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00102"><\/a><span class="lineno">  102<\/span>&#160;    <span class="keywordtype">float<\/span> *d_det;<\/div>$/;"	a
l00102	html/kmeans_8h_source.html	/^<div class="line"><a name="l00102"><\/a><span class="lineno">  102<\/span>&#160;<\/div>$/;"	a
l00102	html/surflib_8h_source.html	/^<div class="line"><a name="l00102"><\/a><span class="lineno">  102<\/span>&#160;<\/div>$/;"	a
l00103	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00103"><\/a><span class="lineno">  103<\/span>&#160;    <span class="keywordtype">size_t<\/span> det_pitch;<\/div>$/;"	a
l00103	html/kmeans_8h_source.html	/^<div class="line"><a name="l00103"><\/a><span class="lineno">  103<\/span>&#160;  <span class="comment">\/\/ Seed the random number generator<\/span><\/div>$/;"	a
l00103	html/surflib_8h_source.html	/^<div class="line"><a name="l00103"><\/a><span class="lineno">  103<\/span>&#160;  <span class="comment">\/\/ Deallocate the integral image<\/span><\/div>$/;"	a
l00104	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00104"><\/a><span class="lineno">  104<\/span>&#160;<\/div>$/;"	a
l00104	html/kmeans_8h_source.html	/^<div class="line"><a name="l00104"><\/a><span class="lineno">  104<\/span>&#160;  srand((<span class="keywordtype">int<\/span>)time(NULL));<\/div>$/;"	a
l00104	html/surflib_8h_source.html	/^<div class="line"><a name="l00104"><\/a><span class="lineno">  104<\/span>&#160;  freeCudaImage(int_img);<\/div>$/;"	a
l00105	html/kmeans_8h_source.html	/^<div class="line"><a name="l00105"><\/a><span class="lineno">  105<\/span>&#160;<\/div>$/;"	a
l00105	html/surflib_8h_source.html	/^<div class="line"><a name="l00105"><\/a><span class="lineno">  105<\/span>&#160;}<\/div>$/;"	a
l00106	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00106"><\/a><span class="lineno">  106<\/span>&#160;    <span class="keywordtype">void<\/span> buildDet();<\/div>$/;"	a
l00106	html/kmeans_8h_source.html	/^<div class="line"><a name="l00106"><\/a><span class="lineno">  106<\/span>&#160;  <span class="comment">\/\/ add &#39;n&#39; random ipoints to clusters list as initial centers<\/span><\/div>$/;"	a
l00106	html/surflib_8h_source.html	/^<div class="line"><a name="l00106"><\/a><span class="lineno">  106<\/span>&#160;<\/div>$/;"	a
l00107	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00107"><\/a><span class="lineno">  107<\/span>&#160;<\/div>$/;"	a
l00107	html/kmeans_8h_source.html	/^<div class="line"><a name="l00107"><\/a><span class="lineno">  107<\/span>&#160;  <span class="keywordflow">for<\/span> (<span class="keywordtype">int<\/span> i = 0; i &lt; n; ++i)<\/div>$/;"	a
l00107	html/surflib_8h_source.html	/^<div class="line"><a name="l00107"><\/a><span class="lineno">  107<\/span>&#160;<\/div>$/;"	a
l00108	html/kmeans_8h_source.html	/^<div class="line"><a name="l00108"><\/a><span class="lineno">  108<\/span>&#160;  {<\/div>$/;"	a
l00109	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00109"><\/a><span class="lineno">  109<\/span>&#160;    <span class="keywordtype">void<\/span> collectPoints(<a class="code" href="structfasthessian__cudaIpoint.html">fasthessian_cudaIpoint<\/a> *points);<\/div>$/;"	a
l00109	html/kmeans_8h_source.html	/^<div class="line"><a name="l00109"><\/a><span class="lineno">  109<\/span>&#160;    <a class="code" href="classKmeans.html#a934a2bb64012d84c3b8f5d34dbd63237" title="Vector stores cluster centers. ">clusters<\/a>.push_back(<a class="code" href="classKmeans.html#abed0349d08279cf3bc8884bf47057b86" title="Vector stores ipoints for this run. ">ipts<\/a>-&gt;at(rand() % <a class="code" href="classKmeans.html#abed0349d08279cf3bc8884bf47057b86" title="Vector stores ipoints for this run. ">ipts<\/a>-&gt;size()));<\/div>$/;"	a
l00109	html/surflib_8h_source.html	/^<div class="line"><a name="l00109"><\/a><span class="lineno">  109<\/span>&#160;<span class="keyword">inline<\/span> <span class="keywordtype">void<\/span> surfDes(IplImage *img,  <span class="comment">\/* image to find Ipoints in *\/<\/span><\/div>$/;"	a
l00110	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00110"><\/a><span class="lineno">  110<\/span>&#160;<\/div>$/;"	a
l00110	html/kmeans_8h_source.html	/^<div class="line"><a name="l00110"><\/a><span class="lineno">  110<\/span>&#160;  }<\/div>$/;"	a
l00110	html/surflib_8h_source.html	/^<div class="line"><a name="l00110"><\/a><span class="lineno">  110<\/span>&#160;                    std::vector&lt;Ipoint&gt; &amp;ipts, <span class="comment">\/* reference to vector of Ipoints *\/<\/span><\/div>$/;"	a
l00111	html/kmeans_8h_source.html	/^<div class="line"><a name="l00111"><\/a><span class="lineno">  111<\/span>&#160;}<\/div>$/;"	a
l00111	html/surflib_8h_source.html	/^<div class="line"><a name="l00111"><\/a><span class="lineno">  111<\/span>&#160;                    <span class="keywordtype">bool<\/span> upright = <span class="keyword">false<\/span>) <span class="comment">\/* run in rotation invariant mode? *\/<\/span><\/div>$/;"	a
l00112	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00112"><\/a><span class="lineno">  112<\/span>&#160;    <span class="keywordtype">void<\/span> initGPU();<\/div>$/;"	a
l00112	html/kmeans_8h_source.html	/^<div class="line"><a name="l00112"><\/a><span class="lineno">  112<\/span>&#160;<\/div>$/;"	a
l00112	html/surflib_8h_source.html	/^<div class="line"><a name="l00112"><\/a><span class="lineno">  112<\/span>&#160;{<\/div>$/;"	a
l00113	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00113"><\/a><span class="lineno">  113<\/span>&#160;};<\/div>$/;"	a
l00113	html/kmeans_8h_source.html	/^<div class="line"><a name="l00113"><\/a><span class="lineno">  113<\/span>&#160;<span class="comment">\/\/-------------------------------------------------------<\/span><\/div>$/;"	a
l00113	html/surflib_8h_source.html	/^<div class="line"><a name="l00113"><\/a><span class="lineno">  113<\/span>&#160;  <span class="keywordflow">if<\/span> (ipts.size() == 0) <span class="keywordflow">return<\/span>;<\/div>$/;"	a
l00114	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00114"><\/a><span class="lineno">  114<\/span>&#160;<\/div>$/;"	a
l00114	html/kmeans_8h_source.html	/^<div class="line"><a name="l00114"><\/a><span class="lineno">  114<\/span>&#160;<\/div>$/;"	a
l00114	html/surflib_8h_source.html	/^<div class="line"><a name="l00114"><\/a><span class="lineno">  114<\/span>&#160;<\/div>$/;"	a
l00115	html/fasthessian_8h_source.html	/^<div class="line"><a name="l00115"><\/a><span class="lineno">  115<\/span>&#160;<span class="preprocessor">#endif <\/span><span class="comment">\/* FASTHESSIAN_H *\/<\/span><span class="preprocessor"><\/span><\/div>$/;"	a
l00115	html/kmeans_8h_source.html	/^<div class="line"><a name="l00115"><\/a><span class="lineno"><a class="code" href="classKmeans.html#a47c04cccafb55032e85987cfceb7c95c">  115<\/a><\/span>&#160;<span class="keywordtype">bool<\/span> <a class="code" href="classKmeans.html#a47c04cccafb55032e85987cfceb7c95c" title="Assign Ipoints to clusters. ">Kmeans::AssignToClusters<\/a>()<\/div>$/;"	a
l00115	html/surflib_8h_source.html	/^<div class="line"><a name="l00115"><\/a><span class="lineno">  115<\/span>&#160;  <span class="comment">\/\/ Create integral image representation of the image<\/span><\/div>$/;"	a
l00116	html/kmeans_8h_source.html	/^<div class="line"><a name="l00116"><\/a><span class="lineno">  116<\/span>&#160;{<\/div>$/;"	a
l00116	html/surflib_8h_source.html	/^<div class="line"><a name="l00116"><\/a><span class="lineno">  116<\/span>&#160;  <a class="code" href="structcudaImage.html">cudaImage<\/a> *int_img = Integral(img);<\/div>$/;"	a
l00117	html/kmeans_8h_source.html	/^<div class="line"><a name="l00117"><\/a><span class="lineno">  117<\/span>&#160;  <span class="keywordtype">bool<\/span> Updated = <span class="keyword">false<\/span>;<\/div>$/;"	a
l00117	html/surflib_8h_source.html	/^<div class="line"><a name="l00117"><\/a><span class="lineno">  117<\/span>&#160;<\/div>$/;"	a
l00118	html/kmeans_8h_source.html	/^<div class="line"><a name="l00118"><\/a><span class="lineno">  118<\/span>&#160;<\/div>$/;"	a
l00118	html/surflib_8h_source.html	/^<div class="line"><a name="l00118"><\/a><span class="lineno">  118<\/span>&#160;  <span class="comment">\/\/ Create Surf Descriptor Object<\/span><\/div>$/;"	a
l00119	html/kmeans_8h_source.html	/^<div class="line"><a name="l00119"><\/a><span class="lineno">  119<\/span>&#160;  <span class="comment">\/\/ loop over all Ipoints and assign each to closest cluster<\/span><\/div>$/;"	a
l00119	html/surflib_8h_source.html	/^<div class="line"><a name="l00119"><\/a><span class="lineno">  119<\/span>&#160;  <a class="code" href="classSurf.html">Surf<\/a> des(int_img, ipts);<\/div>$/;"	a
l00120	html/kmeans_8h_source.html	/^<div class="line"><a name="l00120"><\/a><span class="lineno">  120<\/span>&#160;  <span class="keywordflow">for<\/span> (<span class="keywordtype">unsigned<\/span> <span class="keywordtype">int<\/span> i = 0; i &lt; <a class="code" href="classKmeans.html#abed0349d08279cf3bc8884bf47057b86" title="Vector stores ipoints for this run. ">ipts<\/a>-&gt;size(); ++i)<\/div>$/;"	a
l00120	html/surflib_8h_source.html	/^<div class="line"><a name="l00120"><\/a><span class="lineno">  120<\/span>&#160;<\/div>$/;"	a
l00121	html/kmeans_8h_source.html	/^<div class="line"><a name="l00121"><\/a><span class="lineno">  121<\/span>&#160;  {<\/div>$/;"	a
l00121	html/surflib_8h_source.html	/^<div class="line"><a name="l00121"><\/a><span class="lineno">  121<\/span>&#160;  <span class="comment">\/\/ Extract the descriptors for the ipts<\/span><\/div>$/;"	a
l00122	html/kmeans_8h_source.html	/^<div class="line"><a name="l00122"><\/a><span class="lineno">  122<\/span>&#160;    <span class="keywordtype">float<\/span> bestDist = FLT_MAX;<\/div>$/;"	a
l00122	html/surflib_8h_source.html	/^<div class="line"><a name="l00122"><\/a><span class="lineno">  122<\/span>&#160;  des.getDescriptors(upright);<\/div>$/;"	a
l00123	html/kmeans_8h_source.html	/^<div class="line"><a name="l00123"><\/a><span class="lineno">  123<\/span>&#160;    <span class="keywordtype">int<\/span> oldIndex = <a class="code" href="classKmeans.html#abed0349d08279cf3bc8884bf47057b86" title="Vector stores ipoints for this run. ">ipts<\/a>-&gt;at(i).clusterIndex;<\/div>$/;"	a
l00123	html/surflib_8h_source.html	/^<div class="line"><a name="l00123"><\/a><span class="lineno">  123<\/span>&#160;<\/div>$/;"	a
l00124	html/kmeans_8h_source.html	/^<div class="line"><a name="l00124"><\/a><span class="lineno">  124<\/span>&#160;<\/div>$/;"	a
l00124	html/surflib_8h_source.html	/^<div class="line"><a name="l00124"><\/a><span class="lineno">  124<\/span>&#160;  <span class="comment">\/\/ Deallocate the integral image<\/span><\/div>$/;"	a
l00125	html/kmeans_8h_source.html	/^<div class="line"><a name="l00125"><\/a><span class="lineno">  125<\/span>&#160;    <span class="keywordflow">for<\/span> (<span class="keywordtype">unsigned<\/span> <span class="keywordtype">int<\/span> j = 0; j &lt; <a class="code" href="classKmeans.html#a934a2bb64012d84c3b8f5d34dbd63237" title="Vector stores cluster centers. ">clusters<\/a>.size(); ++j)<\/div>$/;"	a
l00125	html/surflib_8h_source.html	/^<div class="line"><a name="l00125"><\/a><span class="lineno">  125<\/span>&#160;  freeCudaImage(int_img);<\/div>$/;"	a
l00126	html/kmeans_8h_source.html	/^<div class="line"><a name="l00126"><\/a><span class="lineno">  126<\/span>&#160;    {<\/div>$/;"	a
l00126	html/surflib_8h_source.html	/^<div class="line"><a name="l00126"><\/a><span class="lineno">  126<\/span>&#160;}<\/div>$/;"	a
l00127	html/kmeans_8h_source.html	/^<div class="line"><a name="l00127"><\/a><span class="lineno">  127<\/span>&#160;      <span class="keywordtype">float<\/span> currentDist = <a class="code" href="classKmeans.html#a63c4aaf0a9ea1015525f3ac3d84ca516" title="Function to measure the distance between 2 ipoints. ">Distance<\/a>(<a class="code" href="classKmeans.html#abed0349d08279cf3bc8884bf47057b86" title="Vector stores ipoints for this run. ">ipts<\/a>-&gt;at(i), <a class="code" href="classKmeans.html#a934a2bb64012d84c3b8f5d34dbd63237" title="Vector stores cluster centers. ">clusters<\/a>[j]);<\/div>$/;"	a
l00127	html/surflib_8h_source.html	/^<div class="line"><a name="l00127"><\/a><span class="lineno">  127<\/span>&#160;<\/div>$/;"	a
l00128	html/kmeans_8h_source.html	/^<div class="line"><a name="l00128"><\/a><span class="lineno">  128<\/span>&#160;      <span class="keywordflow">if<\/span> (currentDist &lt; bestDist)<\/div>$/;"	a
l00128	html/surflib_8h_source.html	/^<div class="line"><a name="l00128"><\/a><span class="lineno">  128<\/span>&#160;<span class="preprocessor">#endif <\/span><span class="comment">\/* SURFLIB_H *\/<\/span><span class="preprocessor"><\/span><\/div>$/;"	a
l00129	html/kmeans_8h_source.html	/^<div class="line"><a name="l00129"><\/a><span class="lineno">  129<\/span>&#160;      {<\/div>$/;"	a
l00130	html/kmeans_8h_source.html	/^<div class="line"><a name="l00130"><\/a><span class="lineno">  130<\/span>&#160;        bestDist = currentDist;<\/div>$/;"	a
l00131	html/kmeans_8h_source.html	/^<div class="line"><a name="l00131"><\/a><span class="lineno">  131<\/span>&#160;        <a class="code" href="classKmeans.html#abed0349d08279cf3bc8884bf47057b86" title="Vector stores ipoints for this run. ">ipts<\/a>-&gt;at(i).clusterIndex = j;<\/div>$/;"	a
l00132	html/kmeans_8h_source.html	/^<div class="line"><a name="l00132"><\/a><span class="lineno">  132<\/span>&#160;      }<\/div>$/;"	a
l00133	html/kmeans_8h_source.html	/^<div class="line"><a name="l00133"><\/a><span class="lineno">  133<\/span>&#160;    }<\/div>$/;"	a
l00134	html/kmeans_8h_source.html	/^<div class="line"><a name="l00134"><\/a><span class="lineno">  134<\/span>&#160;<\/div>$/;"	a
l00135	html/kmeans_8h_source.html	/^<div class="line"><a name="l00135"><\/a><span class="lineno">  135<\/span>&#160;    <span class="comment">\/\/ determine whether point has changed cluster<\/span><\/div>$/;"	a
l00136	html/kmeans_8h_source.html	/^<div class="line"><a name="l00136"><\/a><span class="lineno">  136<\/span>&#160;    <span class="keywordflow">if<\/span> (<a class="code" href="classKmeans.html#abed0349d08279cf3bc8884bf47057b86" title="Vector stores ipoints for this run. ">ipts<\/a>-&gt;at(i).clusterIndex != oldIndex) Updated = <span class="keyword">true<\/span>;<\/div>$/;"	a
l00137	html/kmeans_8h_source.html	/^<div class="line"><a name="l00137"><\/a><span class="lineno">  137<\/span>&#160;  }<\/div>$/;"	a
l00138	html/kmeans_8h_source.html	/^<div class="line"><a name="l00138"><\/a><span class="lineno">  138<\/span>&#160;<\/div>$/;"	a
l00139	html/kmeans_8h_source.html	/^<div class="line"><a name="l00139"><\/a><span class="lineno">  139<\/span>&#160;  <span class="keywordflow">return<\/span> Updated;<\/div>$/;"	a
l00140	html/kmeans_8h_source.html	/^<div class="line"><a name="l00140"><\/a><span class="lineno">  140<\/span>&#160;}<\/div>$/;"	a
l00141	html/kmeans_8h_source.html	/^<div class="line"><a name="l00141"><\/a><span class="lineno">  141<\/span>&#160;<\/div>$/;"	a
l00142	html/kmeans_8h_source.html	/^<div class="line"><a name="l00142"><\/a><span class="lineno">  142<\/span>&#160;<span class="comment">\/\/-------------------------------------------------------<\/span><\/div>$/;"	a
l00143	html/kmeans_8h_source.html	/^<div class="line"><a name="l00143"><\/a><span class="lineno">  143<\/span>&#160;<\/div>$/;"	a
l00144	html/kmeans_8h_source.html	/^<div class="line"><a name="l00144"><\/a><span class="lineno"><a class="code" href="classKmeans.html#ab0ca7a879e310b20843adb01c4487673">  144<\/a><\/span>&#160;<span class="keywordtype">void<\/span> <a class="code" href="classKmeans.html#ab0ca7a879e310b20843adb01c4487673" title="Calculate new cluster centers. ">Kmeans::RepositionClusters<\/a>()<\/div>$/;"	a
l00145	html/kmeans_8h_source.html	/^<div class="line"><a name="l00145"><\/a><span class="lineno">  145<\/span>&#160;{<\/div>$/;"	a
l00146	html/kmeans_8h_source.html	/^<div class="line"><a name="l00146"><\/a><span class="lineno">  146<\/span>&#160;  <span class="keywordtype">float<\/span> x, y, dx, dy, count;<\/div>$/;"	a
l00147	html/kmeans_8h_source.html	/^<div class="line"><a name="l00147"><\/a><span class="lineno">  147<\/span>&#160;<\/div>$/;"	a
l00148	html/kmeans_8h_source.html	/^<div class="line"><a name="l00148"><\/a><span class="lineno">  148<\/span>&#160;  <span class="keywordflow">for<\/span> (<span class="keywordtype">unsigned<\/span> <span class="keywordtype">int<\/span> i = 0; i &lt; <a class="code" href="classKmeans.html#a934a2bb64012d84c3b8f5d34dbd63237" title="Vector stores cluster centers. ">clusters<\/a>.size(); ++i)<\/div>$/;"	a
l00149	html/kmeans_8h_source.html	/^<div class="line"><a name="l00149"><\/a><span class="lineno">  149<\/span>&#160;  {<\/div>$/;"	a
l00150	html/kmeans_8h_source.html	/^<div class="line"><a name="l00150"><\/a><span class="lineno">  150<\/span>&#160;    x = y = dx = dy = 0;<\/div>$/;"	a
l00151	html/kmeans_8h_source.html	/^<div class="line"><a name="l00151"><\/a><span class="lineno">  151<\/span>&#160;    count = 1;<\/div>$/;"	a
l00152	html/kmeans_8h_source.html	/^<div class="line"><a name="l00152"><\/a><span class="lineno">  152<\/span>&#160;<\/div>$/;"	a
l00153	html/kmeans_8h_source.html	/^<div class="line"><a name="l00153"><\/a><span class="lineno">  153<\/span>&#160;    <span class="keywordflow">for<\/span> (<span class="keywordtype">unsigned<\/span> <span class="keywordtype">int<\/span> j = 0; j &lt; <a class="code" href="classKmeans.html#abed0349d08279cf3bc8884bf47057b86" title="Vector stores ipoints for this run. ">ipts<\/a>-&gt;size(); ++j)<\/div>$/;"	a
l00154	html/kmeans_8h_source.html	/^<div class="line"><a name="l00154"><\/a><span class="lineno">  154<\/span>&#160;    {<\/div>$/;"	a
l00155	html/kmeans_8h_source.html	/^<div class="line"><a name="l00155"><\/a><span class="lineno">  155<\/span>&#160;      <span class="keywordflow">if<\/span> (<a class="code" href="classKmeans.html#abed0349d08279cf3bc8884bf47057b86" title="Vector stores ipoints for this run. ">ipts<\/a>-&gt;at(j).clusterIndex == i)<\/div>$/;"	a
l00156	html/kmeans_8h_source.html	/^<div class="line"><a name="l00156"><\/a><span class="lineno">  156<\/span>&#160;      {<\/div>$/;"	a
l00157	html/kmeans_8h_source.html	/^<div class="line"><a name="l00157"><\/a><span class="lineno">  157<\/span>&#160;        <a class="code" href="classIpoint.html">Ipoint<\/a> ip = <a class="code" href="classKmeans.html#abed0349d08279cf3bc8884bf47057b86" title="Vector stores ipoints for this run. ">ipts<\/a>-&gt;at(j);<\/div>$/;"	a
l00158	html/kmeans_8h_source.html	/^<div class="line"><a name="l00158"><\/a><span class="lineno">  158<\/span>&#160;        x += ip.<a class="code" href="classIpoint.html#a3bbd5fa4ec53e4e871ddffe3b952fddd" title="Coordinates of the detected interest point. ">x<\/a>;<\/div>$/;"	a
l00159	html/kmeans_8h_source.html	/^<div class="line"><a name="l00159"><\/a><span class="lineno">  159<\/span>&#160;        y += ip.y;<\/div>$/;"	a
l00160	html/kmeans_8h_source.html	/^<div class="line"><a name="l00160"><\/a><span class="lineno">  160<\/span>&#160;        dx += ip.<a class="code" href="classIpoint.html#af050aa2895a2d948dcf55e8a37a1fe81" title="Placeholds for point motion (can be used for frame to frame motion analysis) ">dx<\/a>;<\/div>$/;"	a
l00161	html/kmeans_8h_source.html	/^<div class="line"><a name="l00161"><\/a><span class="lineno">  161<\/span>&#160;        dy += ip.dy;<\/div>$/;"	a
l00162	html/kmeans_8h_source.html	/^<div class="line"><a name="l00162"><\/a><span class="lineno">  162<\/span>&#160;        ++count;<\/div>$/;"	a
l00163	html/kmeans_8h_source.html	/^<div class="line"><a name="l00163"><\/a><span class="lineno">  163<\/span>&#160;      }<\/div>$/;"	a
l00164	html/kmeans_8h_source.html	/^<div class="line"><a name="l00164"><\/a><span class="lineno">  164<\/span>&#160;    }<\/div>$/;"	a
l00165	html/kmeans_8h_source.html	/^<div class="line"><a name="l00165"><\/a><span class="lineno">  165<\/span>&#160;<\/div>$/;"	a
l00166	html/kmeans_8h_source.html	/^<div class="line"><a name="l00166"><\/a><span class="lineno">  166<\/span>&#160;    <a class="code" href="classKmeans.html#a934a2bb64012d84c3b8f5d34dbd63237" title="Vector stores cluster centers. ">clusters<\/a>[i].x = x\/count;<\/div>$/;"	a
l00167	html/kmeans_8h_source.html	/^<div class="line"><a name="l00167"><\/a><span class="lineno">  167<\/span>&#160;    <a class="code" href="classKmeans.html#a934a2bb64012d84c3b8f5d34dbd63237" title="Vector stores cluster centers. ">clusters<\/a>[i].y = y\/count;<\/div>$/;"	a
l00168	html/kmeans_8h_source.html	/^<div class="line"><a name="l00168"><\/a><span class="lineno">  168<\/span>&#160;    <a class="code" href="classKmeans.html#a934a2bb64012d84c3b8f5d34dbd63237" title="Vector stores cluster centers. ">clusters<\/a>[i].dx = dx\/count;<\/div>$/;"	a
l00169	html/kmeans_8h_source.html	/^<div class="line"><a name="l00169"><\/a><span class="lineno">  169<\/span>&#160;    <a class="code" href="classKmeans.html#a934a2bb64012d84c3b8f5d34dbd63237" title="Vector stores cluster centers. ">clusters<\/a>[i].dy = dy\/count;<\/div>$/;"	a
l00170	html/kmeans_8h_source.html	/^<div class="line"><a name="l00170"><\/a><span class="lineno">  170<\/span>&#160;  }<\/div>$/;"	a
l00171	html/kmeans_8h_source.html	/^<div class="line"><a name="l00171"><\/a><span class="lineno">  171<\/span>&#160;}<\/div>$/;"	a
l00172	html/kmeans_8h_source.html	/^<div class="line"><a name="l00172"><\/a><span class="lineno">  172<\/span>&#160;<\/div>$/;"	a
l00173	html/kmeans_8h_source.html	/^<div class="line"><a name="l00173"><\/a><span class="lineno">  173<\/span>&#160;<span class="comment">\/\/-------------------------------------------------------<\/span><\/div>$/;"	a
l00174	html/kmeans_8h_source.html	/^<div class="line"><a name="l00174"><\/a><span class="lineno">  174<\/span>&#160;<\/div>$/;"	a
l00175	html/kmeans_8h_source.html	/^<div class="line"><a name="l00175"><\/a><span class="lineno"><a class="code" href="classKmeans.html#a63c4aaf0a9ea1015525f3ac3d84ca516">  175<\/a><\/span>&#160;<span class="keywordtype">float<\/span> <a class="code" href="classKmeans.html#a63c4aaf0a9ea1015525f3ac3d84ca516" title="Function to measure the distance between 2 ipoints. ">Kmeans::Distance<\/a>(<a class="code" href="classIpoint.html">Ipoint<\/a> &amp;ip1, <a class="code" href="classIpoint.html">Ipoint<\/a> &amp;ip2)<\/div>$/;"	a
l00176	html/kmeans_8h_source.html	/^<div class="line"><a name="l00176"><\/a><span class="lineno">  176<\/span>&#160;{<\/div>$/;"	a
l00177	html/kmeans_8h_source.html	/^<div class="line"><a name="l00177"><\/a><span class="lineno">  177<\/span>&#160;  <span class="keywordflow">return<\/span> sqrt(pow(ip1.<a class="code" href="classIpoint.html#a3bbd5fa4ec53e4e871ddffe3b952fddd" title="Coordinates of the detected interest point. ">x<\/a> - ip2.<a class="code" href="classIpoint.html#a3bbd5fa4ec53e4e871ddffe3b952fddd" title="Coordinates of the detected interest point. ">x<\/a>, 2) <\/div>$/;"	a
l00178	html/kmeans_8h_source.html	/^<div class="line"><a name="l00178"><\/a><span class="lineno">  178<\/span>&#160;            + pow(ip1.y - ip2.y, 2)<\/div>$/;"	a
l00179	html/kmeans_8h_source.html	/^<div class="line"><a name="l00179"><\/a><span class="lineno">  179<\/span>&#160;            <span class="comment">\/*+ pow(ip1.dx - ip2.dx, 2) <\/span><\/div>$/;"	a
l00180	html/kmeans_8h_source.html	/^<div class="line"><a name="l00180"><\/a><span class="lineno">  180<\/span>&#160;<span class="comment">            + pow(ip1.dy - ip2.dy, 2)*\/<\/span>);<\/div>$/;"	a
l00181	html/kmeans_8h_source.html	/^<div class="line"><a name="l00181"><\/a><span class="lineno">  181<\/span>&#160;}<\/div>$/;"	a
l00182	html/kmeans_8h_source.html	/^<div class="line"><a name="l00182"><\/a><span class="lineno">  182<\/span>&#160;<\/div>$/;"	a
l00183	html/kmeans_8h_source.html	/^<div class="line"><a name="l00183"><\/a><span class="lineno">  183<\/span>&#160;<span class="comment">\/\/-------------------------------------------------------<\/span><\/div>$/;"	a
laplacian	fasthessian_cudaipoint.h	/^	int laplacian;$/;"	m	struct:__anon1
laplacian	ipoint.h	/^  int laplacian;$/;"	m	class:Ipoint
laplacian	surf_cudaipoint.h	/^	int laplacian;$/;"	m	struct:__anon2
latex_count	latex/Makefile	/^	latex_count=5 ; \\$/;"	m
lengths	surf_cudaipoint.h	/^	float lengths[4][4];$/;"	m	struct:__anon2
letter_C	html/classes.html	/^<tr><td rowspan="2" valign="bottom"><a name="letter_C"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;C&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_F	html/classes.html	/^<tr><td rowspan="2" valign="bottom"><a name="letter_F"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;F&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_I	html/classes.html	/^<tr><td rowspan="2" valign="bottom"><a name="letter_I"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;I&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_K	html/classes.html	/^<\/td><td valign="top"><a class="el" href="structfasthessian__cudaIpoint.html">fasthessian_cudaIpoint<\/a>&#160;&#160;&#160;<\/td><td rowspan="2" valign="bottom"><a name="letter_K"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;K&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_S	html/classes.html	/^<\/td><td valign="top"><a class="el" href="classIpoint.html">Ipoint<\/a>&#160;&#160;&#160;<\/td><td rowspan="2" valign="bottom"><a name="letter_S"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;S&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
linearizeDescriptors	cuda/getMatchesGPU.cpp	/^linearizeDescriptors(float *dst, const IpVec &ipts)$/;"	f
loadSurf	utils.cpp	/^void loadSurf(char *filename, vector<Ipoint> &ipts)$/;"	f
lobe_cache	fasthessian.cpp	/^static const int lobe_cache [] = {3,5,7,9,5,9,13,17,9,17,25,33,17,33,49,65};$/;"	v	file:
lobe_cache_unique	fasthessian.cpp	/^static const int lobe_cache_unique [] = {3,5,7,9,13,17,25,33,49,65};$/;"	v	file:
lobe_map	fasthessian.cpp	/^static const int lobe_map [] = {0,1,2,3,1,3,4,5,3,5,6,7,5,7,8,9};$/;"	v	file:
main	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	/^int main(int argc, char* argv[])$/;"	f
main	CMakeFiles/2.8.11.2/CompilerIdC/CMakeCCompilerId.c	/^void main() {}$/;"	f
main	CMakeFiles/2.8.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^int main(int argc, char* argv[])$/;"	f
main	main.cpp	/^int main(int argc, char **argv) $/;"	f
mainImage	main.cpp	/^int mainImage(int argc,char **argv)$/;"	f
mainKmeans	main.cpp	/^int mainKmeans(void)$/;"	f
mainMatch	main.cpp	/^int mainMatch(void)$/;"	f
mainMotionPoints	main.cpp	/^int mainMotionPoints(void)$/;"	f
mainStaticMatch	main.cpp	/^int mainStaticMatch()$/;"	f
mainVideo	main.cpp	/^int mainVideo(void)$/;"	f
octaves	fasthessian.h	/^    int octaves;$/;"	m	class:FastHessian
operator -	ipoint.h	/^  float operator-(const Ipoint &rhs) const$/;"	f	class:Ipoint
orientation	ipoint.h	/^  float orientation;$/;"	m	class:Ipoint
orientation	surf_cudaipoint.h	/^	float orientation;$/;"	m	struct:__anon2
pub-attribs	html/classIpoint.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"><\/a>$/;"	a
pub-attribs	html/classKmeans.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"><\/a>$/;"	a
pub-attribs	html/structcudaImage.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"><\/a>$/;"	a
pub-attribs	html/structfasthessian__cudaIpoint.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"><\/a>$/;"	a
pub-attribs	html/structsurf__cudaIpoint.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"><\/a>$/;"	a
pub-methods	html/classFastHessian.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classIpoint.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classKmeans.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classSurf.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
saveParameters	fasthessian.cpp	/^void FastHessian::saveParameters(const int octaves, const int intervals,$/;"	f	class:FastHessian
saveSurf	utils.cpp	/^void saveSurf(char *filename, vector<Ipoint> &ipts)$/;"	f
scale	fasthessian_cudaipoint.h	/^	float scale;$/;"	m	struct:__anon1
scale	ipoint.h	/^  float scale;$/;"	m	class:Ipoint
scale	surf_cudaipoint.h	/^	float scale;$/;"	m	struct:__anon2
searchData	html/search/all_61.js	/^var searchData=$/;"	v
searchData	html/search/all_63.js	/^var searchData=$/;"	v
searchData	html/search/all_64.js	/^var searchData=$/;"	v
searchData	html/search/all_66.js	/^var searchData=$/;"	v
searchData	html/search/all_67.js	/^var searchData=$/;"	v
searchData	html/search/all_69.js	/^var searchData=$/;"	v
searchData	html/search/all_6b.js	/^var searchData=$/;"	v
searchData	html/search/all_6c.js	/^var searchData=$/;"	v
searchData	html/search/all_6f.js	/^var searchData=$/;"	v
searchData	html/search/all_72.js	/^var searchData=$/;"	v
searchData	html/search/all_73.js	/^var searchData=$/;"	v
searchData	html/search/all_78.js	/^var searchData=$/;"	v
searchData	html/search/all_7e.js	/^var searchData=$/;"	v
searchData	html/search/classes_63.js	/^var searchData=$/;"	v
searchData	html/search/classes_66.js	/^var searchData=$/;"	v
searchData	html/search/classes_69.js	/^var searchData=$/;"	v
searchData	html/search/classes_6b.js	/^var searchData=$/;"	v
searchData	html/search/classes_73.js	/^var searchData=$/;"	v
searchData	html/search/functions_61.js	/^var searchData=$/;"	v
searchData	html/search/functions_64.js	/^var searchData=$/;"	v
searchData	html/search/functions_66.js	/^var searchData=$/;"	v
searchData	html/search/functions_67.js	/^var searchData=$/;"	v
searchData	html/search/functions_69.js	/^var searchData=$/;"	v
searchData	html/search/functions_6b.js	/^var searchData=$/;"	v
searchData	html/search/functions_6f.js	/^var searchData=$/;"	v
searchData	html/search/functions_72.js	/^var searchData=$/;"	v
searchData	html/search/functions_73.js	/^var searchData=$/;"	v
searchData	html/search/functions_7e.js	/^var searchData=$/;"	v
searchData	html/search/variables_63.js	/^var searchData=$/;"	v
searchData	html/search/variables_64.js	/^var searchData=$/;"	v
searchData	html/search/variables_69.js	/^var searchData=$/;"	v
searchData	html/search/variables_6c.js	/^var searchData=$/;"	v
searchData	html/search/variables_6f.js	/^var searchData=$/;"	v
searchData	html/search/variables_73.js	/^var searchData=$/;"	v
searchData	html/search/variables_78.js	/^var searchData=$/;"	v
setClassAttr	html/search/search.js	/^function setClassAttr(elem,attr)$/;"	f
setIntImage	fasthessian.cpp	/^void FastHessian::setIntImage(cudaImage *d_img)$/;"	f	class:FastHessian
setIntImage	surf.cpp	/^void Surf::setIntImage(cudaImage *d_img)$/;"	f	class:Surf
setIpoints	surf.cpp	/^Surf::setIpoints(IpVec &ipts)$/;"	f	class:Surf
setKeyActions	html/search/search.js	/^function setKeyActions(elem,action)$/;"	f
showImage	utils.cpp	/^void showImage(IplImage *img)$/;"	f
showImage	utils.cpp	/^void showImage(const char *title, IplImage *img)$/;"	f
strerror_cudpp	cuda/strerror_cudpp.cpp	/^strerror_cudpp(CUDPPResult err)$/;"	f
surf _ cuda Ipoint Struct Reference	latex/structsurf__cudaIpoint.tex	/^\\hypertarget{structsurf__cudaIpoint}{\\section{surf\\-\\_\\-cuda\\-Ipoint Struct Reference}$/;"	s
surfDes	surflib.h	/^inline void surfDes(IplImage *img,  \/* image to find Ipoints in *\/$/;"	f
surfDet	surflib.h	/^inline void surfDet(IplImage *img,  \/* image to find Ipoints in *\/$/;"	f
surfDetDes	surflib.h	/^inline void surfDetDes(IplImage *img,  \/* image to find Ipoints in *\/$/;"	f
surf_cudaIpoint	surf_cudaipoint.h	/^} surf_cudaIpoint;$/;"	t	typeref:struct:__anon2
thres	fasthessian.h	/^    float thres;$/;"	m	class:FastHessian
toggleFolder	html/dynsections.js	/^function toggleFolder(id)$/;"	f
toggleInherit	html/dynsections.js	/^function toggleInherit(id)$/;"	f
toggleLevel	html/dynsections.js	/^function toggleLevel(level)$/;"	f
toggleVisibility	html/dynsections.js	/^function toggleVisibility(linkObj)$/;"	f
translateCorners	ipoint.cpp	/^int translateCorners(IpPairVec &matches, const CvPoint src_corners[4], CvPoint dst_corners[4])$/;"	f
updateStripes	html/dynsections.js	/^function updateStripes()$/;"	f
width	cudaimage.h	/^    int    width;     \/* Image width in pixels. *\/$/;"	m	struct:cudaImage
widthStep	cudaimage.h	/^    size_t widthStep; \/* Size of aligned image row in bytes. *\/$/;"	m	struct:cudaImage
x	fasthessian_cudaipoint.h	/^	float x;$/;"	m	struct:__anon1
x	ipoint.h	/^  float x, y;$/;"	m	class:Ipoint
x	surf_cudaipoint.h	/^	float x, y;$/;"	m	struct:__anon2
y	fasthessian_cudaipoint.h	/^	float y;$/;"	m	struct:__anon1
y	ipoint.h	/^  float x, y;$/;"	m	class:Ipoint
y	surf_cudaipoint.h	/^	float x, y;$/;"	m	struct:__anon2
~FastHessian	fasthessian.cpp	/^FastHessian::~FastHessian()$/;"	f	class:FastHessian
~Ipoint	ipoint.h	/^  ~Ipoint() {};$/;"	f	class:Ipoint
~Kmeans	kmeans.h	/^  ~Kmeans() {};$/;"	f	class:Kmeans
~Surf	surf.cpp	/^Surf::~Surf()$/;"	f	class:Surf
